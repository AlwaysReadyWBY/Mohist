--- a/net/minecraft/resources/RegistryResourceAccess.java
+++ b/net/minecraft/resources/RegistryResourceAccess.java
@@ -47,7 +_,7 @@
 
                      DataResult dataresult;
                      try {
-                        dataresult = this.m_214249_(p_214266_, p_214267_, reader);
+                        dataresult = this.decodeElement(p_214266_, p_214267_, reader, p_214238_);
                      } catch (Throwable throwable1) {
                         if (reader != null) {
                            try {
@@ -82,7 +_,7 @@
 
                      DataResult dataresult;
                      try {
-                        dataresult = this.m_214249_(p_214247_, p_214248_, reader);
+                        dataresult = this.decodeElement(p_214247_, p_214248_, reader, p_214260_);
                      } catch (Throwable throwable1) {
                         if (reader != null) {
                            try {
@@ -107,12 +_,15 @@
             });
          }
 
-         private <E> DataResult<RegistryResourceAccess.ParsedEntry<E>> m_214249_(DynamicOps<JsonElement> p_214250_, Decoder<E> p_214251_, Reader p_214252_) throws IOException {
+         private <E> DataResult<RegistryResourceAccess.ParsedEntry<E>> decodeElement(DynamicOps<JsonElement> p_214250_, Decoder<E> p_214251_, Reader p_214252_, ResourceKey<?> key) throws IOException {
             JsonElement jsonelement = JsonParser.parseReader(p_214252_);
+            if (jsonelement != null) jsonelement.getAsJsonObject().addProperty("forge:registry_name", key.m_135782_().toString());
             return p_214251_.parse(p_214250_, jsonelement).map(RegistryResourceAccess.ParsedEntry::m_195956_);
          }
 
          private static String m_214239_(ResourceLocation p_214240_) {
+            if (net.minecraftforge.registries.RegistryManager.FROZEN.getRegistry(p_214240_) != null && !(p_214240_.m_135827_().equals("minecraft")))
+               return p_214240_.m_135827_() + "/" + p_214240_.m_135815_(); // FORGE: add non-vanilla registry namespace to loader directory, same format as tag directory (see net.minecraft.tags.TagManager#getTagDir(ResourceKey))
             return p_214240_.m_135815_();
          }
 

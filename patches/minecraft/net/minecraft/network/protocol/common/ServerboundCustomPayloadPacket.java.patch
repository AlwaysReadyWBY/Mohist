--- a/net/minecraft/network/protocol/common/ServerboundCustomPayloadPacket.java
+++ b/net/minecraft/network/protocol/common/ServerboundCustomPayloadPacket.java
@@ -9,7 +_,7 @@
 import net.minecraft.network.protocol.common.custom.DiscardedPayload;
 import net.minecraft.resources.ResourceLocation;
 
-public record ServerboundCustomPayloadPacket(CustomPacketPayload payload) implements Packet<ServerCommonPacketListener> {
+public record ServerboundCustomPayloadPacket(CustomPacketPayload payload) implements Packet<ServerCommonPacketListener>, net.minecraftforge.network.ICustomPacket<ServerboundCustomPayloadPacket> {
    private static final int MAX_PAYLOAD_SIZE = 32767;
    private static final Map<ResourceLocation, FriendlyByteBuf.Reader<? extends CustomPacketPayload>> KNOWN_TYPES = ImmutableMap.<ResourceLocation, FriendlyByteBuf.Reader<? extends CustomPacketPayload>>builder().put(BrandPayload.ID, BrandPayload::new).build();
 
@@ -22,11 +_,12 @@
       return (CustomPacketPayload)(reader != null ? reader.apply(p_298967_) : readUnknownPayload(p_301116_, p_298967_));
    }
 
-   private static DiscardedPayload readUnknownPayload(ResourceLocation p_300234_, FriendlyByteBuf p_299925_) {
+   private static UnknownPayload readUnknownPayload(ResourceLocation p_300234_, FriendlyByteBuf p_299925_) {
       int i = p_299925_.readableBytes();
       if (i >= 0 && i <= 32767) {
-         p_299925_.skipBytes(i);
-         return new DiscardedPayload(p_300234_);
+         // CraftBukkit start
+         return new UnknownPayload(p_300234_, p_299925_.readBytes(i));
+         // CraftBukkit end
       } else {
          throw new IllegalArgumentException("Payload may not be larger than 32767 bytes");
       }
@@ -40,4 +_,18 @@
    public void handle(ServerCommonPacketListener p_297991_) {
       p_297991_.handleCustomPayload(this);
    }
+
+   // CraftBukkit start
+   public record UnknownPayload(ResourceLocation id, io.netty.buffer.ByteBuf data) implements CustomPacketPayload {
+
+      @Override
+      public void write(FriendlyByteBuf packetdataserializer) {
+         packetdataserializer.writeBytes(data);
+      }
+   }
+   // CraftBukkit end
+
+   @Override public @org.jetbrains.annotations.Nullable FriendlyByteBuf getInternalData() { return payload instanceof DiscardedPayload dc ? dc.data() : null; }
+   @Override public ResourceLocation getName() { return payload.id(); }
+   @Override public int getIndex() { return 0; }
 }

--- a/net/minecraft/server/players/PlayerList.java
+++ b/net/minecraft/server/players/PlayerList.java
@@ -11,18 +_,19 @@
 import java.net.SocketAddress;
 import java.nio.file.Path;
 import java.text.SimpleDateFormat;
-import java.time.Instant;
 import java.util.EnumSet;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Optional;
 import java.util.Set;
 import java.util.UUID;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.function.Function;
 import java.util.function.Predicate;
+import java.util.stream.Collectors;
 import javax.annotation.Nullable;
 import net.minecraft.ChatFormatting;
-import net.minecraft.FileUtil;
 import net.minecraft.commands.CommandSourceStack;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.LayeredRegistryAccess;
@@ -72,9 +_,11 @@
 import net.minecraft.server.PlayerAdvancements;
 import net.minecraft.server.RegistryLayer;
 import net.minecraft.server.ServerScoreboard;
+import net.minecraft.server.dedicated.DedicatedServer;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.server.network.ServerGamePacketListenerImpl;
+import net.minecraft.server.network.ServerLoginPacketListenerImpl;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.stats.ServerStatsCounter;
@@ -102,6 +_,18 @@
 import net.minecraft.world.scores.Objective;
 import net.minecraft.world.scores.PlayerTeam;
 import net.minecraft.world.scores.Team;
+import org.bukkit.Location;
+import org.bukkit.Server;
+import org.bukkit.craftbukkit.v1_19_R3.CraftServer;
+import org.bukkit.craftbukkit.v1_19_R3.CraftWorld;
+import org.bukkit.craftbukkit.v1_19_R3.command.ColouredConsoleSender;
+import org.bukkit.craftbukkit.v1_19_R3.command.ConsoleCommandCompleter;
+import org.bukkit.craftbukkit.v1_19_R3.entity.CraftPlayer;
+import org.bukkit.craftbukkit.v1_19_R3.util.CraftChatMessage;
+import org.bukkit.event.player.PlayerJoinEvent;
+import org.bukkit.event.player.PlayerLoginEvent;
+import org.bukkit.event.player.PlayerQuitEvent;
+import org.bukkit.event.player.PlayerRespawnEvent;
 import org.slf4j.Logger;
 
 public abstract class PlayerList {
@@ -114,7 +_,7 @@
    private static final int f_143987_ = 600;
    private static final SimpleDateFormat f_11194_ = new SimpleDateFormat("yyyy-MM-dd 'at' HH:mm:ss z");
    private final MinecraftServer f_11195_;
-   public final List<ServerPlayer> f_11196_ = Lists.newArrayList();
+   public final List<ServerPlayer> f_11196_ = new CopyOnWriteArrayList<>(); // CraftBukkit - ArrayList -> CopyOnWriteArrayList: Iterator safety
    private final Map<UUID, ServerPlayer> f_11197_ = Maps.newHashMap();
    private final UserBanList f_11198_ = new UserBanList(f_11189_);
    private final IpBanList f_11199_ = new IpBanList(f_11190_);
@@ -132,8 +_,16 @@
    private boolean f_11209_;
    private static final boolean f_143988_ = false;
    private int f_11210_;
+   private final List<ServerPlayer> playersView = java.util.Collections.unmodifiableList(f_11196_);
+
+   // CraftBukkit start
+   private CraftServer cserver;
 
    public PlayerList(MinecraftServer p_203842_, LayeredRegistryAccess<RegistryLayer> p_251844_, PlayerDataStorage p_203844_, int p_203845_) {
+      this.cserver = p_203842_.server = new CraftServer((DedicatedServer) p_203842_, this);
+      p_203842_.console = ColouredConsoleSender.getInstance();
+      p_203842_.reader.addCompleter(new ConsoleCommandCompleter(p_203842_.server));
+      // CraftBukkit end
       this.f_11195_ = p_203842_;
       this.f_243858_ = p_251844_;
       this.f_256838_ = (new RegistryAccess.ImmutableRegistryAccess(RegistrySynchronization.m_257599_(p_251844_))).m_203557_();
@@ -148,6 +_,12 @@
       String s = optional.map(GameProfile::getName).orElse(gameprofile.getName());
       gameprofilecache.m_10991_(gameprofile);
       CompoundTag compoundtag = this.m_11224_(p_11263_);
+      // CraftBukkit start - Better rename detection
+      if (compoundtag != null && compoundtag.m_128441_("bukkit")) {
+         CompoundTag bukkit = compoundtag.m_128469_("bukkit");
+         s = bukkit.m_128425_("lastKnownName", 8) ? bukkit.m_128461_("lastKnownName") : s;
+      }
+      // CraftBukkit end
       ResourceKey<Level> resourcekey = compoundtag != null ? DimensionType.m_63911_(new Dynamic<>(NbtOps.f_128958_, compoundtag.m_128423_("Dimension"))).resultOrPartial(f_11188_::error).orElse(Level.f_46428_) : Level.f_46428_;
       ServerLevel serverlevel = this.f_11195_.m_129880_(resourcekey);
       ServerLevel serverlevel1;
@@ -161,22 +_,37 @@
       p_11263_.m_143425_(serverlevel1);
       String s1 = "local";
       if (p_11262_.m_129523_() != null) {
-         s1 = p_11262_.m_129523_().toString();
+         s1 = net.minecraftforge.network.DualStackUtils.getAddressString(p_11262_.m_129523_());
       }
 
-      f_11188_.info("{}[{}] logged in with entity id {} at ({}, {}, {})", p_11263_.m_7755_().getString(), s1, p_11263_.m_19879_(), p_11263_.m_20185_(), p_11263_.m_20186_(), p_11263_.m_20189_());
+      // Spigot start - spawn location event
+      org.bukkit.entity.Player spawnPlayer = p_11263_.getBukkitEntity();
+      org.spigotmc.event.player.PlayerSpawnLocationEvent ev = new org.spigotmc.event.player.PlayerSpawnLocationEvent(spawnPlayer, spawnPlayer.getLocation());
+      cserver.getPluginManager().callEvent(ev);
+
+      Location loc = ev.getSpawnLocation();
+      serverlevel1 = ((CraftWorld) loc.getWorld()).getHandle();
+
+      p_11263_.spawnIn(serverlevel1);
+      p_11263_.f_8941_.m_9260_((ServerLevel) p_11263_.f_19853_);
+      p_11263_.m_19890_(loc.getX(), loc.getY(), loc.getZ(), loc.getYaw(), loc.getPitch());
+      // Spigot end
+
       LevelData leveldata = serverlevel1.m_6106_();
       p_11263_.m_143427_(compoundtag);
       ServerGamePacketListenerImpl servergamepacketlistenerimpl = new ServerGamePacketListenerImpl(this.f_11195_, p_11262_, p_11263_);
+      net.minecraftforge.network.NetworkHooks.sendMCRegistryPackets(p_11262_, "PLAY_TO_CLIENT");
       GameRules gamerules = serverlevel1.m_46469_();
       boolean flag = gamerules.m_46207_(GameRules.f_46156_);
       boolean flag1 = gamerules.m_46207_(GameRules.f_46145_);
-      servergamepacketlistenerimpl.m_9829_(new ClientboundLoginPacket(p_11263_.m_19879_(), leveldata.m_5466_(), p_11263_.f_8941_.m_9290_(), p_11263_.f_8941_.m_9293_(), this.f_11195_.m_129784_(), this.f_256838_, serverlevel1.m_220362_(), serverlevel1.m_46472_(), BiomeManager.m_47877_(serverlevel1.m_7328_()), this.m_11310_(), this.f_11207_, this.f_184208_, flag1, !flag, serverlevel1.m_46659_(), serverlevel1.m_8584_(), p_11263_.m_219759_()));
+      // Spigot - view distance
+      servergamepacketlistenerimpl.m_9829_(new ClientboundLoginPacket(p_11263_.m_19879_(), leveldata.m_5466_(), p_11263_.f_8941_.m_9290_(), p_11263_.f_8941_.m_9293_(), this.f_11195_.m_129784_(), this.f_256838_, serverlevel1.m_220362_(), serverlevel1.m_46472_(), BiomeManager.m_47877_(serverlevel1.m_7328_()), this.m_11310_(), serverlevel1.spigotConfig.viewDistance, serverlevel1.spigotConfig.simulationDistance, flag1, !flag, serverlevel1.m_46659_(), serverlevel1.m_8584_(), p_11263_.m_219759_()));
       servergamepacketlistenerimpl.m_9829_(new ClientboundUpdateEnabledFeaturesPacket(FeatureFlags.f_244280_.m_245829_(serverlevel1.m_246046_())));
       servergamepacketlistenerimpl.m_9829_(new ClientboundCustomPayloadPacket(ClientboundCustomPayloadPacket.f_132012_, (new FriendlyByteBuf(Unpooled.buffer())).m_130070_(this.m_7873_().m_130001_())));
       servergamepacketlistenerimpl.m_9829_(new ClientboundChangeDifficultyPacket(leveldata.m_5472_(), leveldata.m_5474_()));
       servergamepacketlistenerimpl.m_9829_(new ClientboundPlayerAbilitiesPacket(p_11263_.m_150110_()));
       servergamepacketlistenerimpl.m_9829_(new ClientboundSetCarriedItemPacket(p_11263_.m_150109_().f_35977_));
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.OnDatapackSyncEvent(this, p_11263_));
       servergamepacketlistenerimpl.m_9829_(new ClientboundUpdateRecipesPacket(this.f_11195_.m_129894_().m_44051_()));
       servergamepacketlistenerimpl.m_9829_(new ClientboundUpdateTagsPacket(TagNetworkSerialization.m_245799_(this.f_243858_)));
       this.m_11289_(p_11263_);
@@ -191,7 +_,10 @@
          mutablecomponent = Component.m_237110_("multiplayer.player.joined.renamed", p_11263_.m_5446_(), s);
       }
 
-      this.m_240416_(mutablecomponent.m_130940_(ChatFormatting.YELLOW), false);
+      // CraftBukkit start
+      mutablecomponent.m_130940_(ChatFormatting.YELLOW);
+      String joinMessage = CraftChatMessage.fromComponent(mutablecomponent);
+
       servergamepacketlistenerimpl.m_9774_(p_11263_.m_20185_(), p_11263_.m_20186_(), p_11263_.m_20189_(), p_11263_.m_146908_(), p_11263_.m_146909_());
       ServerStatus serverstatus = this.f_11195_.m_129928_();
       if (serverstatus != null) {
@@ -201,10 +_,58 @@
       p_11263_.f_8906_.m_9829_(ClientboundPlayerInfoUpdatePacket.m_247122_(this.f_11196_));
       this.f_11196_.add(p_11263_);
       this.f_11197_.put(p_11263_.m_20148_(), p_11263_);
-      this.m_11268_(ClientboundPlayerInfoUpdatePacket.m_247122_(List.of(p_11263_)));
+
+      // CraftBukkit start
+      CraftPlayer bukkitPlayer = p_11263_.getBukkitEntity();
+
+      // Ensure that player inventory is populated with its viewer
+      p_11263_.f_36096_.transferTo(p_11263_.f_36096_, bukkitPlayer);
+
+      PlayerJoinEvent playerJoinEvent = new PlayerJoinEvent(bukkitPlayer, joinMessage);
+      cserver.getPluginManager().callEvent(playerJoinEvent);
+
+      if (!p_11263_.f_8906_.f_9742_.m_129536_()) {
+         return;
+      }
+
+      joinMessage = playerJoinEvent.getJoinMessage();
+
+      if (joinMessage != null && !joinMessage.isEmpty()) {
+         for (Component line : CraftChatMessage.fromString(joinMessage)) {
+            f_11195_.m_6846_().m_240416_(line, false);
+         }
+      }
+      // CraftBukkit end
+
+      // CraftBukkit start - sendAll above replaced with this loop
+      ClientboundPlayerInfoUpdatePacket packet = ClientboundPlayerInfoUpdatePacket.m_247122_(List.of(p_11263_));
+
+      for (ServerPlayer player : this.f_11196_) {
+
+         if (player.getBukkitEntity().canSee(bukkitPlayer)) {
+            player.f_8906_.m_9829_(packet);
+         }
+
+         if (!bukkitPlayer.canSee(player.getBukkitEntity())) {
+            continue;
+         }
+
+         p_11263_.f_8906_.m_9829_(ClientboundPlayerInfoUpdatePacket.m_247122_(List.of(player)));
+      }
+      p_11263_.sentListPacket = true;
+      // CraftBukkit end
+
+      p_11263_.m_20088_().refresh(p_11263_); // CraftBukkit - BungeeCord#2321, send complete data to self on spawn
+
       this.m_11229_(p_11263_, serverlevel1);
-      serverlevel1.m_8834_(p_11263_);
-      this.f_11195_.m_129901_().m_136293_(p_11263_);
+
+      // CraftBukkit start - Only add if the player wasn't moved in the event
+      if (p_11263_.f_19853_ == serverlevel1 && !serverlevel1.m_6907_().contains(p_11263_)) {
+         serverlevel1.m_8834_(p_11263_);
+         this.f_11195_.m_129901_().m_136293_(p_11263_);
+      }
+      serverlevel1 = p_11263_.m_9236_(); // CraftBukkit - Update in case join event changed it
+      // CraftBukkit end
       this.f_11195_.m_214042_().ifPresent((p_215606_) -> {
          p_11263_.m_143408_(p_215606_.f_236743_(), p_215606_.f_236744_(), p_215606_.f_236745_(), p_215606_.f_236746_());
       });
@@ -215,8 +_,9 @@
 
       if (compoundtag != null && compoundtag.m_128425_("RootVehicle", 10)) {
          CompoundTag compoundtag1 = compoundtag.m_128469_("RootVehicle");
-         Entity entity1 = EntityType.m_20645_(compoundtag1.m_128469_("Entity"), serverlevel1, (p_215603_) -> {
-            return !serverlevel1.m_8847_(p_215603_) ? null : p_215603_;
+         ServerLevel finalServerlevel = serverlevel1;
+         Entity entity1 = EntityType.m_20645_(compoundtag1.m_128469_("Entity"), finalServerlevel, (p_215603_) -> {
+            return !finalServerlevel.m_8847_(p_215603_) ? null : p_215603_;
          });
          if (entity1 != null) {
             UUID uuid;
@@ -249,9 +_,11 @@
       }
 
       p_11263_.m_143429_();
+      net.minecraftforge.event.ForgeEventFactory.firePlayerLoggedIn( p_11263_ );
+      f_11188_.info("{}[{}] logged in with entity id {} at ([{}]{}, {}, {})", p_11263_.m_7755_().getString(), s1, p_11263_.m_19879_(), serverlevel1.serverLevelDataCB.m_5462_(), p_11263_.m_20185_(), p_11263_.m_20186_(), p_11263_.m_20189_());
    }
 
-   protected void m_11273_(ServerScoreboard p_11274_, ServerPlayer p_11275_) {
+   public void m_11273_(ServerScoreboard p_11274_, ServerPlayer p_11275_) {
       Set<Objective> set = Sets.newHashSet();
 
       for(PlayerTeam playerteam : p_11274_.m_83491_()) {
@@ -272,6 +_,7 @@
    }
 
    public void m_184209_(ServerLevel p_184210_) {
+      if (f_11204_ != null) return; // CraftBukkit
       p_184210_.m_6857_().m_61929_(new BorderChangeListener() {
          public void m_6312_(WorldBorder p_11321_, double p_11322_) {
             PlayerList.this.m_11268_(new ClientboundSetBorderSizePacket(p_11321_));
@@ -309,6 +_,7 @@
          compoundtag1 = compoundtag;
          p_11225_.m_20258_(compoundtag);
          f_11188_.debug("loading single player");
+         net.minecraftforge.event.ForgeEventFactory.firePlayerLoadingEvent(p_11225_, this.f_11204_, p_11225_.m_20148_().toString());
       } else {
          compoundtag1 = this.f_11204_.m_78435_(p_11225_);
       }
@@ -317,6 +_,7 @@
    }
 
    protected void m_6765_(ServerPlayer p_11277_) {
+      if (!p_11277_.getBukkitEntity().isPersistent()) return; // CraftBukkit
       this.f_11204_.m_78433_(p_11277_);
       ServerStatsCounter serverstatscounter = this.f_11202_.get(p_11277_.m_20148_());
       if (serverstatscounter != null) {
@@ -330,9 +_,25 @@
 
    }
 
-   public void m_11286_(ServerPlayer p_11287_) {
+   public String remove(ServerPlayer p_11287_) { // CraftBukkit - return string
+      net.minecraftforge.event.ForgeEventFactory.firePlayerLoggedOut(p_11287_);
       ServerLevel serverlevel = p_11287_.m_9236_();
       p_11287_.m_36220_(Stats.f_12989_);
+
+      // CraftBukkit start - Quitting must be before we do final save of data, in case plugins need to modify it
+      // See SPIGOT-5799, SPIGOT-6145
+      if (p_11287_.f_36096_ != p_11287_.f_36095_) {
+         p_11287_.m_6915_();
+      }
+
+      PlayerQuitEvent playerQuitEvent = new PlayerQuitEvent(p_11287_.getBukkitEntity(), p_11287_.kickLeaveMessage != null ? p_11287_.kickLeaveMessage : "\u00A7e" + p_11287_.m_6302_() + " left the game");
+      cserver.getPluginManager().callEvent(playerQuitEvent);
+      p_11287_.getBukkitEntity().disconnect(playerQuitEvent.getQuitMessage());
+
+      p_11287_.m_9240_(); // SPIGOT-924
+      // CraftBukkit end
+
+
       this.m_6765_(p_11287_);
       if (p_11287_.m_20159_()) {
          Entity entity = p_11287_.m_20201_();
@@ -354,62 +_,129 @@
       ServerPlayer serverplayer = this.f_11197_.get(uuid);
       if (serverplayer == p_11287_) {
          this.f_11197_.remove(uuid);
-         this.f_11202_.remove(uuid);
-         this.f_11203_.remove(uuid);
-      }
-
-      this.m_11268_(new ClientboundPlayerInfoRemovePacket(List.of(p_11287_.m_20148_())));
+      }
+
+      // CraftBukkit start
+      ClientboundPlayerInfoRemovePacket packet = new ClientboundPlayerInfoRemovePacket(List.of(p_11287_.m_20148_()));
+      for (ServerPlayer player : f_11196_) {
+
+         if (player.getBukkitEntity().canSee(p_11287_.getBukkitEntity())) {
+            player.f_8906_.m_9829_(packet);
+         } else {
+            player.getBukkitEntity().onEntityRemove(p_11287_);
+         }
+      }
+      // This removes the scoreboard (and player reference) for the specific player in the manager
+      cserver.getScoreboardManager().removePlayer(p_11287_.getBukkitEntity());
+      // CraftBukkit end
+
+      return playerQuitEvent.getQuitMessage(); // CraftBukkit
    }
 
-   @Nullable
-   public Component m_6418_(SocketAddress p_11257_, GameProfile p_11258_) {
-      if (this.f_11198_.m_11406_(p_11258_)) {
+   // CraftBukkit start - Whole method, SocketAddress to LoginListener, added hostname to signature, return EntityPlayer
+   public ServerPlayer canPlayerLogin(ServerLoginPacketListenerImpl loginlistener, GameProfile p_11258_) {
+      MutableComponent mutablecomponent1 = Component.m_237119_();
+      // Moved from processLogin
+      UUID uuid = UUIDUtil.m_235875_(p_11258_);
+      List<ServerPlayer> list = Lists.newArrayList();
+
+      ServerPlayer entityplayer;
+
+      for (int i = 0; i < this.f_11196_.size(); ++i) {
+         entityplayer = (ServerPlayer) this.f_11196_.get(i);
+         if (entityplayer.m_20148_().equals(uuid)) {
+            list.add(entityplayer);
+         }
+      }
+
+      Iterator iterator = list.iterator();
+      while (iterator.hasNext()) {
+         entityplayer = (ServerPlayer) iterator.next();
+         m_6765_(entityplayer); // CraftBukkit - Force the player's inventory to be saved
+         entityplayer.f_8906_.m_9942_(Component.m_237115_("multiplayer.disconnect.duplicate_login"));
+      }
+
+      // Instead of kicking then returning, we need to store the kick reason
+      // in the event, check with plugins to see if it's ok, and THEN kick
+      // depending on the outcome.
+      SocketAddress socketaddress = loginlistener.f_10013_.m_129523_();
+
+      ServerPlayer entity = new ServerPlayer(this.f_11195_, this.f_11195_.m_129880_(Level.f_46428_), p_11258_);
+      org.bukkit.entity.Player player = entity.getBukkitEntity();
+      PlayerLoginEvent event = new PlayerLoginEvent(player, loginlistener.f_10013_.hostname, ((java.net.InetSocketAddress) socketaddress).getAddress());
+
+      if (m_11295_().m_11406_(p_11258_) && !m_11295_().m_11388_(p_11258_).m_7524_()) {
          UserBanListEntry userbanlistentry = this.f_11198_.m_11388_(p_11258_);
-         MutableComponent mutablecomponent1 = Component.m_237110_("multiplayer.disconnect.banned.reason", userbanlistentry.m_10962_());
+         mutablecomponent1 = Component.m_237110_("multiplayer.disconnect.banned.reason", userbanlistentry.m_10962_());
          if (userbanlistentry.m_10961_() != null) {
             mutablecomponent1.m_7220_(Component.m_237110_("multiplayer.disconnect.banned.expiration", f_11194_.format(userbanlistentry.m_10961_())));
          }
 
-         return mutablecomponent1;
+         event.disallow(PlayerLoginEvent.Result.KICK_BANNED, org.spigotmc.SpigotConfig.whitelistMessage); // Spigot
       } else if (!this.m_5764_(p_11258_)) {
-         return Component.m_237115_("multiplayer.disconnect.not_whitelisted");
-      } else if (this.f_11199_.m_11041_(p_11257_)) {
-         IpBanListEntry ipbanlistentry = this.f_11199_.m_11043_(p_11257_);
-         MutableComponent mutablecomponent = Component.m_237110_("multiplayer.disconnect.banned_ip.reason", ipbanlistentry.m_10962_());
+         mutablecomponent1 = Component.m_237115_("multiplayer.disconnect.not_whitelisted");
+         event.disallow(PlayerLoginEvent.Result.KICK_WHITELIST, CraftChatMessage.fromComponent(mutablecomponent1));
+      } else if (m_11299_().m_11041_(socketaddress) && !m_11299_().m_11043_(socketaddress).m_7524_()) {
+         IpBanListEntry ipbanlistentry = this.f_11199_.m_11043_(socketaddress);
+         mutablecomponent1 = Component.m_237110_("multiplayer.disconnect.banned_ip.reason", ipbanlistentry.m_10962_());
          if (ipbanlistentry.m_10961_() != null) {
-            mutablecomponent.m_7220_(Component.m_237110_("multiplayer.disconnect.banned_ip.expiration", f_11194_.format(ipbanlistentry.m_10961_())));
+            mutablecomponent1.m_7220_(Component.m_237110_("multiplayer.disconnect.banned_ip.expiration", f_11194_.format(ipbanlistentry.m_10961_())));
          }
 
-         return mutablecomponent;
+         event.disallow(PlayerLoginEvent.Result.KICK_BANNED, CraftChatMessage.fromComponent(mutablecomponent1));
       } else {
-         return this.f_11196_.size() >= this.f_11193_ && !this.m_5765_(p_11258_) ? Component.m_237115_("multiplayer.disconnect.server_full") : null;
-      }
+         if (this.f_11196_.size() >= this.f_11193_ && !this.m_5765_(p_11258_)) {
+            event.disallow(PlayerLoginEvent.Result.KICK_FULL, org.spigotmc.SpigotConfig.serverFullMessage); // Spigot
+         }
+      }
+
+      cserver.getPluginManager().callEvent(event);
+      if (event.getResult() != PlayerLoginEvent.Result.ALLOWED) {
+         loginlistener.disconnect(event.getKickMessage());
+         return null;
+      }
+      return entity;
    }
 
-   public ServerPlayer m_215624_(GameProfile p_215625_) {
-      UUID uuid = UUIDUtil.m_235875_(p_215625_);
+   public ServerPlayer getPlayerForLogin(GameProfile p_215625_, ServerPlayer player) { // CraftBukkit - added EntityPlayer
+      /* CraftBukkit start Moved up
+      UUID uuid = UUIDUtil.getOrCreatePlayerUUID(p_215625_);
       List<ServerPlayer> list = Lists.newArrayList();
 
-      for(int i = 0; i < this.f_11196_.size(); ++i) {
-         ServerPlayer serverplayer = this.f_11196_.get(i);
-         if (serverplayer.m_20148_().equals(uuid)) {
+      for(int i = 0; i < this.players.size(); ++i) {
+         ServerPlayer serverplayer = this.players.get(i);
+         if (serverplayer.getUUID().equals(uuid)) {
             list.add(serverplayer);
          }
       }
 
-      ServerPlayer serverplayer2 = this.f_11197_.get(p_215625_.getId());
+      ServerPlayer serverplayer2 = this.playersByUUID.get(p_215625_.getId());
       if (serverplayer2 != null && !list.contains(serverplayer2)) {
          list.add(serverplayer2);
       }
 
       for(ServerPlayer serverplayer1 : list) {
-         serverplayer1.f_8906_.m_9942_(Component.m_237115_("multiplayer.disconnect.duplicate_login"));
+         serverplayer1.connection.disconnect(Component.translatable("multiplayer.disconnect.duplicate_login"));
       }
 
-      return new ServerPlayer(this.f_11195_, this.f_11195_.m_129783_(), p_215625_);
-   }
+      return new ServerPlayer(this.server, this.server.overworld(), p_215625_);
+      */
+      return player;
+      // CraftBukkit end
+   }
+
+   // Mohist TODO start
+   public ServerPlayer respawn(ServerPlayer p_11237_, ServerLevel worldserver, boolean p_11238_, Location location, boolean avoidSuffocation, PlayerRespawnEvent.RespawnReason reason) {
+      return null;
+   }
+
+   public ServerPlayer respawn(ServerPlayer p_11237_, boolean p_11238_, PlayerRespawnEvent.RespawnReason reason) {
+      return m_11236_(p_11237_, p_11238_);
+   }
+   // Mohist TODO end
 
    public ServerPlayer m_11236_(ServerPlayer p_11237_, boolean p_11238_) {
+      p_11237_.m_8127_(); // CraftBukkit
       this.f_11196_.remove(p_11237_);
       p_11237_.m_9236_().m_143261_(p_11237_, Entity.RemovalReason.DISCARDED);
       BlockPos blockpos = p_11237_.m_8961_();
@@ -461,6 +_,8 @@
       byte b0 = (byte)(p_11238_ ? 1 : 0);
       LevelData leveldata = serverplayer.f_19853_.m_6106_();
       serverplayer.f_8906_.m_9829_(new ClientboundRespawnPacket(serverplayer.f_19853_.m_220362_(), serverplayer.f_19853_.m_46472_(), BiomeManager.m_47877_(serverplayer.m_9236_().m_7328_()), serverplayer.f_8941_.m_9290_(), serverplayer.f_8941_.m_9293_(), serverplayer.m_9236_().m_46659_(), serverplayer.m_9236_().m_8584_(), b0, serverplayer.m_219759_()));
+      serverplayer.f_8906_.m_9829_(new ClientboundSetChunkCacheRadiusPacket(serverlevel1.spigotConfig.viewDistance)); // Spigot
+      serverplayer.f_8906_.m_9829_(new ClientboundSetSimulationDistancePacket(serverlevel1.spigotConfig.simulationDistance)); // Spigot
       serverplayer.f_8906_.m_9774_(serverplayer.m_20185_(), serverplayer.m_20186_(), serverplayer.m_20189_(), serverplayer.m_146908_(), serverplayer.m_146909_());
       serverplayer.f_8906_.m_9829_(new ClientboundSetDefaultSpawnPositionPacket(serverlevel1.m_220360_(), serverlevel1.m_220361_()));
       serverplayer.f_8906_.m_9829_(new ClientboundChangeDifficultyPacket(leveldata.m_5472_(), leveldata.m_5474_()));
@@ -472,6 +_,7 @@
       this.f_11197_.put(serverplayer.m_20148_(), serverplayer);
       serverplayer.m_143429_();
       serverplayer.m_21153_(serverplayer.m_21223_());
+      net.minecraftforge.event.ForgeEventFactory.firePlayerRespawnEvent(serverplayer, p_11238_);
       if (flag2) {
          serverplayer.f_8906_.m_9829_(new ClientboundSoundPacket(SoundEvents.f_12377_, SoundSource.BLOCKS, (double)blockpos.m_123341_(), (double)blockpos.m_123342_(), (double)blockpos.m_123343_(), 1.0F, 1.0F, serverlevel1.m_213780_().m_188505_()));
       }
@@ -487,7 +_,18 @@
 
    public void m_11288_() {
       if (++this.f_11210_ > 600) {
-         this.m_11268_(new ClientboundPlayerInfoUpdatePacket(EnumSet.of(ClientboundPlayerInfoUpdatePacket.Action.UPDATE_LATENCY), this.f_11196_));
+         // CraftBukkit start
+         for (int i = 0; i < this.f_11196_.size(); ++i) {
+             final ServerPlayer target = (ServerPlayer) this.f_11196_.get(i);
+
+             target.f_8906_.m_9829_(new ClientboundPlayerInfoUpdatePacket(EnumSet.of(ClientboundPlayerInfoUpdatePacket.Action.UPDATE_LATENCY), this.f_11196_.stream().filter(new Predicate<ServerPlayer>() {
+                 @Override
+                 public boolean test(ServerPlayer input) {
+                     return target.getBukkitEntity().canSee(input.getBukkitEntity());
+                 }
+             }).collect(Collectors.toList())));
+         }
+         // CraftBukkit end
          this.f_11210_ = 0;
       }
 
@@ -500,6 +_,25 @@
 
    }
 
+   // CraftBukkit start - add a world/entity limited version
+   public void broadcastAll(Packet<?>  packet, Player entityhuman) {
+      for (int i = 0; i < this.f_11196_.size(); ++i) {
+         ServerPlayer entityplayer =  this.f_11196_.get(i);
+         if (entityhuman != null && !entityplayer.getBukkitEntity().canSee(entityhuman.getBukkitEntity())) {
+            continue;
+         }
+         ((ServerPlayer) this.f_11196_.get(i)).f_8906_.m_9829_(packet);
+      }
+   }
+
+   public void broadcastAll(Packet<?>  packet, Level world) {
+      for (int i = 0; i < world.m_6907_().size(); ++i) {
+         ((ServerPlayer) world.m_6907_().get(i)).f_8906_.m_9829_(packet);
+      }
+
+   }
+   // CraftBukkit end
+
    public void m_11270_(Packet<?> p_11271_, ResourceKey<Level> p_11272_) {
       for(ServerPlayer serverplayer : this.f_11196_) {
          if (serverplayer.f_19853_.m_46472_() == p_11272_) {
@@ -556,6 +_,7 @@
    }
 
    public void m_5749_(GameProfile p_11254_) {
+      if (net.minecraftforge.event.ForgeEventFactory.onPermissionChanged(p_11254_, this.f_11195_.m_7022_(), this)) return;
       this.f_11200_.m_11381_(new ServerOpListEntry(p_11254_, this.f_11195_.m_7022_(), this.f_11200_.m_11351_(p_11254_)));
       ServerPlayer serverplayer = this.m_11259_(p_11254_.getId());
       if (serverplayer != null) {
@@ -565,6 +_,7 @@
    }
 
    public void m_5750_(GameProfile p_11281_) {
+      if (net.minecraftforge.event.ForgeEventFactory.onPermissionChanged(p_11281_, 0, this)) return;
       this.f_11200_.m_11393_(p_11281_);
       ServerPlayer serverplayer = this.m_11259_(p_11281_.getId());
       if (serverplayer != null) {
@@ -587,6 +_,7 @@
          p_11227_.f_8906_.m_9829_(new ClientboundEntityEventPacket(p_11227_, b0));
       }
 
+      p_11227_.getBukkitEntity().recalculatePermissions(); // CraftBukkit
       this.f_11195_.m_129892_().m_82095_(p_11227_);
    }
 
@@ -612,6 +_,13 @@
    public void m_11241_(@Nullable Player p_11242_, double p_11243_, double p_11244_, double p_11245_, double p_11246_, ResourceKey<Level> p_11247_, Packet<?> p_11248_) {
       for(int i = 0; i < this.f_11196_.size(); ++i) {
          ServerPlayer serverplayer = this.f_11196_.get(i);
+
+         // CraftBukkit start - Test if player receiving packet can see the source of the packet
+          if (p_11242_ != null && !serverplayer.getBukkitEntity().canSee(p_11242_.getBukkitEntity())) {
+              continue;
+          }
+          // CraftBukkit end
+
          if (serverplayer != p_11242_ && serverplayer.f_19853_.m_46472_() == p_11247_) {
             double d0 = p_11243_ - serverplayer.m_20185_();
             double d1 = p_11244_ - serverplayer.m_20186_();
@@ -651,22 +_,31 @@
    }
 
    public void m_11229_(ServerPlayer p_11230_, ServerLevel p_11231_) {
-      WorldBorder worldborder = this.f_11195_.m_129783_().m_6857_();
+      WorldBorder worldborder = p_11230_.f_19853_.m_6857_();
       p_11230_.f_8906_.m_9829_(new ClientboundInitializeBorderPacket(worldborder));
       p_11230_.f_8906_.m_9829_(new ClientboundSetTimePacket(p_11231_.m_46467_(), p_11231_.m_46468_(), p_11231_.m_46469_().m_46207_(GameRules.f_46140_)));
       p_11230_.f_8906_.m_9829_(new ClientboundSetDefaultSpawnPositionPacket(p_11231_.m_220360_(), p_11231_.m_220361_()));
       if (p_11231_.m_46471_()) {
-         p_11230_.f_8906_.m_9829_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132154_, 0.0F));
-         p_11230_.f_8906_.m_9829_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132160_, p_11231_.m_46722_(1.0F)));
-         p_11230_.f_8906_.m_9829_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132161_, p_11231_.m_46661_(1.0F)));
+          // CraftBukkit start - handle player weather
+          p_11230_.setPlayerWeather(org.bukkit.WeatherType.DOWNFALL, false);
+          p_11230_.updateWeather(-p_11231_.f_46438_, p_11231_.f_46438_, -p_11231_.f_46440_, p_11231_.f_46440_);
+          // CraftBukkit end
       }
 
    }
 
    public void m_11292_(ServerPlayer p_11293_) {
-      p_11293_.f_36095_.m_150429_();
-      p_11293_.m_9233_();
-      p_11293_.f_8906_.m_9829_(new ClientboundSetCarriedItemPacket(p_11293_.m_150109_().f_35977_));
+       p_11293_.f_36095_.m_150429_();
+       // p_11293_.resetSentInfo();
+       p_11293_.getBukkitEntity().updateScaledHealth(); // CraftBukkit - Update scaled health on respawn and worldchange
+       // p_11293_.getEntityData().refresh(p_11293_); // CraftBukkkit - SPIGOT-7218: sync metadata
+       p_11293_.f_8906_.m_9829_(new ClientboundSetCarriedItemPacket(p_11293_.m_150109_().f_35977_));
+       // CraftBukkit start - from GameRules
+       int i = p_11293_.f_19853_.m_46469_().m_46207_(GameRules.f_46145_) ? 22 : 23;
+       p_11293_.f_8906_.m_9829_(new ClientboundEntityEventPacket(p_11293_, (byte) i));
+       float immediateRespawn = p_11293_.f_19853_.m_46469_().m_46207_(GameRules.f_46156_) ? 1.0F : 0.0F;
+       p_11293_.f_8906_.m_9829_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132164_, immediateRespawn));
+       // CraftBukkit end
    }
 
    public int m_11309_() {
@@ -719,11 +_,21 @@
    }
 
    public void m_11313_() {
-      for(int i = 0; i < this.f_11196_.size(); ++i) {
-         (this.f_11196_.get(i)).f_8906_.m_9942_(Component.m_237115_("multiplayer.disconnect.server_shutdown"));
-      }
-
-   }
+      // CraftBukkit start - disconnect safely
+      for (ServerPlayer player : this.f_11196_) {
+         player.f_8906_.disconnect(this.f_11195_.server.getShutdownMessage()); // CraftBukkit - add custom shutdown message
+      }
+      // CraftBukkit end
+
+   }
+
+   // CraftBukkit start
+   public void broadcastMessage(Component[] iChatBaseComponents) {
+      for (Component component : iChatBaseComponents) {
+         m_240416_(component, false);
+      }
+   }
+   // CraftBukkit end
 
    public void m_240416_(Component p_240618_, boolean p_240644_) {
       this.m_240502_(p_240618_, (p_215639_) -> {
@@ -770,22 +_,15 @@
    }
 
    private boolean m_247528_(PlayerChatMessage p_251384_) {
-      return p_251384_.m_245272_() && !p_251384_.m_240431_(Instant.now());
+      return true; // Mohist chat verify
    }
 
-   public ServerStatsCounter m_11239_(Player p_11240_) {
+   public ServerStatsCounter m_11239_(Player p_11240_) { // Mohist TODO
       UUID uuid = p_11240_.m_20148_();
       ServerStatsCounter serverstatscounter = this.f_11202_.get(uuid);
       if (serverstatscounter == null) {
          File file1 = this.f_11195_.m_129843_(LevelResource.f_78175_).toFile();
          File file2 = new File(file1, uuid + ".json");
-         if (!file2.exists()) {
-            File file3 = new File(file1, p_11240_.m_7755_().getString() + ".json");
-            Path path = file3.toPath();
-            if (FileUtil.m_133728_(path) && FileUtil.m_133734_(path) && path.startsWith(file1.getPath()) && file3.isFile()) {
-               file3.renameTo(file2);
-            }
-         }
 
          serverstatscounter = new ServerStatsCounter(this.f_11195_, file2);
          this.f_11202_.put(uuid, serverstatscounter);
@@ -794,6 +_,26 @@
       return serverstatscounter;
    }
 
+   public ServerStatsCounter getPlayerStats(UUID uuid, String displayName) {
+      ServerPlayer player = m_11259_(uuid);
+      ServerStatsCounter serverstatisticsmanager = player == null ? null : (ServerStatsCounter) player.m_8951_();
+      if (serverstatisticsmanager == null) {
+         File file1 = this.f_11195_.m_129843_(LevelResource.f_78175_).toFile();
+         File file2 = new File(file1, uuid + ".json");
+         if (!file2.exists()) {
+            File file3 = new File(file1, displayName + ".json"); // CraftBukkit
+            if (file3.exists() && file3.isFile()) {
+               file3.renameTo(file2);
+            }
+         }
+
+         serverstatisticsmanager = new ServerStatsCounter(this.f_11195_, file2);
+         this.f_11202_.put(uuid, serverstatisticsmanager);
+      }
+
+      return serverstatisticsmanager;
+   }
+
    public PlayerAdvancements m_11296_(ServerPlayer p_11297_) {
       UUID uuid = p_11297_.m_20148_();
       PlayerAdvancements playeradvancements = this.f_11203_.get(uuid);
@@ -803,6 +_,8 @@
          this.f_11203_.put(uuid, playeradvancements);
       }
 
+      // Forge: don't overwrite active player with a fake one.
+      if (!(p_11297_ instanceof net.minecraftforge.common.util.FakePlayer))
       playeradvancements.m_135979_(p_11297_);
       return playeradvancements;
    }
@@ -832,7 +_,7 @@
    }
 
    public List<ServerPlayer> m_11314_() {
-      return this.f_11196_;
+      return this.playersView; //Unmodifiable view, we don't want people removing things without us knowing.
    }
 
    @Nullable
@@ -849,6 +_,12 @@
          playeradvancements.m_135981_(this.f_11195_.m_129889_());
       }
 
+      for (ServerPlayer player : f_11196_) {
+          player.m_8960_().m_135981_(this.f_11195_.m_129889_());
+          player.m_8960_().m_135992_(player); // CraftBukkit - trigger immediate flush of advancements
+       }
+
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.OnDatapackSyncEvent(this, null));
       this.m_11268_(new ClientboundUpdateTagsPacket(TagNetworkSerialization.m_245799_(this.f_243858_)));
       ClientboundUpdateRecipesPacket clientboundupdaterecipespacket = new ClientboundUpdateRecipesPacket(this.f_11195_.m_129894_().m_44051_());
 
@@ -861,5 +_,13 @@
 
    public boolean m_11316_() {
       return this.f_11209_;
+   }
+
+   public boolean addPlayer(ServerPlayer player) {
+      return f_11196_.add(player);
+   }
+
+   public boolean removePlayer(ServerPlayer player) {
+       return this.f_11196_.remove(player);
    }
 }

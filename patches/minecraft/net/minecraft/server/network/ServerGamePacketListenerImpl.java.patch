--- a/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -2,6 +_,7 @@
 
 import com.google.common.collect.Lists;
 import com.google.common.primitives.Floats;
+import com.mohistmc.bukkit.inventory.MohistModsInventory;
 import com.mojang.brigadier.CommandDispatcher;
 import com.mojang.brigadier.ParseResults;
 import com.mojang.brigadier.StringReader;
@@ -11,7 +_,10 @@
 import it.unimi.dsi.fastutil.ints.Int2ObjectMap;
 import it.unimi.dsi.fastutil.ints.Int2ObjectMaps;
 import it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap;
+
+import java.nio.charset.StandardCharsets;
 import java.time.Instant;
+import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
 import java.util.Map;
@@ -19,6 +_,8 @@
 import java.util.Set;
 import java.util.concurrent.CancellationException;
 import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.atomic.AtomicInteger;
 import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.BiFunction;
 import java.util.function.Consumer;
@@ -26,6 +_,7 @@
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
+import net.md_5.bungee.api.ChatMessageType;
 import net.minecraft.ChatFormatting;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
@@ -58,11 +_,13 @@
 import net.minecraft.network.chat.LastSeenMessagesValidator;
 import net.minecraft.network.chat.MessageSignature;
 import net.minecraft.network.chat.MessageSigner;
+import net.minecraft.network.chat.OutgoingPlayerChatMessage;
 import net.minecraft.network.chat.PlayerChatMessage;
 import net.minecraft.network.chat.PreviewableCommand;
 import net.minecraft.network.chat.SignedMessageChain;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.PacketUtils;
+import net.minecraft.network.protocol.game.ClientboundAddEntityPacket;
 import net.minecraft.network.protocol.game.ClientboundBlockChangedAckPacket;
 import net.minecraft.network.protocol.game.ClientboundBlockUpdatePacket;
 import net.minecraft.network.protocol.game.ClientboundChatPreviewPacket;
@@ -73,6 +_,9 @@
 import net.minecraft.network.protocol.game.ClientboundMoveVehiclePacket;
 import net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket;
 import net.minecraft.network.protocol.game.ClientboundSetCarriedItemPacket;
+import net.minecraft.network.protocol.game.ClientboundSetEntityDataPacket;
+import net.minecraft.network.protocol.game.ClientboundSetEntityLinkPacket;
+import net.minecraft.network.protocol.game.ClientboundSetEquipmentPacket;
 import net.minecraft.network.protocol.game.ClientboundSystemChatPacket;
 import net.minecraft.network.protocol.game.ClientboundTagQueryPacket;
 import net.minecraft.network.protocol.game.ServerGamePacketListener;
@@ -132,14 +_,19 @@
 import net.minecraft.util.FutureChain;
 import net.minecraft.util.Mth;
 import net.minecraft.util.StringUtil;
+import net.minecraft.util.thread.BlockableEventLoop;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.effect.MobEffects;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.ExperienceOrb;
 import net.minecraft.world.entity.HasCustomInventoryScreen;
+import net.minecraft.world.entity.LivingEntity;
+import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MoverType;
 import net.minecraft.world.entity.PlayerRideableJumping;
+import net.minecraft.world.entity.animal.Bucketable;
+import net.minecraft.world.entity.animal.allay.Allay;
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.ChatVisiblity;
 import net.minecraft.world.entity.player.Inventory;
@@ -152,6 +_,7 @@
 import net.minecraft.world.inventory.BeaconMenu;
 import net.minecraft.world.inventory.MerchantMenu;
 import net.minecraft.world.inventory.RecipeBookMenu;
+import net.minecraft.world.inventory.Slot;
 import net.minecraft.world.item.BlockItem;
 import net.minecraft.world.item.BucketItem;
 import net.minecraft.world.item.Item;
@@ -177,12 +_,57 @@
 import net.minecraft.world.phys.shapes.BooleanOp;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import net.minecraftforge.server.ServerLifecycleHooks;
 import org.apache.commons.lang3.StringUtils;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_19_R1.CraftServer;
+import org.bukkit.craftbukkit.v1_19_R1.entity.CraftPlayer;
+import org.bukkit.craftbukkit.v1_19_R1.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_19_R1.inventory.CraftInventory;
+import org.bukkit.craftbukkit.v1_19_R1.inventory.CraftInventoryView;
+import org.bukkit.craftbukkit.v1_19_R1.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.v1_19_R1.util.CraftChatMessage;
+import org.bukkit.craftbukkit.v1_19_R1.util.CraftMagicNumbers;
+import org.bukkit.craftbukkit.v1_19_R1.util.LazyPlayerSet;
+import org.bukkit.craftbukkit.v1_19_R1.util.Waitable;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.block.SignChangeEvent;
+import org.bukkit.event.inventory.ClickType;
+import org.bukkit.event.inventory.CraftItemEvent;
+import org.bukkit.event.inventory.InventoryAction;
+import org.bukkit.event.inventory.InventoryClickEvent;
+import org.bukkit.event.inventory.InventoryCreativeEvent;
+import org.bukkit.event.inventory.InventoryType;
+import org.bukkit.event.inventory.SmithItemEvent;
+import org.bukkit.event.player.AsyncPlayerChatEvent;
+import org.bukkit.event.player.PlayerAnimationEvent;
+import org.bukkit.event.player.PlayerAnimationType;
+import org.bukkit.event.player.PlayerChatEvent;
+import org.bukkit.event.player.PlayerCommandPreprocessEvent;
+import org.bukkit.event.player.PlayerInteractAtEntityEvent;
+import org.bukkit.event.player.PlayerInteractEntityEvent;
+import org.bukkit.event.player.PlayerKickEvent;
+import org.bukkit.event.player.PlayerMoveEvent;
+import org.bukkit.event.player.PlayerTeleportEvent;
+import org.bukkit.event.player.PlayerToggleFlightEvent;
+import org.bukkit.event.player.PlayerToggleSneakEvent;
+import org.bukkit.event.player.PlayerToggleSprintEvent;
+import org.bukkit.inventory.CraftingInventory;
+import org.bukkit.inventory.EquipmentSlot;
+import org.bukkit.inventory.InventoryView;
+import org.bukkit.inventory.SmithingInventory;
 import org.slf4j.Logger;
 
 public class ServerGamePacketListenerImpl implements ServerPlayerConnection, TickablePacketListener, ServerGamePacketListener {
    static final Logger f_9744_ = LogUtils.getLogger();
    private static final int f_143608_ = 15000;
+   /**
+    * Forge: Deprecated in favor of range/reach attributes.
+    * @see net.minecraftforge.common.ForgeMod#REACH_DISTANCE
+    * @see net.minecraftforge.common.ForgeMod#ATTACK_RANGE
+    */
+   @Deprecated
    public static final double f_215198_ = Mth.m_144952_(6.0D);
    private static final int f_215199_ = -1;
    private static final int f_241635_ = 4096;
@@ -194,7 +_,9 @@
    private long f_9747_;
    private boolean f_9748_;
    private long f_9749_;
-   private int f_9750_;
+   // CraftBukkit start - multithreaded fields
+   private final AtomicInteger f_9750_ = new AtomicInteger();
+   // CraftBukkit end
    private int f_9751_;
    private double f_9753_;
    private double f_9754_;
@@ -227,6 +_,26 @@
    private final LastSeenMessagesValidator f_241654_ = new LastSeenMessagesValidator();
    private final FutureChain f_241681_;
 
+   private final CraftServer cserver;
+   public boolean processedDisconnect;
+   private int lastTick = MinecraftServer.currentTick;
+   private int allowedPlayerTicks = 1;
+   private int lastDropTick = MinecraftServer.currentTick;
+   private int lastBookTick  = MinecraftServer.currentTick;
+   private int dropCount = 0;
+
+   // Get position of last block hit for BlockDamageLevel.STOPPED
+   private double lastPosX = Double.MAX_VALUE;
+   private double lastPosY = Double.MAX_VALUE;
+   private double lastPosZ = Double.MAX_VALUE;
+   private float lastPitch = Float.MAX_VALUE;
+   private float lastYaw = Float.MAX_VALUE;
+   private boolean justTeleported = false;
+
+   public CraftPlayer getCraftPlayer() {
+      return (this.f_9743_ == null) ? null : (CraftPlayer) this.f_9743_.getBukkitEntity();
+   }
+
    public ServerGamePacketListenerImpl(MinecraftServer p_9770_, Connection p_9771_, ServerPlayer p_9772_) {
       this.f_9745_ = p_9770_;
       this.f_9742_ = p_9771_;
@@ -242,7 +_,9 @@
          this.f_240889_ = SignedMessageChain.Decoder.f_243004_;
       }
 
-      this.f_241681_ = new FutureChain(p_9770_);
+	  this.f_241681_ = new FutureChain(p_9770_.chatExecutor); // CraftBukkit - async chat
+      // CraftBukkit start - add fields and methods
+      this.cserver = p_9770_.server;
    }
 
    public void m_9933_() {
@@ -296,7 +_,7 @@
 
       this.f_9745_.m_129905_().m_6180_("keepAlive");
       long i = Util.m_137550_();
-      if (i - this.f_9747_ >= 15000L) {
+      if (i - this.f_9747_ >= 25000L) { // CraftBukkit
          if (this.f_9748_) {
             this.m_9942_(Component.m_237115_("disconnect.timeout"));
          } else {
@@ -308,15 +_,14 @@
       }
 
       this.f_9745_.m_129905_().m_7238_();
-      if (this.f_9750_ > 0) {
-         --this.f_9750_;
-      }
+      for (int spam; (spam = this.f_9750_.get()) > 0 && !f_9750_.compareAndSet(spam, spam - 1); ) ;
 
       if (this.f_9751_ > 0) {
          --this.f_9751_;
       }
 
       if (this.f_9743_.m_8956_() > 0L && this.f_9745_.m_129924_() > 0 && Util.m_137550_() - this.f_9743_.m_8956_() > (long)(this.f_9745_.m_129924_() * 1000 * 60)) {
+         this.f_9743_.m_9243_(); // CraftBukkit - SPIGOT-854
          this.m_9942_(Component.m_237115_("multiplayer.disconnect.idling"));
       }
 
@@ -340,12 +_,60 @@
       return this.f_9745_.m_7779_(this.f_9743_.m_36316_());
    }
 
+   // CraftBukkit star
    public void m_9942_(Component p_9943_) {
-      this.f_9742_.m_243124_(new ClientboundDisconnectPacket(p_9943_), PacketSendListener.m_243092_(() -> {
-         this.f_9742_.m_129507_(p_9943_);
+      disconnect(CraftChatMessage.fromComponent(p_9943_));
+   }
+   // CraftBukkit end
+
+   public void disconnect(String p_9943_) {
+      // CraftBukkit start - fire PlayerKickEvent
+      if (this.processedDisconnect) {
+         return;
+      }
+      if (!this.cserver.isPrimaryThread()) {
+         Waitable waitable = new Waitable() {
+            @Override
+            protected Object evaluate() {
+               ServerGamePacketListenerImpl.this.disconnect(p_9943_);
+               return null;
+            }
+         };
+
+         this.f_9745_.processQueue.add(waitable);
+
+         try {
+            waitable.get();
+         } catch (InterruptedException e) {
+            Thread.currentThread().interrupt();
+         } catch (ExecutionException e) {
+            throw new RuntimeException(e);
+         }
+         return;
+      }
+      String leaveMessage = ChatFormatting.YELLOW + this.f_9743_.m_6302_() + " left the game.";
+
+      PlayerKickEvent event = new PlayerKickEvent(this.f_9743_.getBukkitEntity(), p_9943_, leaveMessage);
+
+      if (this.cserver.getServer().m_130010_()) {
+         this.cserver.getPluginManager().callEvent(event);
+      }
+
+      if (event.isCancelled()) {
+         // Do not kick the player
+         return;
+      }
+      this.f_9743_.kickLeaveMessage = event.getLeaveMessage(); // CraftBukkit - SPIGOT-3034: Forward leave message to PlayerQuitEvent
+      // Send the possibly modified leave message
+      final Component ichatbasecomponent = CraftChatMessage.fromString(event.getReason(), true)[0];
+      // CraftBukkit end
+      this.f_9742_.m_243124_(new ClientboundDisconnectPacket(ichatbasecomponent), PacketSendListener.m_243092_(() -> {
+         this.f_9742_.m_129507_(ichatbasecomponent);
       }));
+
+      this.m_7026_(ichatbasecomponent); // CraftBukkit - fire quit instantly
       this.f_9742_.m_129540_();
-      this.f_9745_.m_18709_(this.f_9742_::m_129541_);
+      this.f_9745_.m_6681_(this.f_9742_::m_129541_);
    }
 
    private <T, R> CompletableFuture<R> m_243080_(T p_243240_, BiFunction<TextFilter, T, CompletableFuture<R>> p_243271_) {
@@ -405,7 +_,33 @@
             double d8 = d5 - this.f_9762_;
             double d9 = entity.m_20184_().m_82556_();
             double d10 = d6 * d6 + d7 * d7 + d8 * d8;
-            if (d10 - d9 > 100.0D && !this.m_9956_()) {
+            // CraftBukkit start - handle custom speeds and skipped ticks
+            this.allowedPlayerTicks += (System.currentTimeMillis() / 50) - this.lastTick;
+            this.allowedPlayerTicks = Math.max(this.allowedPlayerTicks, 1);
+            this.lastTick = (int) (System.currentTimeMillis() / 50);
+
+            ++this.f_9740_;
+            int i = this.f_9740_ - this.f_9741_;
+            if (i > Math.max(this.allowedPlayerTicks, 5)) {
+               f_9744_.debug(this.f_9743_.m_6302_() + " is sending move packets too frequently (" + i + " packets since last tick)");
+               i = 1;
+            }
+
+            if (d10 > 0) {
+               allowedPlayerTicks -= 1;
+            } else {
+               allowedPlayerTicks = 20;
+            }
+            double speed;
+            if (f_9743_.m_150110_().f_35935_) {
+               speed = f_9743_.m_150110_().f_35939_ * 20f;
+            } else {
+               speed = f_9743_.m_150110_().f_35940_ * 10f;
+            }
+            speed *= 2f; // TODO: Get the speed of the vehicle instead of the player
+
+            if (d10 - d9 > Math.max(100.0D, Math.pow((double) (10.0F * (float) i * speed), 2)) && !this.m_9956_()) {
+               // CraftBukkit end
                f_9744_.warn("{} (vehicle of {}) moved too quickly! {},{},{}", entity.m_7755_().getString(), this.f_9743_.m_7755_().getString(), d6, d7, d8);
                this.f_9742_.m_129512_(new ClientboundMoveVehiclePacket(entity));
                return;
@@ -431,13 +_,71 @@
                f_9744_.warn("{} (vehicle of {}) moved wrongly! {}", entity.m_7755_().getString(), this.f_9743_.m_7755_().getString(), Math.sqrt(d10));
             }
 
-            entity.m_19890_(d3, d4, d5, f, f1);
+            entity.m_19890_(d3, d4, d5, this.f_9743_.m_146908_(), this.f_9743_.m_146909_()); // CraftBukkit
+            this.f_9743_.m_19890_(d3, d4, d5, this.f_9743_.m_146908_(), this.f_9743_.m_146909_()); // Forge - Resync player position on vehicle moving
             boolean flag3 = serverlevel.m_45756_(entity, entity.m_20191_().m_82406_(0.0625D));
             if (flag && (flag2 || !flag3)) {
-               entity.m_19890_(d0, d1, d2, f, f1);
+               entity.m_19890_(d0, d1, d2, this.f_9743_.m_146908_(), this.f_9743_.m_146909_()); // CraftBukkit
+               this.f_9743_.m_19890_(d3, d4, d5, this.f_9743_.m_146908_(), this.f_9743_.m_146909_()); // Forge - Resync player position on vehicle moving
                this.f_9742_.m_129512_(new ClientboundMoveVehiclePacket(entity));
                return;
             }
+
+            // CraftBukkit start - fire PlayerMoveEvent
+            org.bukkit.entity.Player player = this.getCraftPlayer();
+            Location from = new Location(player.getWorld(), lastPosX, lastPosY, lastPosZ, lastYaw, lastPitch); // Get the Players previous Event location.
+            Location to = player.getLocation().clone(); // Start off the To location as the Players current location.
+
+            // If the packet contains movement information then we update the To location with the correct XYZ.
+            to.setX(p_9876_.m_134199_());
+            to.setY(p_9876_.m_134202_());
+            to.setZ(p_9876_.m_134203_());
+
+
+            // If the packet contains look information then we update the To location with the correct Yaw & Pitch.
+            to.setYaw(p_9876_.m_134204_());
+            to.setPitch(p_9876_.m_134205_());
+
+            // Prevent 40 event-calls for less than a single pixel of movement >.>
+            double delta = Math.pow(this.lastPosX - to.getX(), 2) + Math.pow(this.lastPosY - to.getY(), 2) + Math.pow(this.lastPosZ - to.getZ(), 2);
+            float deltaAngle = Math.abs(this.lastYaw - to.getYaw()) + Math.abs(this.lastPitch - to.getPitch());
+
+            if ((delta > 1f / 256 || deltaAngle > 10f) && !this.f_9743_.m_6107_()) {
+               this.lastPosX = to.getX();
+               this.lastPosY = to.getY();
+               this.lastPosZ = to.getZ();
+               this.lastYaw = to.getYaw();
+               this.lastPitch = to.getPitch();
+
+               // Skip the first time we do this
+               if (from.getX() != Double.MAX_VALUE) {
+                  Location oldTo = to.clone();
+                  PlayerMoveEvent event = new PlayerMoveEvent(player, from, to);
+                  this.cserver.getPluginManager().callEvent(event);
+
+                  // If the event is cancelled we move the player back to their old location.
+                  if (event.isCancelled()) {
+                     teleport(from);
+                     return;
+                  }
+
+                  // If a Plugin has changed the To destination then we teleport the Player
+                  // there to avoid any 'Moved wrongly' or 'Moved too quickly' errors.
+                  // We only do this if the Event was not cancelled.
+                  if (!oldTo.equals(event.getTo()) && !event.isCancelled()) {
+                     this.f_9743_.getBukkitEntity().teleport(event.getTo(), PlayerTeleportEvent.TeleportCause.PLUGIN);
+                     return;
+                  }
+
+                  // Check to see if the Players Location has some how changed during the call of the event.
+                  // This can happen due to a plugin teleporting the player instead of using .setTo()
+                  if (!from.equals(this.getCraftPlayer().getLocation()) && this.justTeleported) {
+                     this.justTeleported = false;
+                     return;
+                  }
+               }
+            }
+            // CraftBukkit end
 
             this.f_9743_.m_9236_().m_7726_().m_8385_(this.f_9743_);
             this.f_9743_.m_36378_(this.f_9743_.m_20185_() - d0, this.f_9743_.m_20186_() - d1, this.f_9743_.m_20189_() - d2);
@@ -451,7 +_,7 @@
    }
 
    private boolean m_9793_(Entity p_9794_) {
-      return p_9794_.f_19853_.m_45556_(p_9794_.m_20191_().m_82400_(0.0625D).m_82363_(0.0D, -0.55D, 0.0D)).allMatch(BlockBehaviour.BlockStateBase::m_60795_);
+      return BlockPos.m_121921_(p_9794_.m_20191_().m_82400_(0.0625D).m_82363_(0.0D, -0.55D, 0.0D)).allMatch(b -> p_9794_.f_19853_.m_8055_(b).m_60795_());
    }
 
    public void m_7376_(ServerboundAcceptTeleportationPacket p_9835_) {
@@ -471,6 +_,7 @@
          }
 
          this.f_9766_ = null;
+         this.f_9743_.m_9236_().m_7726_().m_8385_(this.f_9743_); // CraftBukkit
       }
 
    }
@@ -499,6 +_,12 @@
 
    public void m_7741_(ServerboundCommandSuggestionPacket p_9847_) {
       PacketUtils.m_131359_(p_9847_, this, this.f_9743_.m_9236_());
+      // CraftBukkit start
+      if (f_9750_.addAndGet(1) > 500 && !this.f_9745_.m_6846_().m_11303_(this.f_9743_.m_36316_())) {
+         this.m_9942_(Component.m_237115_("disconnect.spam"));
+         return;
+      }
+      // CraftBukkit end
       StringReader stringreader = new StringReader(p_9847_.m_133904_());
       if (stringreader.canRead() && stringreader.peek() == '/') {
          stringreader.skip();
@@ -506,6 +_,7 @@
 
       ParseResults<CommandSourceStack> parseresults = this.f_9745_.m_129892_().m_82094_().parse(stringreader, this.f_9743_.m_20203_());
       this.f_9745_.m_129892_().m_82094_().getCompletionSuggestions(parseresults).thenAccept((p_238197_) -> {
+         if (p_238197_.isEmpty()) return; // CraftBukkit - don't send through empty suggestions - prevents [<args>] from showing for plugins with nothing more to offer
          this.f_9742_.m_129512_(new ClientboundCommandSuggestionsPacket(p_9847_.m_133901_(), p_238197_));
       });
    }
@@ -725,6 +_,13 @@
       int i = p_9905_.m_134469_();
       AbstractContainerMenu abstractcontainermenu = this.f_9743_.f_36096_;
       if (abstractcontainermenu instanceof MerchantMenu merchantmenu) {
+         // CraftBukkit start
+         final org.bukkit.event.inventory.TradeSelectEvent tradeSelectEvent = CraftEventFactory.callTradeSelectEvent(this.f_9743_, i, merchantmenu);
+         if (tradeSelectEvent.isCancelled()) {
+            this.f_9743_.getBukkitEntity().updateInventory();
+            return;
+         }
+         // CraftBukkit end
          if (!merchantmenu.m_6875_(this.f_9743_)) {
             f_9744_.debug("Player {} interacted with invalid menu {}", this.f_9743_, merchantmenu);
             return;
@@ -737,6 +_,13 @@
    }
 
    public void m_6829_(ServerboundEditBookPacket p_9862_) {
+      // CraftBukkit start
+      if (this.lastBookTick + 20 > MinecraftServer.currentTick) {
+         this.disconnect("Book edited too quickly!");
+         return;
+      }
+      this.lastBookTick = MinecraftServer.currentTick;
+      // CraftBukkit end
       int i = p_9862_.m_134013_();
       if (Inventory.m_36045_(i) || i == 40) {
          List<String> list = Lists.newArrayList();
@@ -755,7 +_,7 @@
    private void m_9812_(List<FilteredText> p_9813_, int p_9814_) {
       ItemStack itemstack = this.f_9743_.m_150109_().m_8020_(p_9814_);
       if (itemstack.m_150930_(Items.f_42614_)) {
-         this.m_143634_(p_9813_, UnaryOperator.identity(), itemstack);
+         this.updateBookPages(p_9813_, UnaryOperator.identity(), itemstack.m_41777_(), p_9814_, itemstack); // CraftBukkit
       }
    }
 
@@ -775,12 +_,23 @@
             itemstack1.m_41700_("filtered_title", StringTag.m_129297_(p_215209_.m_243113_()));
             itemstack1.m_41700_("title", StringTag.m_129297_(p_215209_.f_215168_()));
          }
-
+         mohist$slot.set(p_215211_);
+         mohist$handItem.set(itemstack);
          this.m_143634_(p_215210_, (p_238206_) -> {
             return Component.Serializer.m_130703_(Component.m_237113_(p_238206_));
          }, itemstack1);
-         this.f_9743_.m_150109_().m_6836_(p_215211_, itemstack1);
+         this.f_9743_.m_150109_().m_6836_(p_215211_, itemstack); // CraftBukkit - event factory updates the hand book
       }
+   }
+
+   // Mohist start
+   private AtomicInteger mohist$slot = new AtomicInteger(-1);
+   private AtomicReference<ItemStack> mohist$handItem = new AtomicReference<>(null);
+
+   private void updateBookPages(List<FilteredText> p_143635_, UnaryOperator<String> p_143636_, ItemStack p_143637_, int slot, ItemStack handItem) {
+      mohist$slot.set(slot);
+      mohist$handItem.set(handItem);
+      m_143634_(p_143635_, p_143636_, p_143637_);
    }
 
    private void m_143634_(List<FilteredText> p_143635_, UnaryOperator<String> p_143636_, ItemStack p_143637_) {
@@ -808,7 +_,9 @@
       }
 
       p_143637_.m_41700_("pages", listtag);
+      CraftEventFactory.handleEditBookEvent(f_9743_, mohist$slot.getAndSet(-1), mohist$handItem.getAndSet(null), p_143637_); // CraftBukkit
    }
+   // Mohist end
 
    public void m_7548_(ServerboundEntityTagQuery p_9864_) {
       PacketUtils.m_131359_(p_9864_, this, this.f_9743_.m_9236_());
@@ -837,7 +_,7 @@
          this.m_9942_(Component.m_237115_("multiplayer.disconnect.invalid_player_movement"));
       } else {
          ServerLevel serverlevel = this.f_9743_.m_9236_();
-         if (!this.f_9743_.f_8944_) {
+         if (!this.f_9743_.f_8944_ && !this.f_9743_.m_6107_()) { // CraftBukkit
             if (this.f_9746_ == 0) {
                this.m_9953_();
             }
@@ -847,7 +_,7 @@
                   this.f_9735_ = this.f_9746_;
                   this.m_9774_(this.f_9766_.f_82479_, this.f_9766_.f_82480_, this.f_9766_.f_82481_, this.f_9743_.m_146908_(), this.f_9743_.m_146909_());
                }
-
+               this.allowedPlayerTicks = 20; // CraftBukkit
             } else {
                this.f_9735_ = this.f_9746_;
                double d0 = m_143609_(p_9874_.m_134129_(this.f_9743_.m_20185_()));
@@ -858,7 +_,15 @@
                if (this.f_9743_.m_20159_()) {
                   this.f_9743_.m_19890_(this.f_9743_.m_20185_(), this.f_9743_.m_20186_(), this.f_9743_.m_20189_(), f, f1);
                   this.f_9743_.m_9236_().m_7726_().m_8385_(this.f_9743_);
+                  this.allowedPlayerTicks = 20; // CraftBukkit
                } else {
+                  // CraftBukkit - Make sure the move is valid but then reset it for plugins to modify
+                  double prevX = f_9743_.m_20185_();
+                  double prevY = f_9743_.m_20186_();
+                  double prevZ = f_9743_.m_20189_();
+                  float prevYaw = f_9743_.m_146908_();
+                  float prevPitch = f_9743_.m_146909_();
+                  // CraftBukkit end
                   double d3 = this.f_9743_.m_20185_();
                   double d4 = this.f_9743_.m_20186_();
                   double d5 = this.f_9743_.m_20189_();
@@ -876,14 +_,31 @@
                   } else {
                      ++this.f_9740_;
                      int i = this.f_9740_ - this.f_9741_;
-                     if (i > 5) {
+                     // CraftBukkit start - handle custom speeds and skipped ticks
+                     this.allowedPlayerTicks += (System.currentTimeMillis() / 50) - this.lastTick;
+                     this.allowedPlayerTicks = Math.max(this.allowedPlayerTicks, 1);
+                     this.lastTick = (int) (System.currentTimeMillis() / 50);
+
+                     if (i > Math.max(this.allowedPlayerTicks, 5)) {
                         f_9744_.debug("{} is sending move packets too frequently ({} packets since last tick)", this.f_9743_.m_7755_().getString(), i);
                         i = 1;
                      }
 
+                     if (p_9874_.f_134125_ || d11 > 0) {
+                        allowedPlayerTicks -= 1;
+                     } else {
+                        allowedPlayerTicks = 20;
+                     }
+                     double speed;
+                     if (f_9743_.m_150110_().f_35935_) {
+                        speed = f_9743_.m_150110_().f_35939_ * 20f;
+                     } else {
+                        speed = f_9743_.m_150110_().f_35940_ * 10f;
+                                                   }
+
                      if (!this.f_9743_.m_8958_() && (!this.f_9743_.m_9236_().m_46469_().m_46207_(GameRules.f_46148_) || !this.f_9743_.m_21255_())) {
                         float f2 = this.f_9743_.m_21255_() ? 300.0F : 100.0F;
-                        if (d11 - d10 > (double)(f2 * (float)i) && !this.m_9956_()) {
+                        if (d11 - d10 > Math.max(f2, Math.pow((double) (10.0F * (float) i * speed), 2)) && !this.m_9956_()) {
                            f_9744_.warn("{} moved too quickly! {},{},{}", this.f_9743_.m_7755_().getString(), d7, d8, d9);
                            this.m_9774_(this.f_9743_.m_20185_(), this.f_9743_.m_20186_(), this.f_9743_.m_20189_(), this.f_9743_.m_146908_(), this.f_9743_.m_146909_());
                            return;
@@ -901,6 +_,7 @@
 
                      boolean flag1 = this.f_9743_.f_201939_;
                      this.f_9743_.m_6478_(MoverType.PLAYER, new Vec3(d7, d8, d9));
+                     this.f_9743_.f_19861_ = p_9874_.m_134139_(); // CraftBukkit - SPIGOT-5810, SPIGOT-5835, SPIGOT-6828: reset by this.player.move
                      d7 = d0 - this.f_9743_.m_20185_();
                      d8 = d1 - this.f_9743_.m_20186_();
                      if (d8 > -0.5D || d8 < 0.5D) {
@@ -980,6 +_,14 @@
       this.f_9743_.f_8906_.m_9829_(new ClientboundPlayerPositionPacket(p_143618_ - d0, p_143619_ - d1, p_143620_ - d2, p_143621_ - f, p_143622_ - f1, p_143623_, this.f_9767_, p_143624_));
    }
 
+   public void teleport(Location to) {
+      m_143617_(to.getX(), to.getY(), to.getZ(), to.getYaw(), to.getPitch(), Collections.emptySet(), true);
+   }
+
+   public boolean teleport(double d0, double d1, double d2, float f, float f1, Set<ClientboundPlayerPositionPacket.RelativeArgument> set, boolean flag, PlayerTeleportEvent.TeleportCause cause) { // CraftBukkit - Return event status
+      return false;
+   }
+
    public void m_7502_(ServerboundPlayerActionPacket p_9889_) {
       PacketUtils.m_131359_(p_9889_, this, this.f_9743_.m_9236_());
       BlockPos blockpos = p_9889_.m_134281_();
@@ -1040,7 +_,7 @@
       Vec3 vec3 = blockhitresult.m_82450_();
       BlockPos blockpos = blockhitresult.m_82425_();
       Vec3 vec31 = Vec3.m_82512_(blockpos);
-      if (!(this.f_9743_.m_146892_().m_82557_(vec31) > f_215198_)) {
+      if (this.f_9743_.canInteractWith(blockpos, 3)) {
          Vec3 vec32 = vec3.m_82546_(vec31);
          double d0 = 1.0000001D;
          if (Math.abs(vec32.m_7096_()) < 1.0000001D && Math.abs(vec32.m_7098_()) < 1.0000001D && Math.abs(vec32.m_7094_()) < 1.0000001D) {
@@ -1048,7 +_,7 @@
             this.f_9743_.m_9243_();
             int i = this.f_9743_.f_19853_.m_151558_();
             if (blockpos.m_123342_() < i) {
-               if (this.f_9766_ == null && this.f_9743_.m_20275_((double)blockpos.m_123341_() + 0.5D, (double)blockpos.m_123342_() + 0.5D, (double)blockpos.m_123343_() + 0.5D) < 64.0D && serverlevel.m_7966_(this.f_9743_, blockpos)) {
+               if (this.f_9766_ == null && serverlevel.m_7966_(this.f_9743_, blockpos)) {
                   InteractionResult interactionresult = this.f_9743_.f_8941_.m_7179_(this.f_9743_, serverlevel, itemstack, interactionhand, blockhitresult);
                   if (direction == Direction.UP && !interactionresult.m_19077_() && blockpos.m_123342_() >= i - 1 && m_9790_(this.f_9743_, itemstack)) {
                      Component component = Component.m_237110_("build.tooHigh", i - 1).m_130940_(ChatFormatting.RED);
@@ -1175,24 +_,32 @@
    }
 
    public void m_7388_(ServerboundChatPacket p_9841_) {
+      // CraftBukkit start - async chat
+      // SPIGOT-3638
+      if (this.f_9745_.m_129918_()) {
+         return;
+      }
+      // CraftBukkit end
       if (m_215214_(p_9841_.f_133827_())) {
          this.m_9942_(Component.m_237115_("multiplayer.disconnect.illegal_characters"));
       } else {
          if (this.m_241937_(p_9841_.f_133827_(), p_9841_.f_237950_(), p_9841_.f_241662_())) {
-            this.f_9745_.m_18707_(() -> {
+            // this.server.submit(() -> { // CraftBukkit - async chat
                PlayerChatMessage playerchatmessage = this.m_242585_(p_9841_);
                if (this.m_242598_(playerchatmessage)) {
                   this.f_241681_.m_241849_(() -> {
                      CompletableFuture<FilteredText> completablefuture = this.m_243132_(playerchatmessage.m_241775_().f_241656_());
-                     CompletableFuture<PlayerChatMessage> completablefuture1 = this.f_9745_.m_236742_().m_243107_(this.f_9743_, playerchatmessage);
+                     CompletableFuture<PlayerChatMessage> completablefuture1 = net.minecraftforge.common.ForgeHooks.getServerChatSubmittedDecorator().m_243107_(this.f_9743_, playerchatmessage);
                      return CompletableFuture.allOf(completablefuture, completablefuture1).thenAcceptAsync((p_243197_) -> {
                         FilterMask filtermask = completablefuture.join().f_243010_();
-                        PlayerChatMessage playerchatmessage1 = completablefuture1.join().m_243072_(filtermask);
+                        PlayerChatMessage playerchatmessage1 = completablefuture1.join();
+                        if (playerchatmessage1 == null) return; // Forge: ServerChatEvent was canceled if this is null.
+                        playerchatmessage1 = playerchatmessage1.m_243072_(filtermask);
                         this.m_243086_(playerchatmessage1);
-                     }, this.f_9745_);
+                     }, this.f_9745_.chatExecutor); // CraftBukkit - async chat
                   });
                }
-            });
+            // }); // CraftBukkit - async chat
          }
 
       }
@@ -1346,8 +_,8 @@
    }
 
    private void m_215251_() {
-      this.f_9750_ += 20;
-      if (this.f_9750_ > 200 && !this.f_9745_.m_6846_().m_11303_(this.f_9743_.m_36316_())) {
+      if (this.f_9750_.addAndGet(20) > 200 && !this.f_9745_.m_6846_().m_11303_(this.f_9743_.m_36316_())) {
+         // CraftBukkit end
          this.m_9942_(Component.m_237115_("disconnect.spam"));
       }
 
@@ -1383,7 +_,7 @@
 
    private CompletableFuture<Component> m_215246_(String p_215247_) {
       Component component = Component.m_237113_(p_215247_);
-      CompletableFuture<Component> completablefuture = this.f_9745_.m_236742_().m_236961_(this.f_9743_, component).thenApply((p_238202_) -> {
+      CompletableFuture<Component> completablefuture = net.minecraftforge.common.ForgeHooks.getServerChatPreviewDecorator().m_236961_(this.f_9743_, component).thenApply((p_238202_) -> {
          return !component.equals(p_238202_) ? p_238202_ : null;
       });
       completablefuture.thenAcceptAsync((p_242747_) -> {
@@ -1443,12 +_,56 @@
 
    public void m_7953_(ServerboundSwingPacket p_9926_) {
       PacketUtils.m_131359_(p_9926_, this, this.f_9743_.m_9236_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
       this.f_9743_.m_9243_();
+      // CraftBukkit start - Raytrace to look for 'rogue armswings'
+      float f1 = this.f_9743_.m_146909_();
+      float f2 = this.f_9743_.m_146908_();
+      double d0 = this.f_9743_.m_20185_();
+      double d1 = this.f_9743_.m_20186_() + (double) this.f_9743_.m_20192_();
+      double d2 = this.f_9743_.m_20189_();
+      Location origin = new Location(this.f_9743_.f_19853_.getWorld(), d0, d1, d2, f2, f1);
+
+      double d3 = f_9743_.f_8941_.m_9290_() == GameType.CREATIVE ? 5.0D : 4.5D;
+      // SPIGOT-5607: Only call interact event if no block or entity is being clicked. Use bukkit ray trace method, because it handles blocks and entities at the same time
+      org.bukkit.util.RayTraceResult result = this.f_9743_.f_19853_.getWorld().rayTrace(origin, origin.getDirection(), d3, org.bukkit.FluidCollisionMode.NEVER, false, 0.1, entity -> entity != this.f_9743_.getBukkitEntity());
+
+      if (result == null) {
+         CraftEventFactory.callPlayerInteractEvent(this.f_9743_, Action.LEFT_CLICK_AIR, this.f_9743_.m_150109_().m_36056_(), InteractionHand.MAIN_HAND);
+      }
+
+      // Arm swing animation
+      PlayerAnimationEvent event = new PlayerAnimationEvent(this.getCraftPlayer(), (p_9926_.m_134674_() == InteractionHand.MAIN_HAND) ? PlayerAnimationType.ARM_SWING : PlayerAnimationType.OFF_ARM_SWING);
+      this.cserver.getPluginManager().callEvent(event);
+
+      if (event.isCancelled()) return;
+      // CraftBukkit end
       this.f_9743_.m_6674_(p_9926_.m_134674_());
    }
 
    public void m_5681_(ServerboundPlayerCommandPacket p_9891_) {
       PacketUtils.m_131359_(p_9891_, this, this.f_9743_.m_9236_());
+      // CraftBukkit start
+      if (this.f_9743_.m_213877_()) return;
+      switch (p_9891_.m_134320_()) {
+         case PRESS_SHIFT_KEY:
+         case RELEASE_SHIFT_KEY:
+            PlayerToggleSneakEvent event = new PlayerToggleSneakEvent(this.getCraftPlayer(), p_9891_.m_134320_() == ServerboundPlayerCommandPacket.Action.PRESS_SHIFT_KEY);
+            this.cserver.getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+               return;
+            }
+            break;
+         case START_SPRINTING:
+         case STOP_SPRINTING:
+            PlayerToggleSprintEvent e2 = new PlayerToggleSprintEvent(this.getCraftPlayer(), p_9891_.m_134320_() == ServerboundPlayerCommandPacket.Action.START_SPRINTING);
+            this.cserver.getPluginManager().callEvent(e2);
+            if (e2.isCancelled()) {
+               return;
+            }
+            break;
+      }
+      // CraftBukkit end
       this.f_9743_.m_9243_();
       switch (p_9891_.m_134320_()) {
          case PRESS_SHIFT_KEY:
@@ -1523,8 +_,16 @@
 
    public void m_6946_(ServerboundInteractPacket p_9866_) {
       PacketUtils.m_131359_(p_9866_, this, this.f_9743_.m_9236_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
       ServerLevel serverlevel = this.f_9743_.m_9236_();
       final Entity entity = p_9866_.m_179603_(serverlevel);
+      // Spigot Start
+      if ( entity == f_9743_ && !f_9743_.m_5833_() )
+      {
+         disconnect( "Cannot interact with self!" );
+         return;
+      }
+      // Spigot End
       this.f_9743_.m_9243_();
       this.f_9743_.m_20260_(p_9866_.m_134061_());
       if (entity != null) {
@@ -1532,11 +_,50 @@
             return;
          }
 
-         if (entity.m_20238_(this.f_9743_.m_146892_()) < f_215198_) {
+         if (true) { //Forge: Perform distance checks below since interactions and attacks differ.
             p_9866_.m_179617_(new ServerboundInteractPacket.Handler() {
-               private void m_143678_(InteractionHand p_143679_, ServerGamePacketListenerImpl.EntityInteraction p_143680_) {
+               private void performInteraction(InteractionHand p_143679_, ServerGamePacketListenerImpl.EntityInteraction p_143680_, PlayerInteractEntityEvent event) { // CraftBukkit
+                  if(!ServerGamePacketListenerImpl.this.f_9743_.canInteractWith(entity, 1.5D)) return; //Forge: If the entity cannot be reached, do nothing. Original check was dist < 6, range is 4.5, so vanilla used padding=1.5
                   ItemStack itemstack = ServerGamePacketListenerImpl.this.f_9743_.m_21120_(p_143679_).m_41777_();
+                  // CraftBukkit start
+                  ItemStack itemInHand = ServerGamePacketListenerImpl.this.f_9743_.m_21120_(p_143679_);
+                  boolean triggerLeashUpdate = itemInHand != null && itemInHand.m_41720_() == Items.f_42655_ && entity instanceof Mob;
+                  Item origItem = f_9743_.m_150109_().m_36056_() == null ? null : f_9743_.m_150109_().m_36056_().m_41720_();
+
+                  cserver.getPluginManager().callEvent(event);
+
+                  // Entity in bucket - SPIGOT-4048 and SPIGOT-6859
+                  if ((entity instanceof Bucketable && entity instanceof LivingEntity && origItem != null && origItem.m_5456_() == Items.f_42447_) && (event.isCancelled() || f_9743_.m_150109_().m_36056_() == null || f_9743_.m_150109_().m_36056_().m_41720_() != origItem)) {
+                     m_9829_(new ClientboundAddEntityPacket(entity));
+                     f_9743_.f_36096_.m_150429_();
+                  }
+
+                  if (triggerLeashUpdate && (event.isCancelled() || f_9743_.m_150109_().m_36056_() == null || f_9743_.m_150109_().m_36056_().m_41720_() != origItem)) {
+                     // Refresh the current leash state
+                     m_9829_(new ClientboundSetEntityLinkPacket(entity, ((Mob) entity).m_21524_()));
+                  }
+
+                  if (event.isCancelled() || f_9743_.m_150109_().m_36056_() == null || f_9743_.m_150109_().m_36056_().m_41720_() != origItem) {
+                     // Refresh the current entity metadata
+                     m_9829_(new ClientboundSetEntityDataPacket(entity.m_19879_(), entity.m_20088_(), true));
+                     // SPIGOT-7136 - Allays
+                     if (entity instanceof Allay) {
+                        m_9829_(new ClientboundSetEquipmentPacket(entity.m_19879_(), Arrays.stream(net.minecraft.world.entity.EquipmentSlot.values()).map((slot) -> Pair.of(slot, ((LivingEntity) entity).m_6844_(slot).m_41777_())).collect(Collectors.toList())));
+                        f_9743_.f_36096_.m_150429_();
+                     }
+                  }
+
+                  if (event.isCancelled()) {
+                     return;
+                  }
+                  // CraftBukkit end
                   InteractionResult interactionresult = p_143680_.m_143694_(ServerGamePacketListenerImpl.this.f_9743_, entity, p_143679_);
+
+                  // CraftBukkit start
+                  if (!itemInHand.m_41619_() && itemInHand.m_41613_() <= -1) {
+                     f_9743_.f_36096_.m_150429_();
+                  }
+                  // CraftBukkit end
                   if (interactionresult.m_19077_()) {
                      CriteriaTriggers.f_10565_.m_61494_(ServerGamePacketListenerImpl.this.f_9743_, itemstack, entity);
                      if (interactionresult.m_19080_()) {
@@ -1547,18 +_,28 @@
                }
 
                public void m_142299_(InteractionHand p_143677_) {
-                  this.m_143678_(p_143677_, Player::m_36157_);
+                  this.performInteraction(p_143677_, Player::m_36157_, new PlayerInteractEntityEvent(getCraftPlayer(), entity.getBukkitEntity(), (p_143677_ == InteractionHand.OFF_HAND) ? EquipmentSlot.OFF_HAND : EquipmentSlot.HAND));
                }
 
                public void m_142143_(InteractionHand p_143682_, Vec3 p_143683_) {
-                  this.m_143678_(p_143682_, (p_143686_, p_143687_, p_143688_) -> {
+                  this.performInteraction(p_143682_, (p_143686_, p_143687_, p_143688_) -> {
+                     InteractionResult onInteractEntityAtResult = net.minecraftforge.common.ForgeHooks.onInteractEntityAt(f_9743_, entity, p_143683_, p_143682_);
+                     if (onInteractEntityAtResult != null) return onInteractEntityAtResult;
                      return p_143687_.m_7111_(p_143686_, p_143683_, p_143688_);
-                  });
+                  }, new PlayerInteractAtEntityEvent(getCraftPlayer(), entity.getBukkitEntity(), new org.bukkit.util.Vector(p_143683_.f_82479_, p_143683_.f_82480_, p_143683_.f_82481_), (p_143682_ == InteractionHand.OFF_HAND) ? EquipmentSlot.OFF_HAND : EquipmentSlot.HAND)); // CraftBukkit
                }
 
                public void m_141994_() {
-                  if (!(entity instanceof ItemEntity) && !(entity instanceof ExperienceOrb) && !(entity instanceof AbstractArrow) && entity != ServerGamePacketListenerImpl.this.f_9743_) {
-                     ServerGamePacketListenerImpl.this.f_9743_.m_5706_(entity);
+                  if (!(entity instanceof ItemEntity) && !(entity instanceof ExperienceOrb) && !(entity instanceof AbstractArrow) && (entity != ServerGamePacketListenerImpl.this.f_9743_ || f_9743_.m_5833_())) {
+                     ItemStack itemInHand = ServerGamePacketListenerImpl.this.f_9743_.m_21205_();
+                     //Forge: Perform attack range check. Original check was dist < 6, range is 3, so vanilla used padding=3
+                     if(ServerGamePacketListenerImpl.this.f_9743_.canHit(entity, 3)) {
+                        ServerGamePacketListenerImpl.this.f_9743_.m_5706_(entity);
+                        if (!itemInHand.m_41619_() && itemInHand.m_41613_() <= -1) {
+                           f_9743_.f_36096_.m_150429_();
+                        }
+                        // CraftBukkit end
+                     }
                   } else {
                      ServerGamePacketListenerImpl.this.m_9942_(Component.m_237115_("multiplayer.disconnect.invalid_entity_attacked"));
                      ServerGamePacketListenerImpl.f_9744_.warn("Player {} tried to attack an invalid entity", (Object)ServerGamePacketListenerImpl.this.f_9743_.m_7755_().getString());
@@ -1600,14 +_,18 @@
 
    public void m_7951_(ServerboundContainerClosePacket p_9858_) {
       PacketUtils.m_131359_(p_9858_, this, this.f_9743_.m_9236_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
+      CraftEventFactory.handleInventoryCloseEvent(this.f_9743_); // CraftBukkit
       this.f_9743_.m_9230_();
    }
 
    public void m_5914_(ServerboundContainerClickPacket p_9856_) {
       PacketUtils.m_131359_(p_9856_, this, this.f_9743_.m_9236_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
       this.f_9743_.m_9243_();
-      if (this.f_9743_.f_36096_.f_38840_ == p_9856_.m_133959_()) {
-         if (this.f_9743_.m_5833_()) {
+      if (this.f_9743_.f_36096_.f_38840_ == p_9856_.m_133959_() && this.f_9743_.f_36096_.m_6875_(this.f_9743_)) { // CraftBukkit
+         boolean cancelled = this.f_9743_.m_5833_(); // CraftBukkit - see below if
+         if (false) { // CraftBukkit
             this.f_9743_.f_36096_.m_150429_();
          } else if (!this.f_9743_.f_36096_.m_6875_(this.f_9743_)) {
             f_9744_.debug("Player {} interacted with invalid menu {}", this.f_9743_, this.f_9743_.f_36096_);
@@ -1618,7 +_,280 @@
             } else {
                boolean flag = p_9856_.m_182741_() != this.f_9743_.f_36096_.m_182424_();
                this.f_9743_.f_36096_.m_150443_();
-               this.f_9743_.f_36096_.m_150399_(i, p_9856_.m_133963_(), p_9856_.m_133966_(), this.f_9743_);
+               // CraftBukkit start - Call InventoryClickEvent
+               if (p_9856_.m_133962_() < -1 && p_9856_.m_133962_() != -999) {
+                  return;
+               }
+
+               InventoryView inventoryView = this.f_9743_.f_36096_.getBukkitView();
+               if(inventoryView == null)
+               {
+                  org.bukkit.inventory.Inventory inventory = new CraftInventory(new MohistModsInventory(this.f_9743_.f_36096_, this.f_9743_));
+                  InventoryView newView = new CraftInventoryView(this.f_9743_.getBukkitEntity(), inventory, this.f_9743_.f_36096_);
+                  inventoryView = newView;
+                  this.f_9743_.f_36096_.bukkitView = newView;
+               }
+               InventoryType.SlotType type = inventoryView.getSlotType(p_9856_.m_133962_());
+
+               InventoryClickEvent event;
+               ClickType click = ClickType.UNKNOWN;
+               InventoryAction action = InventoryAction.UNKNOWN;
+
+               ItemStack itemstack = ItemStack.f_41583_;
+
+               switch (p_9856_.m_133966_()) {
+                  case PICKUP:
+                     if (p_9856_.m_133963_() == 0) {
+                        click = ClickType.LEFT;
+                     } else if (p_9856_.m_133963_() == 1) {
+                        click = ClickType.RIGHT;
+                     }
+                     if (p_9856_.m_133963_() == 0 || p_9856_.m_133963_() == 1) {
+                        action = InventoryAction.NOTHING; // Don't want to repeat ourselves
+                        if (p_9856_.m_133962_() == -999) {
+                           if (!f_9743_.f_36096_.m_142621_().m_41619_()) {
+                              action = p_9856_.m_133963_() == 0 ? InventoryAction.DROP_ALL_CURSOR : InventoryAction.DROP_ONE_CURSOR;
+                           }
+                        } else if (p_9856_.m_133962_() < 0) {
+                           action = InventoryAction.NOTHING;
+                        } else {
+                           Slot slot = this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_());
+                           if (slot != null) {
+                              ItemStack clickedItem = slot.m_7993_();
+                              ItemStack cursor = f_9743_.f_36096_.m_142621_();
+                              if (clickedItem.m_41619_()) {
+                                 if (!cursor.m_41619_()) {
+                                    action = p_9856_.m_133963_() == 0 ? InventoryAction.PLACE_ALL : InventoryAction.PLACE_ONE;
+                                 }
+                              } else if (slot.m_8010_(f_9743_)) {
+                                 if (cursor.m_41619_()) {
+                                    action = p_9856_.m_133963_() == 0 ? InventoryAction.PICKUP_ALL : InventoryAction.PICKUP_HALF;
+                                 } else if (slot.m_5857_(cursor)) {
+                                    if (ItemStack.m_150942_(clickedItem, cursor)) {
+                                       int toPlace = p_9856_.m_133963_() == 0 ? cursor.m_41613_() : 1;
+                                       toPlace = Math.min(toPlace, clickedItem.m_41741_() - clickedItem.m_41613_());
+                                       toPlace = Math.min(toPlace, slot.f_40218_.m_6893_() - clickedItem.m_41613_());
+                                       if (toPlace == 1) {
+                                          action = InventoryAction.PLACE_ONE;
+                                       } else if (toPlace == cursor.m_41613_()) {
+                                          action = InventoryAction.PLACE_ALL;
+                                       } else if (toPlace < 0) {
+                                          action = toPlace != -1 ? InventoryAction.PICKUP_SOME : InventoryAction.PICKUP_ONE; // this happens with oversized stacks
+                                       } else if (toPlace != 0) {
+                                          action = InventoryAction.PLACE_SOME;
+                                       }
+                                    } else if (cursor.m_41613_() <= slot.m_6641_()) {
+                                       action = InventoryAction.SWAP_WITH_CURSOR;
+                                    }
+                                 } else if (ItemStack.m_150942_(cursor, clickedItem)) {
+                                    if (clickedItem.m_41613_() >= 0) {
+                                       if (clickedItem.m_41613_() + cursor.m_41613_() <= cursor.m_41741_()) {
+                                          // As of 1.5, this is result slots only
+                                          action = InventoryAction.PICKUP_ALL;
+                                       }
+                                    }
+                                 }
+                              }
+                           }
+                        }
+                     }
+                     break;
+                  // TODO check on updates
+                  case QUICK_MOVE:
+                     if (p_9856_.m_133963_() == 0) {
+                        click = ClickType.SHIFT_LEFT;
+                     } else if (p_9856_.m_133963_() == 1) {
+                        click = ClickType.SHIFT_RIGHT;
+                     }
+                     if (p_9856_.m_133963_() == 0 || p_9856_.m_133963_() == 1) {
+                        if (p_9856_.m_133962_() < 0) {
+                           action = InventoryAction.NOTHING;
+                        } else {
+                           Slot slot = this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_());
+                           if (slot != null && slot.m_8010_(this.f_9743_) && slot.m_6657_()) {
+                              action = InventoryAction.MOVE_TO_OTHER_INVENTORY;
+                           } else {
+                              action = InventoryAction.NOTHING;
+                           }
+                        }
+                     }
+                     break;
+                  case SWAP:
+                     if ((p_9856_.m_133963_() >= 0 && p_9856_.m_133963_() < 9) || p_9856_.m_133963_() == 40) {
+                        click = (p_9856_.m_133963_() == 40) ? ClickType.SWAP_OFFHAND : ClickType.NUMBER_KEY;
+                        Slot clickedSlot = this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_());
+                        if (clickedSlot.m_8010_(f_9743_)) {
+                           ItemStack hotbar = this.f_9743_.m_150109_().m_8020_(p_9856_.m_133963_());
+                           boolean canCleanSwap = hotbar.m_41619_() || (clickedSlot.f_40218_ == f_9743_.m_150109_() && clickedSlot.m_5857_(hotbar)); // the slot will accept the hotbar item
+                           if (clickedSlot.m_6657_()) {
+                              if (canCleanSwap) {
+                                 action = InventoryAction.HOTBAR_SWAP;
+                              } else {
+                                 action = InventoryAction.HOTBAR_MOVE_AND_READD;
+                              }
+                           } else if (!clickedSlot.m_6657_() && !hotbar.m_41619_() && clickedSlot.m_5857_(hotbar)) {
+                              action = InventoryAction.HOTBAR_SWAP;
+                           } else {
+                              action = InventoryAction.NOTHING;
+                           }
+                        } else {
+                           action = InventoryAction.NOTHING;
+                        }
+                     }
+                     break;
+                  case CLONE:
+                     if (p_9856_.m_133963_() == 2) {
+                        click = ClickType.MIDDLE;
+                        if (p_9856_.m_133962_() < 0) {
+                           action = InventoryAction.NOTHING;
+                        } else {
+                           Slot slot = this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_());
+                           if (slot != null && slot.m_6657_() && f_9743_.m_150110_().f_35937_ && f_9743_.f_36096_.m_142621_().m_41619_()) {
+                              action = InventoryAction.CLONE_STACK;
+                           } else {
+                              action = InventoryAction.NOTHING;
+                           }
+                        }
+                     } else {
+                        click = ClickType.UNKNOWN;
+                        action = InventoryAction.UNKNOWN;
+                     }
+                     break;
+                  case THROW:
+                     if (p_9856_.m_133962_() >= 0) {
+                        if (p_9856_.m_133963_() == 0) {
+                           click = ClickType.DROP;
+                           Slot slot = this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_());
+                           if (slot != null && slot.m_6657_() && slot.m_8010_(f_9743_) && !slot.m_7993_().m_41619_() && slot.m_7993_().m_41720_() != Item.m_41439_(Blocks.f_50016_)) {
+                              action = InventoryAction.DROP_ONE_SLOT;
+                           } else {
+                              action = InventoryAction.NOTHING;
+                           }
+                        } else if (p_9856_.m_133963_() == 1) {
+                           click = ClickType.CONTROL_DROP;
+                           Slot slot = this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_());
+                           if (slot != null && slot.m_6657_() && slot.m_8010_(f_9743_) && !slot.m_7993_().m_41619_() && slot.m_7993_().m_41720_() != Item.m_41439_(Blocks.f_50016_)) {
+                              action = InventoryAction.DROP_ALL_SLOT;
+                           } else {
+                              action = InventoryAction.NOTHING;
+                           }
+                        }
+                     } else {
+                        // Sane default (because this happens when they are holding nothing. Don't ask why.)
+                        click = ClickType.LEFT;
+                        if (p_9856_.m_133963_() == 1) {
+                           click = ClickType.RIGHT;
+                        }
+                        action = InventoryAction.NOTHING;
+                     }
+                     break;
+                  case QUICK_CRAFT:
+                     this.f_9743_.f_36096_.m_150399_(p_9856_.m_133962_(), p_9856_.m_133963_(), p_9856_.m_133966_(), this.f_9743_);
+                     break;
+                  case PICKUP_ALL:
+                     click = ClickType.DOUBLE_CLICK;
+                     action = InventoryAction.NOTHING;
+                     if (p_9856_.m_133962_() >= 0 && !this.f_9743_.f_36096_.m_142621_().m_41619_()) {
+                        ItemStack cursor = this.f_9743_.f_36096_.m_142621_();
+                        action = InventoryAction.NOTHING;
+                        // Quick check for if we have any of the item
+                        if (inventoryView.getTopInventory().contains(CraftMagicNumbers.getMaterial(cursor.m_41720_())) || inventoryView.getBottomInventory().contains(CraftMagicNumbers.getMaterial(cursor.m_41720_()))) {
+                           action = InventoryAction.COLLECT_TO_CURSOR;
+                        }
+                     }
+                     break;
+                  default:
+                     break;
+               }
+
+               if (p_9856_.m_133966_() != net.minecraft.world.inventory.ClickType.QUICK_CRAFT) {
+                  if (click == ClickType.NUMBER_KEY) {
+                     event = new InventoryClickEvent(inventoryView, type, p_9856_.m_133962_(), click, action, p_9856_.m_133963_());
+                  } else {
+                     event = new InventoryClickEvent(inventoryView, type, p_9856_.m_133962_(), click, action);
+                  }
+
+                  org.bukkit.inventory.Inventory top = inventoryView.getTopInventory();
+                  if (p_9856_.m_133962_() == 0 && top instanceof CraftingInventory) {
+                     org.bukkit.inventory.Recipe recipe = ((CraftingInventory) top).getRecipe();
+                     if (recipe != null) {
+                        if (click == ClickType.NUMBER_KEY) {
+                           event = new CraftItemEvent(recipe, inventoryView, type, p_9856_.m_133962_(), click, action, p_9856_.m_133963_());
+                        } else {
+                           event = new CraftItemEvent(recipe, inventoryView, type, p_9856_.m_133962_(), click, action);
+                        }
+                     }
+                  }
+
+                  if (p_9856_.m_133962_() == 3 && top instanceof SmithingInventory) {
+                     org.bukkit.inventory.ItemStack result = ((SmithingInventory) top).getResult();
+                     if (result != null) {
+                        if (click == ClickType.NUMBER_KEY) {
+                           event = new SmithItemEvent(inventoryView, type, p_9856_.m_133962_(), click, action, p_9856_.m_133963_());
+                        } else {
+                           event = new SmithItemEvent(inventoryView, type, p_9856_.m_133962_(), click, action);
+                        }
+                     }
+                  }
+
+                  event.setCancelled(cancelled);
+                  AbstractContainerMenu oldContainer = this.f_9743_.f_36096_; // SPIGOT-1224
+                  cserver.getPluginManager().callEvent(event);
+                  if (this.f_9743_.f_36096_ != oldContainer) {
+                     return;
+                  }
+
+                  switch (event.getResult()) {
+                     case ALLOW:
+                     case DEFAULT:
+                        this.f_9743_.f_36096_.m_150399_(i, p_9856_.m_133963_(), p_9856_.m_133966_(), this.f_9743_);
+                        break;
+                     case DENY:
+                        switch (action) {
+                           // Modified other slots
+                           case PICKUP_ALL:
+                           case MOVE_TO_OTHER_INVENTORY:
+                           case HOTBAR_MOVE_AND_READD:
+                           case HOTBAR_SWAP:
+                           case COLLECT_TO_CURSOR:
+                           case UNKNOWN:
+                              this.f_9743_.f_36096_.m_150429_();
+                              break;
+                           // Modified cursor and clicked
+                           case PICKUP_SOME:
+                           case PICKUP_HALF:
+                           case PICKUP_ONE:
+                           case PLACE_ALL:
+                           case PLACE_SOME:
+                           case PLACE_ONE:
+                           case SWAP_WITH_CURSOR:
+                              this.f_9743_.f_8906_.m_9829_(new ClientboundContainerSetSlotPacket(-1, -1, this.f_9743_.f_36095_.m_182425_(), this.f_9743_.f_36096_.m_142621_()));
+                              this.f_9743_.f_8906_.m_9829_(new ClientboundContainerSetSlotPacket(this.f_9743_.f_36096_.f_38840_, this.f_9743_.f_36095_.m_182425_(), p_9856_.m_133962_(), this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_()).m_7993_()));
+                              break;
+                           // Modified clicked only
+                           case DROP_ALL_SLOT:
+                           case DROP_ONE_SLOT:
+                              this.f_9743_.f_8906_.m_9829_(new ClientboundContainerSetSlotPacket(this.f_9743_.f_36096_.f_38840_, this.f_9743_.f_36095_.m_182425_(), p_9856_.m_133962_(), this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_()).m_7993_()));
+                              break;
+                           // Modified cursor only
+                           case DROP_ALL_CURSOR:
+                           case DROP_ONE_CURSOR:
+                           case CLONE_STACK:
+                              this.f_9743_.f_8906_.m_9829_(new ClientboundContainerSetSlotPacket(-1, -1, this.f_9743_.f_36095_.m_182425_(), this.f_9743_.f_36096_.m_142621_()));
+                              break;
+                           // Nothing
+                           case NOTHING:
+                              break;
+                        }
+                  }
+
+                  if (event instanceof CraftItemEvent || event instanceof SmithItemEvent) {
+                     // Need to update the inventory on crafting to
+                     // correctly support custom recipes
+                     f_9743_.f_36096_.m_150429_();
+                  }
+               }
+               // CraftBukkit end
 
                for(Int2ObjectMap.Entry<ItemStack> entry : Int2ObjectMaps.fastIterable(p_9856_.m_179582_())) {
                   this.f_9743_.f_36096_.m_182414_(entry.getIntKey(), entry.getValue());
@@ -1653,6 +_,7 @@
 
    public void m_6557_(ServerboundContainerButtonClickPacket p_9854_) {
       PacketUtils.m_131359_(p_9854_, this, this.f_9743_.m_9236_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
       this.f_9743_.m_9243_();
       if (this.f_9743_.f_36096_.f_38840_ == p_9854_.m_133935_() && !this.f_9743_.m_5833_()) {
          if (!this.f_9743_.f_36096_.m_6875_(this.f_9743_)) {
@@ -1685,6 +_,43 @@
 
          boolean flag1 = p_9915_.m_134561_() >= 1 && p_9915_.m_134561_() <= 45;
          boolean flag2 = itemstack.m_41619_() || itemstack.m_41773_() >= 0 && itemstack.m_41613_() <= 64 && !itemstack.m_41619_();
+         if (flag || (flag1 && !ItemStack.m_41728_(this.f_9743_.f_36095_.m_38853_(p_9915_.m_134561_()).m_7993_(), p_9915_.m_134564_()))) { // Insist on valid slot
+            // CraftBukkit start - Call click event
+            InventoryView inventory = this.f_9743_.f_36095_.getBukkitView();
+            org.bukkit.inventory.ItemStack item = CraftItemStack.asBukkitCopy(p_9915_.m_134564_());
+
+            InventoryType.SlotType type = InventoryType.SlotType.QUICKBAR;
+            if (flag) {
+               type = InventoryType.SlotType.OUTSIDE;
+            } else if (p_9915_.m_134561_() < 36) {
+               if (p_9915_.m_134561_() >= 5 && p_9915_.m_134561_() < 9) {
+                  type = InventoryType.SlotType.ARMOR;
+               } else {
+                  type = InventoryType.SlotType.CONTAINER;
+               }
+            }
+            InventoryCreativeEvent event = new InventoryCreativeEvent(inventory, type, flag ? -999 : p_9915_.m_134561_(), item);
+            cserver.getPluginManager().callEvent(event);
+
+            itemstack = CraftItemStack.asNMSCopy(event.getCursor());
+
+            switch (event.getResult()) {
+               case ALLOW:
+                  // Plugin cleared the id / stacksize checks
+                  flag2 = true;
+                  break;
+               case DEFAULT:
+                  break;
+               case DENY:
+                  // Reset the slot
+                  if (p_9915_.m_134561_() >= 0) {
+                     this.f_9743_.f_8906_.m_9829_(new ClientboundContainerSetSlotPacket(this.f_9743_.f_36095_.f_38840_, this.f_9743_.f_36095_.m_182425_(), p_9915_.m_134561_(), this.f_9743_.f_36095_.m_38853_(p_9915_.m_134561_()).m_7993_()));
+                     this.f_9743_.f_8906_.m_9829_(new ClientboundContainerSetSlotPacket(-1, this.f_9743_.f_36095_.m_182425_(), -1, ItemStack.f_41583_));
+                  }
+                  return;
+            }
+         }
+         // CraftBukkit end
          if (flag1 && flag2) {
             this.f_9743_.f_36095_.m_38853_(p_9915_.m_134561_()).m_5852_(itemstack);
             this.f_9743_.f_36095_.m_38946_();
@@ -1704,6 +_,7 @@
    }
 
    private void m_9922_(ServerboundSignUpdatePacket p_9923_, List<FilteredText> p_9924_) {
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
       this.f_9743_.m_9243_();
       ServerLevel serverlevel = this.f_9743_.m_9236_();
       BlockPos blockpos = p_9923_.m_134660_();
@@ -1717,17 +_,37 @@
          SignBlockEntity signblockentity = (SignBlockEntity)blockentity;
          if (!signblockentity.m_59751_() || !this.f_9743_.m_20148_().equals(signblockentity.m_155726_())) {
             f_9744_.warn("Player {} just tried to change non-editable sign", (Object)this.f_9743_.m_7755_().getString());
+            this.m_9829_(blockentity.m_58483_()); // CraftBukkit
             return;
          }
+
+         // CraftBukkit start
+         org.bukkit.entity.Player player = this.f_9743_.getBukkitEntity();
+         int x = p_9923_.m_134660_().m_123341_();
+         int y = p_9923_.m_134660_().m_123342_();
+         int z = p_9923_.m_134660_().m_123343_();
+         String[] lines = new String[4];
 
          for(int i = 0; i < p_9924_.size(); ++i) {
             FilteredText filteredtext = p_9924_.get(i);
             if (this.f_9743_.m_143387_()) {
-               signblockentity.m_59732_(i, Component.m_237113_(filteredtext.m_243113_()));
+               lines[i] = ChatFormatting.m_126649_(filteredtext.m_243113_());
             } else {
-               signblockentity.m_155702_(i, Component.m_237113_(filteredtext.f_215168_()), Component.m_237113_(filteredtext.m_243113_()));
-            }
-         }
+               lines[i] = ChatFormatting.m_126649_(filteredtext.f_215168_());
+            }
+         }
+
+         SignChangeEvent event = new SignChangeEvent((org.bukkit.craftbukkit.v1_19_R1.block.CraftBlock) player.getWorld().getBlockAt(x, y, z), this.f_9743_.getBukkitEntity(), lines);
+         this.cserver.getPluginManager().callEvent(event);
+
+         if (!event.isCancelled()) {
+            Component[] components = org.bukkit.craftbukkit.v1_19_R1.block.CraftSign.sanitizeLines(event.getLines());
+            for (int i = 0; i < components.length; i++) {
+               signblockentity.m_59732_(i, components[i]);
+            }
+            signblockentity.f_59721_ = false;
+         }
+         // CraftBukkit end
 
          signblockentity.m_6596_();
          serverlevel.m_7260_(blockpos, blockstate, blockstate, 3);
@@ -1736,6 +_,7 @@
    }
 
    public void m_5683_(ServerboundKeepAlivePacket p_9870_) {
+      PacketUtils.m_131359_(p_9870_, this, this.f_9743_.m_9236_()); // CraftBukkit
       if (this.f_9748_ && p_9870_.m_134102_() == this.f_9749_) {
          int i = (int)(Util.m_137550_() - this.f_9747_);
          this.f_9743_.f_8943_ = (this.f_9743_.f_8943_ * 3 + i) / 4;
@@ -1748,7 +_,17 @@
 
    public void m_6828_(ServerboundPlayerAbilitiesPacket p_9887_) {
       PacketUtils.m_131359_(p_9887_, this, this.f_9743_.m_9236_());
-      this.f_9743_.m_150110_().f_35935_ = p_9887_.m_134264_() && this.f_9743_.m_150110_().f_35936_;
+      // CraftBukkit start
+      if (this.f_9743_.m_150110_().f_35936_ && this.f_9743_.m_150110_().f_35935_ != p_9887_.m_134264_()) {
+         PlayerToggleFlightEvent event = new PlayerToggleFlightEvent(this.f_9743_.getBukkitEntity(), p_9887_.m_134264_());
+         this.cserver.getPluginManager().callEvent(event);
+         if (!event.isCancelled()) {
+            this.f_9743_.m_150110_().f_35935_ = p_9887_.m_134264_(); // Actually set the player's flying status
+         } else {
+            this.f_9743_.m_6885_(); // Tell the player their ability was reverted
+         }
+      }
+      // CraftBukkit end
    }
 
    public void m_5617_(ServerboundClientInformationPacket p_9845_) {
@@ -1756,7 +_,58 @@
       this.f_9743_.m_9156_(p_9845_);
    }
 
+   private static final ResourceLocation CUSTOM_REGISTER = new ResourceLocation("register");
+   private static final ResourceLocation CUSTOM_UNREGISTER = new ResourceLocation("unregister");
    public void m_7423_(ServerboundCustomPayloadPacket p_9860_) {
+      PacketUtils.m_131359_(p_9860_, this, this.f_9743_.m_9236_());
+      var readerIndex = p_9860_.f_133981_.readerIndex();
+      var buf = new byte[p_9860_.f_133981_.readableBytes()];
+      p_9860_.f_133981_.readBytes(buf);
+      p_9860_.f_133981_.readerIndex(readerIndex);
+      ServerLifecycleHooks.getCurrentServer().m_201446_(() -> {
+         if (ServerLifecycleHooks.getCurrentServer().hasStopped() || processedDisconnect) {
+            return;
+         }
+         if (this.f_9742_.m_129536_()) {
+            if (p_9860_.f_133980_.equals(CUSTOM_REGISTER)) {
+               try {
+                  String channels = new String(buf, StandardCharsets.UTF_8);
+                  for (String channel : channels.split("\0")) {
+                     if (!com.mysql.cj.util.StringUtils.isNullOrEmpty(channel)) {
+                        getCraftPlayer().addChannel(channel);
+                     }
+                  }
+               } catch (Exception ex) {
+                  f_9744_.error("Couldn't register custom payload", ex);
+                  this.disconnect("Invalid payload REGISTER!");
+               }
+            } else if (p_9860_.f_133980_.equals(CUSTOM_UNREGISTER)) {
+               try {
+                  String channels = new String(buf, StandardCharsets.UTF_8);
+                  for (String channel : channels.split("\0")) {
+                     if (!com.mysql.cj.util.StringUtils.isNullOrEmpty(channel)) {
+                        getCraftPlayer().removeChannel(channel);
+                     }
+                  }
+               } catch (Exception ex) {
+                  f_9744_.error("Couldn't unregister custom payload", ex);
+                  this.disconnect("Invalid payload UNREGISTER!");
+               }
+            } else {
+               try {
+                  this.cserver.getMessenger().dispatchIncomingMessage(this.f_9743_.getBukkitEntity(), p_9860_.f_133980_.toString(), buf);
+               } catch (Exception ex) {
+                  f_9744_.error("Couldn't dispatch custom payload", ex);
+                  this.disconnect("Invalid custom payload!");
+               }
+            }
+         }
+      });
+      net.minecraftforge.network.NetworkHooks.onCustomPayload(p_9860_, this.f_9742_);
+   }
+
+   public final boolean isDisconnected() {
+      return !this.f_9743_.joining && !this.f_9742_.m_129536_();
    }
 
    public void m_7477_(ServerboundChangeDifficultyPacket p_9839_) {
@@ -1781,4 +_,131 @@
    interface EntityInteraction {
       InteractionResult m_143694_(ServerPlayer p_143695_, Entity p_143696_, InteractionHand p_143697_);
    }
+
+   private void handleCommand(String s) {
+      if ( org.spigotmc.SpigotConfig.logCommands ) // Spigot
+      this.f_9744_.info(this.f_9743_.m_6302_() + " issued server command: " + s);
+
+      CraftPlayer player = this.getCraftPlayer();
+
+      PlayerCommandPreprocessEvent event = new PlayerCommandPreprocessEvent(player, s, new LazyPlayerSet(f_9745_));
+      this.cserver.getPluginManager().callEvent(event);
+
+      if (event.isCancelled()) {
+         return;
+      }
+
+      try {
+         if (this.cserver.dispatchCommand(event.getPlayer(), event.getMessage().substring(1))) {
+            return;
+         }
+      } catch (org.bukkit.command.CommandException ex) {
+         player.sendMessage(org.bukkit.ChatColor.RED + "An internal error occurred while attempting to perform this command");
+         java.util.logging.Logger.getLogger(ServerGamePacketListenerImpl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
+         return;
+      }
+   }
+   // CraftBukkit end
+
+   // CraftBukkit start - add method
+   public void chat(String s, PlayerChatMessage original, boolean async) {
+      if (s.isEmpty() || this.f_9743_.m_9241_() == ChatVisiblity.HIDDEN) {
+         return;
+      }
+      OutgoingPlayerChatMessage outgoing = OutgoingPlayerChatMessage.m_242676_(original);
+
+      if (!async && s.startsWith("/")) {
+         this.handleCommand(s);
+      } else if (this.f_9743_.m_9241_() == ChatVisiblity.SYSTEM) {
+         // Do nothing, this is coming from a plugin
+      } else {
+         org.bukkit.entity.Player player = this.getCraftPlayer();
+         AsyncPlayerChatEvent event = new AsyncPlayerChatEvent(async, player, s, new LazyPlayerSet(f_9745_));
+         String originalFormat = event.getFormat(), originalMessage = event.getMessage();
+         Bukkit.getPluginManager().callEvent(event);
+
+         if (PlayerChatEvent.getHandlerList().getRegisteredListeners().length != 0) {
+            // Evil plugins still listening to deprecated event
+            final PlayerChatEvent queueEvent = new PlayerChatEvent(player, event.getMessage(), event.getFormat(), event.getRecipients());
+            queueEvent.setCancelled(event.isCancelled());
+            Waitable waitable = new Waitable() {
+               @Override
+               protected Object evaluate() {
+                  org.bukkit.Bukkit.getPluginManager().callEvent(queueEvent);
+                  if (queueEvent.isCancelled()) {
+                     if (outgoing != null) {
+                        outgoing.m_241051_(ServerGamePacketListenerImpl.this.f_9745_.m_6846_());
+                     }
+                     return null;
+                  }
+                  String message = String.format(queueEvent.getFormat(), queueEvent.getPlayer().getDisplayName(), queueEvent.getMessage());
+                  if (((LazyPlayerSet) queueEvent.getRecipients()).isLazy()) {
+                     if (originalFormat.equals(queueEvent.getFormat()) && originalMessage.equals(queueEvent.getMessage()) && queueEvent.getPlayer().getName().equalsIgnoreCase(queueEvent.getPlayer().getDisplayName())) {
+                        ServerGamePacketListenerImpl.this.f_9745_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.f_130598_, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                        return null;
+                     } else if (CraftChatMessage.fromComponent(original.m_237220_()).equals(message)) {
+                        ServerGamePacketListenerImpl.this.f_9745_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.RAW, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                        return null;
+                     }
+
+                     for (ServerPlayer recipient : ServerGamePacketListenerImpl.this.f_9745_.m_6846_().f_11196_) {
+                        recipient.getBukkitEntity().sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), message);
+                     }
+                  } else {
+                     for (org.bukkit.entity.Player player : queueEvent.getRecipients()) {
+                        player.sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), message);
+                     }
+                  }
+                  ServerGamePacketListenerImpl.this.f_9745_.console.sendMessage(message);
+
+                  if (outgoing != null) {
+                     outgoing.m_241051_(ServerGamePacketListenerImpl.this.f_9745_.m_6846_());
+                  }
+                  return null;
+               }
+            };
+            if (async) {
+               f_9745_.processQueue.add(waitable);
+            } else {
+               waitable.run();
+            }
+            try {
+               waitable.get();
+            } catch (InterruptedException e) {
+               Thread.currentThread().interrupt(); // This is proper habit for java. If we aren't handling it, pass it on!
+            } catch (ExecutionException e) {
+               throw new RuntimeException("Exception processing chat event", e.getCause());
+            }
+         } else {
+            if (event.isCancelled()) {
+               if (outgoing != null) {
+                  outgoing.m_241051_(ServerGamePacketListenerImpl.this.f_9745_.m_6846_());
+               }
+               return;
+            }
+            s = String.format(event.getFormat(), event.getPlayer().getDisplayName(), event.getMessage());
+            if (((LazyPlayerSet) event.getRecipients()).isLazy()) {
+               if (originalFormat.equals(event.getFormat()) && originalMessage.equals(event.getMessage()) && event.getPlayer().getName().equalsIgnoreCase(event.getPlayer().getDisplayName())) {
+                  ServerGamePacketListenerImpl.this.f_9745_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.f_130598_, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                  return;
+               } else if (CraftChatMessage.fromComponent(original.m_237220_()).equals(s)) {
+                  ServerGamePacketListenerImpl.this.f_9745_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.RAW, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                  return;
+               }
+               for (ServerPlayer recipient : f_9745_.m_6846_().f_11196_) {
+                  recipient.getBukkitEntity().sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), s);
+               }
+            } else {
+               for (org.bukkit.entity.Player recipient : event.getRecipients()) {
+                  recipient.sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), s);
+               }
+            }
+            f_9745_.console.sendMessage(s);
+            if (outgoing != null) {
+               outgoing.m_241051_(ServerGamePacketListenerImpl.this.f_9745_.m_6846_());
+            }
+         }
+      }
+   }
+   // CraftBukkit end
 }

--- a/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -21,6 +_,7 @@
 import java.util.Set;
 import java.util.concurrent.CancellationException;
 import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.ExecutionException;
 import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.BiFunction;
 import java.util.function.Consumer;
@@ -54,6 +_,7 @@
 import net.minecraft.network.chat.LastSeenMessagesValidator;
 import net.minecraft.network.chat.MessageSignature;
 import net.minecraft.network.chat.MessageSignatureCache;
+import net.minecraft.network.chat.OutgoingChatMessage;
 import net.minecraft.network.chat.PlayerChatMessage;
 import net.minecraft.network.chat.RemoteChatSession;
 import net.minecraft.network.chat.SignableCommand;
@@ -179,11 +_,28 @@
 import net.minecraft.world.phys.shapes.BooleanOp;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_19_R3.CraftServer;
+import org.bukkit.craftbukkit.v1_19_R3.entity.CraftPlayer;
+import org.bukkit.craftbukkit.v1_19_R3.util.CraftChatMessage;
+import org.bukkit.craftbukkit.v1_19_R3.util.LazyPlayerSet;
+import org.bukkit.craftbukkit.v1_19_R3.util.Waitable;
+import org.bukkit.event.player.AsyncPlayerChatEvent;
+import org.bukkit.event.player.PlayerChatEvent;
+import org.bukkit.event.player.PlayerCommandPreprocessEvent;
+import org.bukkit.event.player.PlayerKickEvent;
 import org.slf4j.Logger;
 
 public class ServerGamePacketListenerImpl implements ServerPlayerConnection, TickablePacketListener, ServerGamePacketListener {
    static final Logger f_9744_ = LogUtils.getLogger();
    private static final int f_143608_ = 15000;
+   /**
+    * Forge: Deprecated in favor of range/reach attributes.
+    * @see net.minecraftforge.common.ForgeMod#BLOCK_REACH
+    * @see net.minecraftforge.common.ForgeMod#ENTITY_REACH
+    */
+   @Deprecated
    public static final double f_215198_ = Mth.m_144952_(6.0D);
    private static final int f_215199_ = -1;
    private static final int f_244471_ = 4096;
@@ -230,6 +_,29 @@
    private final MessageSignatureCache f_243718_ = MessageSignatureCache.m_246587_();
    private final FutureChain f_241681_;
 
+   private final CraftServer cserver;
+   public boolean processedDisconnect;
+   private int lastTick = MinecraftServer.currentTick;
+   private int allowedPlayerTicks = 1;
+   private int lastDropTick = MinecraftServer.currentTick;
+   private int lastBookTick  = MinecraftServer.currentTick;
+   private int dropCount = 0;
+   private static final int SURVIVAL_PLACE_DISTANCE_SQUARED = 6 * 6;
+   private static final int CREATIVE_PLACE_DISTANCE_SQUARED = 7 * 7;
+
+   // Get position of last block hit for BlockDamageLevel.STOPPED
+   private double lastPosX = Double.MAX_VALUE;
+   private double lastPosY = Double.MAX_VALUE;
+   private double lastPosZ = Double.MAX_VALUE;
+   private float lastPitch = Float.MAX_VALUE;
+   private float lastYaw = Float.MAX_VALUE;
+   private boolean justTeleported = false;
+   private boolean hasMoved; // Spigot
+
+   public CraftPlayer getCraftPlayer() {
+      return (this.f_9743_ == null) ? null : (CraftPlayer) this.f_9743_.getBukkitEntity();
+   }
+
    public ServerGamePacketListenerImpl(MinecraftServer p_9770_, Connection p_9771_, ServerPlayer p_9772_) {
       this.f_9745_ = p_9770_;
       this.f_9742_ = p_9771_;
@@ -238,8 +_,10 @@
       p_9772_.f_8906_ = this;
       this.f_9747_ = Util.m_137550_();
       p_9772_.m_8967_().m_7674_();
-      this.f_240889_ = p_9770_.m_214005_() ? SignedMessageChain.Decoder.f_252472_ : SignedMessageChain.Decoder.m_246683_(p_9772_.m_20148_());
-      this.f_241681_ = new FutureChain(p_9770_);
+	  this.f_240889_ = p_9770_.m_214005_() ? SignedMessageChain.Decoder.f_252472_ : SignedMessageChain.Decoder.m_246683_(p_9772_.m_20148_());
+	  this.f_241681_ = new FutureChain(p_9770_.chatExecutor); // CraftBukkit - async chat
+      // CraftBukkit start - add fields and methods
+      this.cserver = p_9770_.server;
    }
 
    public void m_9933_() {
@@ -336,10 +_,58 @@
       return this.f_9745_.m_7779_(this.f_9743_.m_36316_());
    }
 
+   // CraftBukkit star
    public void m_9942_(Component p_9943_) {
-      this.f_9742_.m_243124_(new ClientboundDisconnectPacket(p_9943_), PacketSendListener.m_243092_(() -> {
-         this.f_9742_.m_129507_(p_9943_);
+      disconnect(CraftChatMessage.fromComponent(p_9943_));
+   }
+   // CraftBukkit end
+
+   public void disconnect(String p_9943_) {
+      // CraftBukkit start - fire PlayerKickEvent
+      if (this.processedDisconnect) {
+         return;
+      }
+      if (!this.cserver.isPrimaryThread()) {
+         Waitable waitable = new Waitable() {
+            @Override
+            protected Object evaluate() {
+               ServerGamePacketListenerImpl.this.disconnect(p_9943_);
+               return null;
+            }
+         };
+
+         this.f_9745_.processQueue.add(waitable);
+
+         try {
+            waitable.get();
+         } catch (InterruptedException e) {
+            Thread.currentThread().interrupt();
+         } catch (ExecutionException e) {
+            throw new RuntimeException(e);
+         }
+         return;
+      }
+      String leaveMessage = ChatFormatting.YELLOW + this.f_9743_.m_6302_() + " left the game.";
+
+      PlayerKickEvent event = new PlayerKickEvent(this.f_9743_.getBukkitEntity(), p_9943_, leaveMessage);
+
+      if (this.cserver.getServer().m_130010_()) {
+         this.cserver.getPluginManager().callEvent(event);
+      }
+
+      if (event.isCancelled()) {
+         // Do not kick the player
+         return;
+      }
+      this.f_9743_.kickLeaveMessage = event.getLeaveMessage(); // CraftBukkit - SPIGOT-3034: Forward leave message to PlayerQuitEvent
+      // Send the possibly modified leave message
+      final Component ichatbasecomponent = CraftChatMessage.fromString(event.getReason(), true)[0];
+      // CraftBukkit end
+      this.f_9742_.m_243124_(new ClientboundDisconnectPacket(ichatbasecomponent), PacketSendListener.m_243092_(() -> {
+         this.f_9742_.m_129507_(ichatbasecomponent);
       }));
+
+      this.m_7026_(ichatbasecomponent); // CraftBukkit - fire quit instantly
       this.f_9742_.m_129540_();
       this.f_9745_.m_18709_(this.f_9742_::m_129541_);
    }
@@ -422,15 +_,18 @@
             d8 = d5 - entity.m_20189_();
             d10 = d6 * d6 + d7 * d7 + d8 * d8;
             boolean flag2 = false;
-            if (d10 > 0.0625D) {
+            if (d10 >org.spigotmc.SpigotConfig.movedWronglyThreshold) { // Spigot
                flag2 = true;
                f_9744_.warn("{} (vehicle of {}) moved wrongly! {}", entity.m_7755_().getString(), this.f_9743_.m_7755_().getString(), Math.sqrt(d10));
             }
+            Location curPos = this.getCraftPlayer().getLocation(); // Spigot
 
             entity.m_19890_(d3, d4, d5, f, f1);
+            this.f_9743_.m_19890_(d3, d4, d5, this.f_9743_.m_146908_(), this.f_9743_.m_146909_()); // Forge - Resync player position on vehicle moving
             boolean flag3 = serverlevel.m_45756_(entity, entity.m_20191_().m_82406_(0.0625D));
             if (flag && (flag2 || !flag3)) {
                entity.m_19890_(d0, d1, d2, f, f1);
+               this.f_9743_.m_19890_(d3, d4, d5, this.f_9743_.m_146908_(), this.f_9743_.m_146909_()); // Forge - Resync player position on vehicle moving
                this.f_9742_.m_129512_(new ClientboundMoveVehiclePacket(entity));
                return;
             }
@@ -447,7 +_,7 @@
    }
 
    private boolean m_9793_(Entity p_9794_) {
-      return p_9794_.f_19853_.m_45556_(p_9794_.m_20191_().m_82400_(0.0625D).m_82363_(0.0D, -0.55D, 0.0D)).allMatch(BlockBehaviour.BlockStateBase::m_60795_);
+      return BlockPos.m_121921_(p_9794_.m_20191_().m_82400_(0.0625D).m_82363_(0.0D, -0.55D, 0.0D)).allMatch(b -> p_9794_.f_19853_.m_8055_(b).m_60795_());
    }
 
    public void m_7376_(ServerboundAcceptTeleportationPacket p_9835_) {
@@ -906,7 +_,7 @@
                      d9 = d2 - this.f_9743_.m_20189_();
                      d11 = d7 * d7 + d8 * d8 + d9 * d9;
                      boolean flag2 = false;
-                     if (!this.f_9743_.m_8958_() && d11 > 0.0625D && !this.f_9743_.m_5803_() && !this.f_9743_.f_8941_.m_9295_() && this.f_9743_.f_8941_.m_9290_() != GameType.SPECTATOR) {
+                     if (!this.f_9743_.m_8958_() && d11 > org.spigotmc.SpigotConfig.movedWronglyThreshold && !this.f_9743_.m_5803_() && !this.f_9743_.f_8941_.m_9295_() && this.f_9743_.f_8941_.m_9290_() != GameType.SPECTATOR) {
                         flag2 = true;
                         f_9744_.warn("{} moved wrongly!", (Object)this.f_9743_.m_7755_().getString());
                      }
@@ -1019,8 +_,29 @@
       }
    }
 
+   // Spigot start - limit place/interactions
+   private int limitedPackets;
+   private long lastLimitedPacket = -1;
+
+   private boolean checkLimit(long timestamp) {
+      if (this.lastLimitedPacket != -1 && timestamp - this.lastLimitedPacket < 30 && this.limitedPackets++ >= 4) {
+         return false;
+      }
+
+      if (this.lastLimitedPacket == -1 || timestamp - this.lastLimitedPacket >= 30) {
+         this.lastLimitedPacket = timestamp;
+         this.limitedPackets = 0;
+         return true;
+      }
+
+      return true;
+   }
+   // Spigot end
+
    public void m_6371_(ServerboundUseItemOnPacket p_9930_) {
       PacketUtils.m_131359_(p_9930_, this, this.f_9743_.m_9236_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
+      if (!checkLimit(p_9930_.timestamp)) return; // Spigot - check limit
       this.f_9743_.f_8906_.m_215201_(p_9930_.m_238008_());
       ServerLevel serverlevel = this.f_9743_.m_9236_();
       InteractionHand interactionhand = p_9930_.m_134703_();
@@ -1030,7 +_,7 @@
          Vec3 vec3 = blockhitresult.m_82450_();
          BlockPos blockpos = blockhitresult.m_82425_();
          Vec3 vec31 = Vec3.m_82512_(blockpos);
-         if (!(this.f_9743_.m_146892_().m_82557_(vec31) > f_215198_)) {
+         if (this.f_9743_.canReach(blockpos, 1.5)) { // Vanilla uses eye-to-center distance < 6, which implies a padding of 1.5
             Vec3 vec32 = vec3.m_82546_(vec31);
             double d0 = 1.0000001D;
             if (Math.abs(vec32.m_7096_()) < 1.0000001D && Math.abs(vec32.m_7098_()) < 1.0000001D && Math.abs(vec32.m_7094_()) < 1.0000001D) {
@@ -1038,7 +_,7 @@
                this.f_9743_.m_9243_();
                int i = this.f_9743_.f_19853_.m_151558_();
                if (blockpos.m_123342_() < i) {
-                  if (this.f_9766_ == null && this.f_9743_.m_20275_((double)blockpos.m_123341_() + 0.5D, (double)blockpos.m_123342_() + 0.5D, (double)blockpos.m_123343_() + 0.5D) < 64.0D && serverlevel.m_7966_(this.f_9743_, blockpos)) {
+                  if (this.f_9766_ == null && serverlevel.m_7966_(this.f_9743_, blockpos)) {
                      InteractionResult interactionresult = this.f_9743_.f_8941_.m_7179_(this.f_9743_, serverlevel, itemstack, interactionhand, blockhitresult);
                      if (direction == Direction.UP && !interactionresult.m_19077_() && blockpos.m_123342_() >= i - 1 && m_9790_(this.f_9743_, itemstack)) {
                         Component component = Component.m_237110_("build.tooHigh", i - 1).m_130940_(ChatFormatting.RED);
@@ -1063,6 +_,8 @@
 
    public void m_5760_(ServerboundUseItemPacket p_9932_) {
       PacketUtils.m_131359_(p_9932_, this, this.f_9743_.m_9236_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
+      if (!checkLimit(p_9932_.timestamp)) return; // Spigot - check limit
       this.m_215201_(p_9932_.m_238013_());
       ServerLevel serverlevel = this.f_9743_.m_9236_();
       InteractionHand interactionhand = p_9932_.m_134717_();
@@ -1182,10 +_,13 @@
                }
 
                CompletableFuture<FilteredText> completablefuture = this.m_243132_(playerchatmessage.m_245728_());
-               CompletableFuture<Component> completablefuture1 = this.f_9745_.m_236742_().m_236961_(this.f_9743_, playerchatmessage.m_245692_());
+               CompletableFuture<Component> completablefuture1 = net.minecraftforge.common.ForgeHooks.getServerChatSubmittedDecorator().m_236961_(this.f_9743_, playerchatmessage.m_245692_());
                this.f_241681_.m_241849_((p_248212_) -> {
                   return CompletableFuture.allOf(completablefuture, completablefuture1).thenAcceptAsync((p_248218_) -> {
-                     PlayerChatMessage playerchatmessage1 = playerchatmessage.m_241956_(completablefuture1.join()).m_243072_(completablefuture.join().f_243010_());
+                     Component decoratedContent = completablefuture1.join();
+                     if (decoratedContent == null)
+                        return; // Forge: ServerChatEvent was canceled if this is null.
+                     PlayerChatMessage playerchatmessage1 = playerchatmessage.m_241956_(decoratedContent).m_243072_(completablefuture.join().f_243010_());
                      this.m_243086_(playerchatmessage1);
                   }, p_248212_);
                });
@@ -1427,6 +_,13 @@
       PacketUtils.m_131359_(p_9866_, this, this.f_9743_.m_9236_());
       final ServerLevel serverlevel = this.f_9743_.m_9236_();
       final Entity entity = p_9866_.m_179603_(serverlevel);
+      // Spigot Start
+      if ( entity == f_9743_ && !f_9743_.m_5833_() )
+      {
+         disconnect( "Cannot interact with self!" );
+         return;
+      }
+      // Spigot End
       this.f_9743_.m_9243_();
       this.f_9743_.m_20260_(p_9866_.m_134061_());
       if (entity != null) {
@@ -1435,9 +_,9 @@
          }
 
          AABB aabb = entity.m_20191_();
-         if (aabb.m_272282_(this.f_9743_.m_146892_()) < f_215198_) {
+         if (this.f_9743_.canReach(entity, 3)) { // Vanilla padding is 3.0 (distSq < 6.0 * 6.0)
             p_9866_.m_179617_(new ServerboundInteractPacket.Handler() {
-               private void m_143678_(InteractionHand p_143679_, ServerGamePacketListenerImpl.EntityInteraction p_143680_) {
+               private void performInteraction(InteractionHand p_143679_, ServerGamePacketListenerImpl.EntityInteraction p_143680_) {
                   ItemStack itemstack = ServerGamePacketListenerImpl.this.f_9743_.m_21120_(p_143679_);
                   if (itemstack.m_246617_(serverlevel.m_246046_())) {
                      ItemStack itemstack1 = itemstack.m_41777_();
@@ -1453,11 +_,13 @@
                }
 
                public void m_142299_(InteractionHand p_143677_) {
-                  this.m_143678_(p_143677_, Player::m_36157_);
+                  this.performInteraction(p_143677_, Player::m_36157_);
                }
 
                public void m_142143_(InteractionHand p_143682_, Vec3 p_143683_) {
-                  this.m_143678_(p_143682_, (p_143686_, p_143687_, p_143688_) -> {
+                  this.performInteraction(p_143682_, (p_143686_, p_143687_, p_143688_) -> {
+                     InteractionResult onInteractEntityAtResult = net.minecraftforge.common.ForgeHooks.onInteractEntityAt(f_9743_, entity, p_143683_, p_143682_);
+                     if (onInteractEntityAtResult != null) return onInteractEntityAtResult;
                      return p_143687_.m_7111_(p_143686_, p_143683_, p_143688_);
                   });
                }
@@ -1670,6 +_,7 @@
    }
 
    public void m_7423_(ServerboundCustomPayloadPacket p_9860_) {
+      net.minecraftforge.network.NetworkHooks.onCustomPayload(p_9860_, this.f_9742_);
    }
 
    public void m_7477_(ServerboundChangeDifficultyPacket p_9839_) {
@@ -1721,8 +_,133 @@
       return this.f_9743_;
    }
 
+    public void teleport(Location to) {
+    }
+
+   public void dismount(double x, double y, double z, float yRot, float xRot) {
+   }
+
    @FunctionalInterface
    interface EntityInteraction {
       InteractionResult m_143694_(ServerPlayer p_143695_, Entity p_143696_, InteractionHand p_143697_);
    }
+
+   public final boolean isDisconnected() {
+      return !this.f_9743_.joining && !this.f_9742_.m_129536_();
+   }
+
+   private void handleCommand(String s) {
+      if ( org.spigotmc.SpigotConfig.logCommands ) // Spigot
+      this.f_9744_.info(this.f_9743_.m_6302_() + " issued server command: " + s);
+
+      CraftPlayer player = this.getCraftPlayer();
+
+      PlayerCommandPreprocessEvent event = new PlayerCommandPreprocessEvent(player, s, new LazyPlayerSet(f_9745_));
+      this.cserver.getPluginManager().callEvent(event);
+
+      if (event.isCancelled()) {
+         return;
+      }
+
+      try {
+         if (this.cserver.dispatchCommand(event.getPlayer(), event.getMessage().substring(1))) {
+            return;
+         }
+      } catch (org.bukkit.command.CommandException ex) {
+         player.sendMessage(org.bukkit.ChatColor.RED + "An internal error occurred while attempting to perform this command");
+         java.util.logging.Logger.getLogger(ServerGamePacketListenerImpl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
+         return;
+      }
+   }
+   // CraftBukkit end
+
+   // CraftBukkit start - add method
+   public void chat(String s, PlayerChatMessage original, boolean async) {
+      if (s.isEmpty() || this.f_9743_.m_9241_() == ChatVisiblity.HIDDEN) {
+         return;
+      }
+      OutgoingChatMessage outgoing = OutgoingChatMessage.m_247282_(original);
+
+      if (!async && s.startsWith("/")) {
+         this.handleCommand(s);
+      } else if (this.f_9743_.m_9241_() == ChatVisiblity.SYSTEM) {
+         // Do nothing, this is coming from a plugin
+      } else {
+         org.bukkit.entity.Player player = this.getCraftPlayer();
+         AsyncPlayerChatEvent event = new AsyncPlayerChatEvent(async, player, s, new LazyPlayerSet(f_9745_));
+         String originalFormat = event.getFormat(), originalMessage = event.getMessage();
+         Bukkit.getPluginManager().callEvent(event);
+
+         if (PlayerChatEvent.getHandlerList().getRegisteredListeners().length != 0) {
+            // Evil plugins still listening to deprecated event
+            final PlayerChatEvent queueEvent = new PlayerChatEvent(player, event.getMessage(), event.getFormat(), event.getRecipients());
+            queueEvent.setCancelled(event.isCancelled());
+            Waitable waitable = new Waitable() {
+               @Override
+               protected Object evaluate() {
+                  org.bukkit.Bukkit.getPluginManager().callEvent(queueEvent);
+                  if (queueEvent.isCancelled()) {
+                     return null;
+                  }
+                  String message = String.format(queueEvent.getFormat(), queueEvent.getPlayer().getDisplayName(), queueEvent.getMessage());
+                  if (((LazyPlayerSet) queueEvent.getRecipients()).isLazy()) {
+                     if (originalFormat.equals(queueEvent.getFormat()) && originalMessage.equals(queueEvent.getMessage()) && queueEvent.getPlayer().getName().equalsIgnoreCase(queueEvent.getPlayer().getDisplayName())) {
+                        ServerGamePacketListenerImpl.this.f_9745_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.f_130598_, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                        return null;
+                     } else if (CraftChatMessage.fromComponent(original.m_245692_()).equals(message)) {
+                        ServerGamePacketListenerImpl.this.f_9745_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.RAW, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                        return null;
+                     }
+
+                     for (ServerPlayer recipient : ServerGamePacketListenerImpl.this.f_9745_.m_6846_().f_11196_) {
+                        recipient.getBukkitEntity().sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), message);
+                     }
+                  } else {
+                     for (org.bukkit.entity.Player player : queueEvent.getRecipients()) {
+                        player.sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), message);
+                     }
+                  }
+                  ServerGamePacketListenerImpl.this.f_9745_.console.sendMessage(message);
+
+                  return null;
+               }
+            };
+            if (async) {
+               f_9745_.processQueue.add(waitable);
+            } else {
+               waitable.run();
+            }
+            try {
+               waitable.get();
+            } catch (InterruptedException e) {
+               Thread.currentThread().interrupt(); // This is proper habit for java. If we aren't handling it, pass it on!
+            } catch (ExecutionException e) {
+               throw new RuntimeException("Exception processing chat event", e.getCause());
+            }
+         } else {
+            if (event.isCancelled()) {
+               return;
+            }
+            s = String.format(event.getFormat(), event.getPlayer().getDisplayName(), event.getMessage());
+            if (((LazyPlayerSet) event.getRecipients()).isLazy()) {
+               if (originalFormat.equals(event.getFormat()) && originalMessage.equals(event.getMessage()) && event.getPlayer().getName().equalsIgnoreCase(event.getPlayer().getDisplayName())) {
+                  ServerGamePacketListenerImpl.this.f_9745_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.f_130598_, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                  return;
+               } else if (CraftChatMessage.fromComponent(original.m_245692_()).equals(s)) {
+                  ServerGamePacketListenerImpl.this.f_9745_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.RAW, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                  return;
+               }
+               for (ServerPlayer recipient : f_9745_.m_6846_().f_11196_) {
+                  recipient.getBukkitEntity().sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), s);
+               }
+            } else {
+               for (org.bukkit.entity.Player recipient : event.getRecipients()) {
+                  recipient.sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), s);
+               }
+            }
+            f_9745_.console.sendMessage(s);
+         }
+      }
+   }
+   // CraftBukkit end
 }

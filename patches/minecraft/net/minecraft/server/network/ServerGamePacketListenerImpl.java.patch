--- a/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -19,6 +_,7 @@
 import java.util.Set;
 import java.util.concurrent.CancellationException;
 import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.ExecutionException;
 import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.BiFunction;
 import java.util.function.Consumer;
@@ -26,6 +_,7 @@
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
+import net.md_5.bungee.api.ChatMessageType;
 import net.minecraft.ChatFormatting;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
@@ -58,6 +_,7 @@
 import net.minecraft.network.chat.LastSeenMessagesValidator;
 import net.minecraft.network.chat.MessageSignature;
 import net.minecraft.network.chat.MessageSigner;
+import net.minecraft.network.chat.OutgoingPlayerChatMessage;
 import net.minecraft.network.chat.PlayerChatMessage;
 import net.minecraft.network.chat.PreviewableCommand;
 import net.minecraft.network.chat.SignedMessageChain;
@@ -132,6 +_,7 @@
 import net.minecraft.util.FutureChain;
 import net.minecraft.util.Mth;
 import net.minecraft.util.StringUtil;
+import net.minecraft.util.thread.BlockableEventLoop;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.effect.MobEffects;
@@ -178,11 +_,28 @@
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
 import org.apache.commons.lang3.StringUtils;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_19_R1.CraftServer;
+import org.bukkit.craftbukkit.v1_19_R1.entity.CraftPlayer;
+import org.bukkit.craftbukkit.v1_19_R1.util.CraftChatMessage;
+import org.bukkit.craftbukkit.v1_19_R1.util.LazyPlayerSet;
+import org.bukkit.craftbukkit.v1_19_R1.util.Waitable;
+import org.bukkit.event.player.AsyncPlayerChatEvent;
+import org.bukkit.event.player.PlayerChatEvent;
+import org.bukkit.event.player.PlayerCommandPreprocessEvent;
+import org.bukkit.event.player.PlayerKickEvent;
 import org.slf4j.Logger;
 
 public class ServerGamePacketListenerImpl implements ServerPlayerConnection, TickablePacketListener, ServerGamePacketListener {
    static final Logger f_9744_ = LogUtils.getLogger();
    private static final int f_143608_ = 15000;
+   /**
+    * Forge: Deprecated in favor of range/reach attributes.
+    * @see net.minecraftforge.common.ForgeMod#REACH_DISTANCE
+    * @see net.minecraftforge.common.ForgeMod#ATTACK_RANGE
+    */
+   @Deprecated
    public static final double f_215198_ = Mth.m_144952_(6.0D);
    private static final int f_215199_ = -1;
    private static final int f_241635_ = 4096;
@@ -227,6 +_,28 @@
    private final LastSeenMessagesValidator f_241654_ = new LastSeenMessagesValidator();
    private final FutureChain f_241681_;
 
+   private final CraftServer cserver;
+   public boolean processedDisconnect;
+   private int lastTick = MinecraftServer.currentTick;
+   private int allowedPlayerTicks = 1;
+   private int lastDropTick = MinecraftServer.currentTick;
+   private int lastBookTick  = MinecraftServer.currentTick;
+   private int dropCount = 0;
+   private static final int SURVIVAL_PLACE_DISTANCE_SQUARED = 6 * 6;
+   private static final int CREATIVE_PLACE_DISTANCE_SQUARED = 7 * 7;
+
+   // Get position of last block hit for BlockDamageLevel.STOPPED
+   private double lastPosX = Double.MAX_VALUE;
+   private double lastPosY = Double.MAX_VALUE;
+   private double lastPosZ = Double.MAX_VALUE;
+   private float lastPitch = Float.MAX_VALUE;
+   private float lastYaw = Float.MAX_VALUE;
+   private boolean justTeleported = false;
+
+   public CraftPlayer getCraftPlayer() {
+      return (this.f_9743_ == null) ? null : (CraftPlayer) this.f_9743_.getBukkitEntity();
+   }
+
    public ServerGamePacketListenerImpl(MinecraftServer p_9770_, Connection p_9771_, ServerPlayer p_9772_) {
       this.f_9745_ = p_9770_;
       this.f_9742_ = p_9771_;
@@ -242,7 +_,9 @@
          this.f_240889_ = SignedMessageChain.Decoder.f_243004_;
       }
 
-      this.f_241681_ = new FutureChain(p_9770_);
+	  this.f_241681_ = new FutureChain(p_9770_.chatExecutor); // CraftBukkit - async chat
+      // CraftBukkit start - add fields and methods
+      this.cserver = p_9770_.server;
    }
 
    public void m_9933_() {
@@ -340,10 +_,58 @@
       return this.f_9745_.m_7779_(this.f_9743_.m_36316_());
    }
 
+   // CraftBukkit star
    public void m_9942_(Component p_9943_) {
-      this.f_9742_.m_243124_(new ClientboundDisconnectPacket(p_9943_), PacketSendListener.m_243092_(() -> {
-         this.f_9742_.m_129507_(p_9943_);
+      disconnect(CraftChatMessage.fromComponent(p_9943_));
+   }
+   // CraftBukkit end
+
+   public void disconnect(String p_9943_) {
+      // CraftBukkit start - fire PlayerKickEvent
+      if (this.processedDisconnect) {
+         return;
+      }
+      if (!this.cserver.isPrimaryThread()) {
+         Waitable waitable = new Waitable() {
+            @Override
+            protected Object evaluate() {
+               ServerGamePacketListenerImpl.this.disconnect(p_9943_);
+               return null;
+            }
+         };
+
+         this.f_9745_.processQueue.add(waitable);
+
+         try {
+            waitable.get();
+         } catch (InterruptedException e) {
+            Thread.currentThread().interrupt();
+         } catch (ExecutionException e) {
+            throw new RuntimeException(e);
+         }
+         return;
+      }
+      String leaveMessage = ChatFormatting.YELLOW + this.f_9743_.m_6302_() + " left the game.";
+
+      PlayerKickEvent event = new PlayerKickEvent(this.f_9743_.getBukkitEntity(), p_9943_, leaveMessage);
+
+      if (this.cserver.getServer().m_130010_()) {
+         this.cserver.getPluginManager().callEvent(event);
+      }
+
+      if (event.isCancelled()) {
+         // Do not kick the player
+         return;
+      }
+      this.f_9743_.kickLeaveMessage = event.getLeaveMessage(); // CraftBukkit - SPIGOT-3034: Forward leave message to PlayerQuitEvent
+      // Send the possibly modified leave message
+      final Component ichatbasecomponent = CraftChatMessage.fromString(event.getReason(), true)[0];
+      // CraftBukkit end
+      this.f_9742_.m_243124_(new ClientboundDisconnectPacket(ichatbasecomponent), PacketSendListener.m_243092_(() -> {
+         this.f_9742_.m_129507_(ichatbasecomponent);
       }));
+
+      this.m_7026_(ichatbasecomponent); // CraftBukkit - fire quit instantly
       this.f_9742_.m_129540_();
       this.f_9745_.m_18709_(this.f_9742_::m_129541_);
    }
@@ -432,9 +_,11 @@
             }
 
             entity.m_19890_(d3, d4, d5, f, f1);
+            this.f_9743_.m_19890_(d3, d4, d5, this.f_9743_.m_146908_(), this.f_9743_.m_146909_()); // Forge - Resync player position on vehicle moving
             boolean flag3 = serverlevel.m_45756_(entity, entity.m_20191_().m_82406_(0.0625D));
             if (flag && (flag2 || !flag3)) {
                entity.m_19890_(d0, d1, d2, f, f1);
+               this.f_9743_.m_19890_(d3, d4, d5, this.f_9743_.m_146908_(), this.f_9743_.m_146909_()); // Forge - Resync player position on vehicle moving
                this.f_9742_.m_129512_(new ClientboundMoveVehiclePacket(entity));
                return;
             }
@@ -451,7 +_,7 @@
    }
 
    private boolean m_9793_(Entity p_9794_) {
-      return p_9794_.f_19853_.m_45556_(p_9794_.m_20191_().m_82400_(0.0625D).m_82363_(0.0D, -0.55D, 0.0D)).allMatch(BlockBehaviour.BlockStateBase::m_60795_);
+      return BlockPos.m_121921_(p_9794_.m_20191_().m_82400_(0.0625D).m_82363_(0.0D, -0.55D, 0.0D)).allMatch(b -> p_9794_.f_19853_.m_8055_(b).m_60795_());
    }
 
    public void m_7376_(ServerboundAcceptTeleportationPacket p_9835_) {
@@ -980,6 +_,10 @@
       this.f_9743_.f_8906_.m_9829_(new ClientboundPlayerPositionPacket(p_143618_ - d0, p_143619_ - d1, p_143620_ - d2, p_143621_ - f, p_143622_ - f1, p_143623_, this.f_9767_, p_143624_));
    }
 
+   public void teleport(Location to) {
+      m_143617_(to.getX(), to.getY(), to.getZ(), to.getYaw(), to.getPitch(), Collections.emptySet(), true);
+   }
+
    public void m_7502_(ServerboundPlayerActionPacket p_9889_) {
       PacketUtils.m_131359_(p_9889_, this, this.f_9743_.m_9236_());
       BlockPos blockpos = p_9889_.m_134281_();
@@ -1040,7 +_,7 @@
       Vec3 vec3 = blockhitresult.m_82450_();
       BlockPos blockpos = blockhitresult.m_82425_();
       Vec3 vec31 = Vec3.m_82512_(blockpos);
-      if (!(this.f_9743_.m_146892_().m_82557_(vec31) > f_215198_)) {
+      if (this.f_9743_.canInteractWith(blockpos, 3)) {
          Vec3 vec32 = vec3.m_82546_(vec31);
          double d0 = 1.0000001D;
          if (Math.abs(vec32.m_7096_()) < 1.0000001D && Math.abs(vec32.m_7098_()) < 1.0000001D && Math.abs(vec32.m_7094_()) < 1.0000001D) {
@@ -1048,7 +_,7 @@
             this.f_9743_.m_9243_();
             int i = this.f_9743_.f_19853_.m_151558_();
             if (blockpos.m_123342_() < i) {
-               if (this.f_9766_ == null && this.f_9743_.m_20275_((double)blockpos.m_123341_() + 0.5D, (double)blockpos.m_123342_() + 0.5D, (double)blockpos.m_123343_() + 0.5D) < 64.0D && serverlevel.m_7966_(this.f_9743_, blockpos)) {
+               if (this.f_9766_ == null && serverlevel.m_7966_(this.f_9743_, blockpos)) {
                   InteractionResult interactionresult = this.f_9743_.f_8941_.m_7179_(this.f_9743_, serverlevel, itemstack, interactionhand, blockhitresult);
                   if (direction == Direction.UP && !interactionresult.m_19077_() && blockpos.m_123342_() >= i - 1 && m_9790_(this.f_9743_, itemstack)) {
                      Component component = Component.m_237110_("build.tooHigh", i - 1).m_130940_(ChatFormatting.RED);
@@ -1184,10 +_,12 @@
                if (this.m_242598_(playerchatmessage)) {
                   this.f_241681_.m_241849_(() -> {
                      CompletableFuture<FilteredText> completablefuture = this.m_243132_(playerchatmessage.m_241775_().f_241656_());
-                     CompletableFuture<PlayerChatMessage> completablefuture1 = this.f_9745_.m_236742_().m_243107_(this.f_9743_, playerchatmessage);
+                     CompletableFuture<PlayerChatMessage> completablefuture1 = net.minecraftforge.common.ForgeHooks.getServerChatSubmittedDecorator().m_243107_(this.f_9743_, playerchatmessage);
                      return CompletableFuture.allOf(completablefuture, completablefuture1).thenAcceptAsync((p_243197_) -> {
                         FilterMask filtermask = completablefuture.join().f_243010_();
-                        PlayerChatMessage playerchatmessage1 = completablefuture1.join().m_243072_(filtermask);
+                        PlayerChatMessage playerchatmessage1 = completablefuture1.join();
+                        if (playerchatmessage1 == null) return; // Forge: ServerChatEvent was canceled if this is null.
+                        playerchatmessage1 = playerchatmessage1.m_243072_(filtermask);
                         this.m_243086_(playerchatmessage1);
                      }, this.f_9745_);
                   });
@@ -1383,7 +_,7 @@
 
    private CompletableFuture<Component> m_215246_(String p_215247_) {
       Component component = Component.m_237113_(p_215247_);
-      CompletableFuture<Component> completablefuture = this.f_9745_.m_236742_().m_236961_(this.f_9743_, component).thenApply((p_238202_) -> {
+      CompletableFuture<Component> completablefuture = net.minecraftforge.common.ForgeHooks.getServerChatPreviewDecorator().m_236961_(this.f_9743_, component).thenApply((p_238202_) -> {
          return !component.equals(p_238202_) ? p_238202_ : null;
       });
       completablefuture.thenAcceptAsync((p_242747_) -> {
@@ -1525,6 +_,13 @@
       PacketUtils.m_131359_(p_9866_, this, this.f_9743_.m_9236_());
       ServerLevel serverlevel = this.f_9743_.m_9236_();
       final Entity entity = p_9866_.m_179603_(serverlevel);
+      // Spigot Start
+      if ( entity == f_9743_ && !f_9743_.m_5833_() )
+      {
+         disconnect( "Cannot interact with self!" );
+         return;
+      }
+      // Spigot End
       this.f_9743_.m_9243_();
       this.f_9743_.m_20260_(p_9866_.m_134061_());
       if (entity != null) {
@@ -1532,9 +_,10 @@
             return;
          }
 
-         if (entity.m_20238_(this.f_9743_.m_146892_()) < f_215198_) {
+         if (true) { //Forge: Perform distance checks below since interactions and attacks differ.
             p_9866_.m_179617_(new ServerboundInteractPacket.Handler() {
-               private void m_143678_(InteractionHand p_143679_, ServerGamePacketListenerImpl.EntityInteraction p_143680_) {
+               private void performInteraction(InteractionHand p_143679_, ServerGamePacketListenerImpl.EntityInteraction p_143680_) {
+                  if(!ServerGamePacketListenerImpl.this.f_9743_.canInteractWith(entity, 1.5D)) return; //Forge: If the entity cannot be reached, do nothing. Original check was dist < 6, range is 4.5, so vanilla used padding=1.5
                   ItemStack itemstack = ServerGamePacketListenerImpl.this.f_9743_.m_21120_(p_143679_).m_41777_();
                   InteractionResult interactionresult = p_143680_.m_143694_(ServerGamePacketListenerImpl.this.f_9743_, entity, p_143679_);
                   if (interactionresult.m_19077_()) {
@@ -1547,17 +_,21 @@
                }
 
                public void m_142299_(InteractionHand p_143677_) {
-                  this.m_143678_(p_143677_, Player::m_36157_);
+                  this.performInteraction(p_143677_, Player::m_36157_);
                }
 
                public void m_142143_(InteractionHand p_143682_, Vec3 p_143683_) {
-                  this.m_143678_(p_143682_, (p_143686_, p_143687_, p_143688_) -> {
+                  this.performInteraction(p_143682_, (p_143686_, p_143687_, p_143688_) -> {
+                     InteractionResult onInteractEntityAtResult = net.minecraftforge.common.ForgeHooks.onInteractEntityAt(f_9743_, entity, p_143683_, p_143682_);
+                     if (onInteractEntityAtResult != null) return onInteractEntityAtResult;
                      return p_143687_.m_7111_(p_143686_, p_143683_, p_143688_);
                   });
                }
 
                public void m_141994_() {
                   if (!(entity instanceof ItemEntity) && !(entity instanceof ExperienceOrb) && !(entity instanceof AbstractArrow) && entity != ServerGamePacketListenerImpl.this.f_9743_) {
+                     //Forge: Perform attack range check. Original check was dist < 6, range is 3, so vanilla used padding=3
+                     if(ServerGamePacketListenerImpl.this.f_9743_.canHit(entity, 3))
                      ServerGamePacketListenerImpl.this.f_9743_.m_5706_(entity);
                   } else {
                      ServerGamePacketListenerImpl.this.m_9942_(Component.m_237115_("multiplayer.disconnect.invalid_entity_attacked"));
@@ -1757,6 +_,7 @@
    }
 
    public void m_7423_(ServerboundCustomPayloadPacket p_9860_) {
+      net.minecraftforge.network.NetworkHooks.onCustomPayload(p_9860_, this.f_9742_);
    }
 
    public void m_7477_(ServerboundChangeDifficultyPacket p_9839_) {
@@ -1777,8 +_,139 @@
       return this.f_9743_;
    }
 
+   public final boolean isDisconnected() {
+      return !this.f_9743_.joining && !this.f_9742_.m_129536_();
+   }
+
    @FunctionalInterface
    interface EntityInteraction {
       InteractionResult m_143694_(ServerPlayer p_143695_, Entity p_143696_, InteractionHand p_143697_);
    }
+
+   private void handleCommand(String s) {
+      if ( org.spigotmc.SpigotConfig.logCommands ) // Spigot
+      this.f_9744_.info(this.f_9743_.m_6302_() + " issued server command: " + s);
+
+      CraftPlayer player = this.getCraftPlayer();
+
+      PlayerCommandPreprocessEvent event = new PlayerCommandPreprocessEvent(player, s, new LazyPlayerSet(f_9745_));
+      this.cserver.getPluginManager().callEvent(event);
+
+      if (event.isCancelled()) {
+         return;
+      }
+
+      try {
+         if (this.cserver.dispatchCommand(event.getPlayer(), event.getMessage().substring(1))) {
+            return;
+         }
+      } catch (org.bukkit.command.CommandException ex) {
+         player.sendMessage(org.bukkit.ChatColor.RED + "An internal error occurred while attempting to perform this command");
+         java.util.logging.Logger.getLogger(ServerGamePacketListenerImpl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
+         return;
+      }
+   }
+   // CraftBukkit end
+
+   // CraftBukkit start - add method
+   public void chat(String s, PlayerChatMessage original, boolean async) {
+      if (s.isEmpty() || this.f_9743_.m_9241_() == ChatVisiblity.HIDDEN) {
+         return;
+      }
+      OutgoingPlayerChatMessage outgoing = OutgoingPlayerChatMessage.m_242676_(original);
+
+      if (!async && s.startsWith("/")) {
+         this.handleCommand(s);
+      } else if (this.f_9743_.m_9241_() == ChatVisiblity.SYSTEM) {
+         // Do nothing, this is coming from a plugin
+      } else {
+         org.bukkit.entity.Player player = this.getCraftPlayer();
+         AsyncPlayerChatEvent event = new AsyncPlayerChatEvent(async, player, s, new LazyPlayerSet(f_9745_));
+         String originalFormat = event.getFormat(), originalMessage = event.getMessage();
+         Bukkit.getPluginManager().callEvent(event);
+
+         if (PlayerChatEvent.getHandlerList().getRegisteredListeners().length != 0) {
+            // Evil plugins still listening to deprecated event
+            final PlayerChatEvent queueEvent = new PlayerChatEvent(player, event.getMessage(), event.getFormat(), event.getRecipients());
+            queueEvent.setCancelled(event.isCancelled());
+            Waitable waitable = new Waitable() {
+               @Override
+               protected Object evaluate() {
+                  org.bukkit.Bukkit.getPluginManager().callEvent(queueEvent);
+                  if (queueEvent.isCancelled()) {
+                     if (outgoing != null) {
+                        outgoing.m_241051_(ServerGamePacketListenerImpl.this.f_9745_.m_6846_());
+                     }
+                     return null;
+                  }
+                  String message = String.format(queueEvent.getFormat(), queueEvent.getPlayer().getDisplayName(), queueEvent.getMessage());
+                  if (((LazyPlayerSet) queueEvent.getRecipients()).isLazy()) {
+                     if (originalFormat.equals(queueEvent.getFormat()) && originalMessage.equals(queueEvent.getMessage()) && queueEvent.getPlayer().getName().equalsIgnoreCase(queueEvent.getPlayer().getDisplayName())) {
+                        ServerGamePacketListenerImpl.this.f_9745_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.f_130598_, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                        return null;
+                     } else if (CraftChatMessage.fromComponent(original.m_237220_()).equals(message)) {
+                        ServerGamePacketListenerImpl.this.f_9745_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.RAW, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                        return null;
+                     }
+
+                     for (ServerPlayer recipient : ServerGamePacketListenerImpl.this.f_9745_.m_6846_().f_11196_) {
+                        recipient.getBukkitEntity().sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), message);
+                     }
+                  } else {
+                     for (org.bukkit.entity.Player player : queueEvent.getRecipients()) {
+                        player.sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), message);
+                     }
+                  }
+                  ServerGamePacketListenerImpl.this.f_9745_.console.sendMessage(message);
+
+                  if (outgoing != null) {
+                     outgoing.m_241051_(ServerGamePacketListenerImpl.this.f_9745_.m_6846_());
+                  }
+                  return null;
+               }
+            };
+            if (async) {
+               f_9745_.processQueue.add(waitable);
+            } else {
+               waitable.run();
+            }
+            try {
+               waitable.get();
+            } catch (InterruptedException e) {
+               Thread.currentThread().interrupt(); // This is proper habit for java. If we aren't handling it, pass it on!
+            } catch (ExecutionException e) {
+               throw new RuntimeException("Exception processing chat event", e.getCause());
+            }
+         } else {
+            if (event.isCancelled()) {
+               if (outgoing != null) {
+                  outgoing.m_241051_(ServerGamePacketListenerImpl.this.f_9745_.m_6846_());
+               }
+               return;
+            }
+            s = String.format(event.getFormat(), event.getPlayer().getDisplayName(), event.getMessage());
+            if (((LazyPlayerSet) event.getRecipients()).isLazy()) {
+               if (originalFormat.equals(event.getFormat()) && originalMessage.equals(event.getMessage()) && event.getPlayer().getName().equalsIgnoreCase(event.getPlayer().getDisplayName())) {
+                  ServerGamePacketListenerImpl.this.f_9745_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.f_130598_, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                  return;
+               } else if (CraftChatMessage.fromComponent(original.m_237220_()).equals(s)) {
+                  ServerGamePacketListenerImpl.this.f_9745_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.RAW, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                  return;
+               }
+               for (ServerPlayer recipient : f_9745_.m_6846_().f_11196_) {
+                  recipient.getBukkitEntity().sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), s);
+               }
+            } else {
+               for (org.bukkit.entity.Player recipient : event.getRecipients()) {
+                  recipient.sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), s);
+               }
+            }
+            f_9745_.console.sendMessage(s);
+            if (outgoing != null) {
+               outgoing.m_241051_(ServerGamePacketListenerImpl.this.f_9745_.m_6846_());
+            }
+         }
+      }
+   }
+   // CraftBukkit end
 }

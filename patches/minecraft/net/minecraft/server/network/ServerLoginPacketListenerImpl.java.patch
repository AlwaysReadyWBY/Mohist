--- a/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
@@ -32,6 +_,7 @@
 import net.minecraft.network.protocol.login.ServerboundKeyPacket;
 import net.minecraft.network.protocol.login.ServerboundLoginAcknowledgedPacket;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.server.players.PlayerList;
 import net.minecraft.util.Crypt;
 import net.minecraft.util.CryptException;
@@ -46,7 +_,7 @@
    private static final Component f_291075_ = Component.m_237115_("multiplayer.disconnect.unexpected_query_response");
    private final byte[] f_252396_;
    final MinecraftServer f_10018_;
-   final Connection f_10013_;
+   public final Connection f_10013_;
    private volatile ServerLoginPacketListenerImpl.State f_10019_ = ServerLoginPacketListenerImpl.State.HELLO;
    private int f_10020_;
    @Nullable
@@ -55,6 +_,8 @@
    private GameProfile f_291112_;
    private final String f_10022_ = "";
 
+   private ServerPlayer player; // CraftBukkit
+
    public ServerLoginPacketListenerImpl(MinecraftServer p_10027_, Connection p_10028_) {
       this.f_10018_ = p_10027_;
       this.f_10013_ = p_10028_;
@@ -80,6 +_,13 @@
       return this.f_10013_.m_129536_();
    }
 
+   // CraftBukkit start
+   @Deprecated
+   public void disconnect(String s) {
+      m_10053_(Component.m_237113_(s));
+   }
+   // CraftBukkit end
+
    public void m_10053_(Component p_10054_) {
       try {
          f_10015_.info("Disconnecting {}: {}", this.m_10056_(), p_10054_.getString());
@@ -129,9 +_,9 @@
 
    private void m_294778_(GameProfile p_299507_) {
       PlayerList playerlist = this.f_10018_.m_6846_();
-      Component component = playerlist.m_6418_(this.f_10013_.m_129523_(), p_299507_);
-      if (component != null) {
-         this.m_10053_(component);
+      this.player = playerlist.canPlayerLogin(this, p_299507_);
+      if (this.player == null) {
+         // this.disconnect(component);
       } else {
          if (this.f_10018_.m_6328_() >= 0 && !this.f_10013_.m_129531_()) {
             this.f_10013_.m_243124_(new ClientboundLoginCompressionPacket(this.f_10018_.m_6328_()), PacketSendListener.m_243092_(() -> {
@@ -180,7 +_,7 @@
          throw new IllegalStateException("Protocol error", cryptexception);
       }
 
-      Thread thread = new Thread("User Authenticator #" + f_10014_.incrementAndGet()) {
+      Thread thread = new Thread(net.minecraftforge.fml.util.thread.SidedThreadGroups.SERVER, "User Authenticator #" + f_10014_.incrementAndGet()) {
          public void run() {
             String s1 = Objects.requireNonNull(ServerLoginPacketListenerImpl.this.f_291165_, "Player name not initialized");
 
@@ -220,16 +_,22 @@
    }
 
    public void m_10044_(ServerboundCustomQueryAnswerPacket p_297965_) {
+      if (!net.minecraftforge.common.ForgeHooks.onCustomPayload(p_297965_, this.f_10013_))
       this.m_10053_(f_291075_);
    }
 
    public void m_7223_(ServerboundLoginAcknowledgedPacket p_298815_) {
       Validate.validState(this.f_10019_ == ServerLoginPacketListenerImpl.State.PROTOCOL_SWITCHING, "Unexpected login acknowledgement packet");
       CommonListenerCookie commonlistenercookie = CommonListenerCookie.m_294081_(Objects.requireNonNull(this.f_291112_));
-      ServerConfigurationPacketListenerImpl serverconfigurationpacketlistenerimpl = new ServerConfigurationPacketListenerImpl(this.f_10018_, this.f_10013_, commonlistenercookie);
+      ServerConfigurationPacketListenerImpl serverconfigurationpacketlistenerimpl = new ServerConfigurationPacketListenerImpl(this.f_10018_, this.f_10013_, commonlistenercookie, this.player);
       this.f_10013_.m_129505_(serverconfigurationpacketlistenerimpl);
       serverconfigurationpacketlistenerimpl.m_294295_();
       this.f_10019_ = ServerLoginPacketListenerImpl.State.ACCEPTED;
+   }
+
+   @Nullable
+   public GameProfile getAuthenticatedProfile() {
+       return this.f_291112_;
    }
 
    protected static GameProfile m_295545_(String p_297551_) {

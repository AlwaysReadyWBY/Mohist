--- a/net/minecraft/server/ServerAdvancementManager.java
+++ b/net/minecraft/server/ServerAdvancementManager.java
@@ -5,6 +_,7 @@
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.JsonElement;
+import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
 import com.mojang.logging.LogUtils;
 import com.mojang.serialization.JsonOps;
@@ -21,6 +_,7 @@
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.packs.resources.ResourceManager;
 import net.minecraft.server.packs.resources.SimpleJsonResourceReloadListener;
+import net.minecraft.util.GsonHelper;
 import net.minecraft.util.ProblemReporter;
 import net.minecraft.util.profiling.ProfilerFiller;
 import net.minecraft.world.level.storage.loot.LootDataManager;
@@ -32,17 +_,35 @@
    public Map<ResourceLocation, AdvancementHolder> advancements = Map.of();
    private AdvancementTree tree = new AdvancementTree();
    private final LootDataManager lootData;
+   private final net.minecraftforge.common.crafting.conditions.ICondition.IContext context; //Forge: add context
 
+   /** @deprecated Forge: use {@linkplain ServerAdvancementManager#ServerAdvancementManager(LootDataManager, net.minecraftforge.common.crafting.conditions.ICondition.IContext) constructor with context}. */
+   @Deprecated
    public ServerAdvancementManager(LootDataManager p_279237_) {
+      this(p_279237_, net.minecraftforge.common.crafting.conditions.ICondition.IContext.EMPTY);
+   }
+
+   public ServerAdvancementManager(LootDataManager p_279237_, net.minecraftforge.common.crafting.conditions.ICondition.IContext context) {
       super(GSON, "advancements");
       this.lootData = p_279237_;
+      this.context = context;
    }
 
    protected void apply(Map<ResourceLocation, JsonElement> p_136034_, ResourceManager p_136035_, ProfilerFiller p_136036_) {
       ImmutableMap.Builder<ResourceLocation, AdvancementHolder> builder = ImmutableMap.builder();
       p_136034_.forEach((p_308595_, p_308596_) -> {
+         // Spigot start
+         if (org.spigotmc.SpigotConfig.disabledAdvancements != null && (org.spigotmc.SpigotConfig.disabledAdvancements.contains("*") || org.spigotmc.SpigotConfig.disabledAdvancements.contains(p_308595_.toString()) || org.spigotmc.SpigotConfig.disabledAdvancements.contains(p_308595_.getNamespace()))) {
+            return;
+         }
+         // Spigot end
          try {
-            Advancement advancement = Util.getOrThrow(Advancement.CODEC.parse(JsonOps.INSTANCE, p_308596_), JsonParseException::new);
+            var json = net.minecraftforge.common.ForgeHooks.readConditionalAdvancement(null, (com.google.gson.JsonObject)p_308596_);
+            if (json == null) {
+                LOGGER.debug("Skipping loading advancement {} as its conditions were not met", p_308595_);
+                return;
+            }
+            Advancement advancement = Util.getOrThrow(Advancement.CODEC.parse(JsonOps.INSTANCE, json), JsonParseException::new);
             this.validate(p_308595_, advancement);
             builder.put(p_308595_, new AdvancementHolder(p_308595_, advancement));
          } catch (Exception exception) {

--- a/net/minecraft/server/rcon/thread/RconClient.java
+++ b/net/minecraft/server/rcon/thread/RconClient.java
@@ -9,7 +_,9 @@
 import java.nio.charset.StandardCharsets;
 import java.util.Locale;
 import net.minecraft.server.ServerInterface;
+import net.minecraft.server.dedicated.DedicatedServer;
 import net.minecraft.server.rcon.PktUtils;
+import net.minecraft.server.rcon.RconConsoleSource;
 import org.slf4j.Logger;
 
 public class RconClient extends GenericThread {
@@ -23,11 +_,14 @@
     private final Socket client;
     private final byte[] buf = new byte[1460];
     private final String rconPassword;
-    private final ServerInterface serverInterface;
+   	private final DedicatedServer serverInterface;
+   	// CraftBukkit start
+   	private final RconConsoleSource rconConsoleSource;
+   	// CraftBukkit end
 
     RconClient(ServerInterface p_11587_, String p_11588_, Socket p_11589_) {
         super("RCON Client " + p_11589_.getInetAddress());
-        this.serverInterface = p_11587_;
+      this.serverInterface = (DedicatedServer) p_11587_;
         this.client = p_11589_;
 
         try {
@@ -37,7 +_,8 @@
         }
 
         this.rconPassword = p_11588_;
-    }
+      this.rconConsoleSource = new net.minecraft.server.rcon.RconConsoleSource(this.serverInterface, p_11589_.getRemoteSocketAddress()); // CraftBukkit
+   }
 
     @Override
     public void run() {
@@ -123,14 +_,11 @@
     }
 
     private void sendCmdResponse(int p_11595_, String p_11596_) throws IOException {
-        int i = p_11596_.length();
-
-        do {
-            int j = 4096 <= i ? 4096 : i;
-            this.send(p_11595_, 0, p_11596_.substring(0, j));
-            p_11596_ = p_11596_.substring(j);
-            i = p_11596_.length();
-        } while (0 != i);
+        // Forge: Actually convert to UTF8 and process bytes accordingly. Why do we do this? UTF8 should be single byte per character
+        byte[] data = p_11596_.getBytes(StandardCharsets.UTF_8);
+        for (int x = 0; x < data.length; x += 4096) {
+            this.send(p_11595_, 0, new String(data, x, Math.min(4096, data.length - x), StandardCharsets.UTF_8));
+        }
     }
 
     @Override

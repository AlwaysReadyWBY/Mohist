--- a/net/minecraft/world/level/lighting/LevelLightEngine.java
+++ b/net/minecraft/world/level/lighting/LevelLightEngine.java
@@ -1,13 +_,20 @@
 package net.minecraft.world.level.lighting;
 
 import javax.annotation.Nullable;
+
+import ca.spottedleaf.starlight.common.light.SWMRNibbleArray;
+import ca.spottedleaf.starlight.common.light.StarLightInterface;
+import ca.spottedleaf.starlight.common.util.CoordinateUtils;
+import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.SectionPos;
 import net.minecraft.world.level.ChunkPos;
+import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelHeightAccessor;
 import net.minecraft.world.level.LightLayer;
 import net.minecraft.world.level.chunk.DataLayer;
 import net.minecraft.world.level.chunk.LightChunkGetter;
+import org.spongepowered.asm.mixin.Unique;
 
 public class LevelLightEngine implements LightEventListener {
    public static final int f_164444_ = 1;
@@ -17,94 +_,58 @@
    @Nullable
    private final LightEngine<?, ?> f_75803_;
 
+   protected StarLightInterface lightEngine;
+
+   public final StarLightInterface getLightEngine() {
+      return this.lightEngine;
+   }
+
    public LevelLightEngine(LightChunkGetter p_75805_, boolean p_75806_, boolean p_75807_) {
       this.f_164445_ = p_75805_.m_7653_();
-      this.f_75802_ = p_75806_ ? new BlockLightEngine(p_75805_) : null;
-      this.f_75803_ = p_75807_ ? new SkyLightEngine(p_75805_) : null;
+      // avoid ClassCastException in cases where custom LightChunkGetters do not return a Level from getLevel()
+      if (p_75805_.m_7653_() instanceof Level) {
+         this.lightEngine = new StarLightInterface(p_75805_, p_75807_, p_75806_, (LevelLightEngine)(Object)this);
+      } else {
+         this.lightEngine = new StarLightInterface(null, p_75807_, p_75806_, (LevelLightEngine)(Object)this);
+      }
+      // intentionally destroy mods hooking into old light engine state
+      this.f_75802_ = null;
+      this.f_75803_ = null;
    }
 
    public void m_7174_(BlockPos p_75823_) {
-      if (this.f_75802_ != null) {
-         this.f_75802_.m_7174_(p_75823_);
-      }
-
-      if (this.f_75803_ != null) {
-         this.f_75803_.m_7174_(p_75823_);
-      }
-
+      this.lightEngine.blockChange(p_75823_.m_7949_());
    }
 
    public boolean m_75808_() {
-      if (this.f_75803_ != null && this.f_75803_.m_75808_()) {
-         return true;
-      } else {
-         return this.f_75802_ != null && this.f_75802_.m_75808_();
-      }
+      // route to new light engine
+      return this.lightEngine.hasUpdates();
    }
 
    public int m_9323_() {
-      int i = 0;
-      if (this.f_75802_ != null) {
-         i += this.f_75802_.m_9323_();
-      }
-
-      if (this.f_75803_ != null) {
-         i += this.f_75803_.m_9323_();
-      }
-
-      return i;
+      // replace impl
+      final boolean hadUpdates = this.m_75808_();
+      this.lightEngine.propagateChanges();
+      return hadUpdates ? 1 : 0;
    }
 
    public void m_6191_(SectionPos p_75827_, boolean p_75828_) {
-      if (this.f_75802_ != null) {
-         this.f_75802_.m_6191_(p_75827_, p_75828_);
-      }
-
-      if (this.f_75803_ != null) {
-         this.f_75803_.m_6191_(p_75827_, p_75828_);
-      }
-
+      this.lightEngine.sectionChange(p_75827_, p_75828_);
    }
 
    public void m_9335_(ChunkPos p_285439_, boolean p_285012_) {
-      if (this.f_75802_ != null) {
-         this.f_75802_.m_9335_(p_285439_, p_285012_);
-      }
-
-      if (this.f_75803_ != null) {
-         this.f_75803_.m_9335_(p_285439_, p_285012_);
-      }
 
    }
 
    public void m_142519_(ChunkPos p_284998_) {
-      if (this.f_75802_ != null) {
-         this.f_75802_.m_142519_(p_284998_);
-      }
-
-      if (this.f_75803_ != null) {
-         this.f_75803_.m_142519_(p_284998_);
-      }
 
    }
 
    public LayerLightEventListener m_75814_(LightLayer p_75815_) {
-      if (p_75815_ == LightLayer.BLOCK) {
-         return (LayerLightEventListener)(this.f_75802_ == null ? LayerLightEventListener.DummyLightLayerEventListener.INSTANCE : this.f_75802_);
-      } else {
-         return (LayerLightEventListener)(this.f_75803_ == null ? LayerLightEventListener.DummyLightLayerEventListener.INSTANCE : this.f_75803_);
-      }
+      return p_75815_ == LightLayer.BLOCK ? this.lightEngine.getBlockReader() : this.lightEngine.getSkyReader();
    }
 
    public String m_75816_(LightLayer p_75817_, SectionPos p_75818_) {
-      if (p_75817_ == LightLayer.BLOCK) {
-         if (this.f_75802_ != null) {
-            return this.f_75802_.m_284216_(p_75818_.m_123252_());
-         }
-      } else if (this.f_75803_ != null) {
-         return this.f_75803_.m_284216_(p_75818_.m_123252_());
-      }
-
       return "n/a";
    }
 
@@ -121,37 +_,26 @@
    }
 
    public void m_284126_(LightLayer p_285328_, SectionPos p_284962_, @Nullable DataLayer p_285035_) {
-      if (p_285328_ == LightLayer.BLOCK) {
-         if (this.f_75802_ != null) {
-            this.f_75802_.m_284203_(p_284962_.m_123252_(), p_285035_);
-         }
-      } else if (this.f_75803_ != null) {
-         this.f_75803_.m_284203_(p_284962_.m_123252_(), p_285035_);
-      }
 
    }
 
    public void m_6462_(ChunkPos p_75829_, boolean p_75830_) {
-      if (this.f_75802_ != null) {
-         this.f_75802_.m_284245_(p_75829_, p_75830_);
-      }
-
-      if (this.f_75803_ != null) {
-         this.f_75803_.m_284245_(p_75829_, p_75830_);
-      }
 
    }
 
    public int m_75831_(BlockPos p_75832_, int p_75833_) {
-      int i = this.f_75803_ == null ? 0 : this.f_75803_.m_7768_(p_75832_) - p_75833_;
-      int j = this.f_75802_ == null ? 0 : this.f_75802_.m_7768_(p_75832_);
-      return Math.max(j, i);
+      // need to use new light hooks for this
+      return this.lightEngine.getRawBrightness(p_75832_, p_75833_);
    }
 
    public boolean m_284439_(SectionPos p_285319_) {
-      long i = p_285319_.m_123252_();
-      return this.f_75802_ == null || this.f_75802_.f_283849_.m_284382_(i) && (this.f_75803_ == null || this.f_75803_.f_283849_.m_284382_(i));
+      final long key = CoordinateUtils.getChunkKey(p_285319_.m_123341_(), p_285319_.m_123343_());
+      return (!this.lightEngine.hasBlockLight() || this.blockLightMap.get(key) != null) && (!this.lightEngine.hasSkyLight() || this.skyLightMap.get(key) != null);
    }
+
+   protected final Long2ObjectOpenHashMap<SWMRNibbleArray[]> blockLightMap = new Long2ObjectOpenHashMap<>();
+
+   protected final Long2ObjectOpenHashMap<SWMRNibbleArray[]> skyLightMap = new Long2ObjectOpenHashMap<>();
 
    public int m_164446_() {
       return this.f_164445_.m_151559_() + 2;

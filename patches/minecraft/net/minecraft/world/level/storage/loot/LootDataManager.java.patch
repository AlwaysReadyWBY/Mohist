--- a/net/minecraft/world/level/storage/loot/LootDataManager.java
+++ b/net/minecraft/world/level/storage/loot/LootDataManager.java
@@ -20,6 +_,8 @@
 import net.minecraft.util.ProblemReporter;
 import net.minecraft.util.profiling.ProfilerFiller;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParamSets;
+import org.bukkit.craftbukkit.v1_20_R4.CraftLootTable;
+import org.bukkit.craftbukkit.v1_20_R4.util.CraftNamespacedKey;
 import org.slf4j.Logger;
 
 public class LootDataManager implements PreparableReloadListener, LootDataResolver {
@@ -28,6 +_,7 @@
    public static final LootDataId<LootTable> EMPTY_LOOT_TABLE_KEY = new LootDataId<>(LootDataType.TABLE, BuiltInLootTables.EMPTY);
    private Map<LootDataId<?>, ?> elements = Map.of();
    private Multimap<LootDataType<?>, ResourceLocation> typeKeys = ImmutableMultimap.of();
+   public Map<?, ResourceLocation> lootTableToKey = ImmutableMap.of(); // CraftBukkit
 
    public final CompletableFuture<Void> reload(PreparableReloadListener.PreparationBarrier p_279240_, ResourceManager p_279377_, ProfilerFiller p_279135_, ProfilerFiller p_279088_, Executor p_279148_, Executor p_279169_) {
       Map<LootDataType<?>, Map<ResourceLocation, ?>> map = new HashMap<>();
@@ -84,6 +_,13 @@
       problemreporter$collector.get().forEach((p_279487_, p_279312_) -> {
          LOGGER.warn("Found loot table element validation problem in {}: {}", p_279487_, p_279312_);
       });
+      // CraftBukkit start
+      map.forEach((key, lootTable) -> {
+         if (object instanceof LootTable table) {
+            table.craftLootTable = new CraftLootTable(CraftNamespacedKey.fromMinecraft(key.location()), table);
+         }
+      });
+      // CraftBukkit end
       this.elements = map;
       this.typeKeys = builder1.build();
    }

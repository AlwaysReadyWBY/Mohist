--- a/net/minecraft/world/level/storage/LevelStorageSource.java
+++ b/net/minecraft/world/level/storage/LevelStorageSource.java
@@ -38,6 +_,7 @@
 import java.util.zip.ZipOutputStream;
 import javax.annotation.Nullable;
 import net.minecraft.FileUtil;
+import net.minecraft.SharedConstants;
 import net.minecraft.Util;
 import net.minecraft.core.Registry;
 import net.minecraft.core.RegistryAccess;
@@ -55,6 +_,7 @@
 import net.minecraft.util.MemoryReserve;
 import net.minecraft.util.datafix.DataFixTypes;
 import net.minecraft.util.datafix.DataFixers;
+import net.minecraft.util.datafix.fixes.References;
 import net.minecraft.world.flag.FeatureFlagSet;
 import net.minecraft.world.flag.FeatureFlags;
 import net.minecraft.world.level.Level;
@@ -224,6 +_,7 @@
          WorldDimensions.Complete worlddimensions$complete = worldgensettings.f_64605_().m_245300_(p_249363_);
          Lifecycle lifecycle = worlddimensions$complete.m_245945_().add(p_251214_);
          PrimaryLevelData primaryleveldata = PrimaryLevelData.m_78530_(dynamic, p_265021_, i, compoundtag2, levelsettings, levelversion, worlddimensions$complete.f_244634_(), worldgensettings.f_243992_(), lifecycle);
+         primaryleveldata.pdc = compoundtag1.m_128423_("BukkitValues"); // CraftBukkit - Add PDC to world
          return Pair.of(primaryleveldata, worlddimensions$complete);
       };
    }
@@ -297,10 +_,14 @@
       return this.f_78195_;
    }
 
-   public LevelStorageSource.LevelStorageAccess m_78260_(String p_78261_) throws IOException {
+   public LevelStorageAccess m_78260_(String p_78261_) throws IOException {
       return new LevelStorageSource.LevelStorageAccess(p_78261_);
    }
 
+   public LevelStorageAccess createAccess(String p_78261_, ResourceKey<LevelStem> dimensionType) throws IOException {
+      return new LevelStorageSource.LevelStorageAccess(p_78261_, dimensionType);
+   }
+
    public static record LevelCandidates(List<LevelStorageSource.LevelDirectory> f_230840_) implements Iterable<LevelStorageSource.LevelDirectory> {
       public boolean m_230843_() {
          return this.f_230840_.isEmpty();
@@ -343,9 +_,10 @@
 
    public class LevelStorageAccess implements AutoCloseable {
       final DirectoryLock f_78270_;
-      final LevelStorageSource.LevelDirectory f_230867_;
+      public final LevelStorageSource.LevelDirectory f_230867_;
       private final String f_78272_;
       private final Map<LevelResource, Path> f_78273_ = Maps.newHashMap();
+      public ResourceKey<LevelStem> dimensionType;
 
       public LevelStorageAccess(String p_78276_) throws IOException {
          this.f_78272_ = p_78276_;
@@ -353,6 +_,20 @@
          this.f_78270_ = DirectoryLock.m_13640_(this.f_230867_.f_230850_());
       }
 
+      public LevelStorageAccess(String s, ResourceKey<LevelStem> dimensionType) throws IOException {
+         this.dimensionType = dimensionType;
+         // CraftBukkit end
+         this.f_78272_ = s;
+         this.f_230867_ = new LevelStorageSource.LevelDirectory(LevelStorageSource.this.f_78194_.resolve(s));
+         this.f_78270_ = DirectoryLock.m_13640_(this.f_230867_.f_230850_());
+      }
+
+      // Mohist start
+      public void setTypeKey(ResourceKey<LevelStem> dimensionType) {
+         this.dimensionType = dimensionType;
+      }
+      // Mohist end
+
       public String m_78277_() {
          return this.f_78272_;
       }
@@ -388,6 +_,19 @@
          return LevelStorageSource.this.m_230817_(this.f_230867_, LevelStorageSource.m_245503_(p_248747_, p_251873_, p_249187_, p_249736_));
       }
 
+      public void readAdditionalLevelSaveData() {
+         m_78313_();
+         LevelStorageSource.this.m_230817_(this.f_230867_, (path, dataFixer) -> {
+            try {
+               CompoundTag compoundTag = NbtIo.m_128937_(path.toFile());
+               net.minecraftforge.common.ForgeHooks.readAdditionalLevelSaveData(compoundTag, this.f_230867_);
+            } catch (Exception e) {
+                f_78191_.error("Exception reading {}", path, e);
+            }
+            return ""; // Return non-null to prevent level.dat-old inject
+         });
+      }
+
       @Nullable
       public WorldDataConfiguration m_247706_() {
          this.m_78313_();
@@ -404,6 +_,8 @@
          CompoundTag compoundtag1 = new CompoundTag();
          compoundtag1.m_128365_("Data", compoundtag);
 
+         net.minecraftforge.common.ForgeHooks.writeAdditionalLevelSaveData(p_78292_, compoundtag1);
+
          try {
             File file2 = File.createTempFile("level", ".dat", file1);
             NbtIo.m_128944_(compoundtag1, file2);
@@ -418,6 +_,10 @@
 
       public Optional<Path> m_182514_() {
          return !this.f_78270_.m_13639_() ? Optional.empty() : Optional.of(this.f_230867_.m_230860_());
+      }
+
+      public Path getWorldDir() {
+         return f_78194_;
       }
 
       public void m_78311_() throws IOException {

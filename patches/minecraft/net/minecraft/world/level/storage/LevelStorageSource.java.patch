--- a/net/minecraft/world/level/storage/LevelStorageSource.java
+++ b/net/minecraft/world/level/storage/LevelStorageSource.java
@@ -139,6 +_,7 @@
       WorldDimensions.Complete worlddimensions$complete = worldgensettings.dimensions().bake(p_311619_);
       Lifecycle lifecycle = worlddimensions$complete.lifecycle().add(p_313214_.allRegistriesLifecycle());
       PrimaryLevelData primaryleveldata = PrimaryLevelData.parse(dynamic, levelsettings, worlddimensions$complete.specialWorldProperty(), worldgensettings.options(), lifecycle);
+      primaryleveldata.pdc = ((Dynamic<Tag>) dynamic1).getElement("BukkitValues", null); // CraftBukkit - Add PDC to world
       return new LevelDataAndDimensions(primaryleveldata, worlddimensions$complete);
    }
 
@@ -407,7 +_,7 @@
 
    public class LevelStorageAccess implements AutoCloseable {
       final DirectoryLock lock;
-      final LevelStorageSource.LevelDirectory levelDirectory;
+      public final LevelStorageSource.LevelDirectory levelDirectory;
       private final String levelId;
       private final Map<LevelResource, Path> resources = Maps.newHashMap();
 
@@ -483,6 +_,7 @@
          CompoundTag compoundtag = p_78292_.createTag(p_78291_, p_78293_);
          CompoundTag compoundtag1 = new CompoundTag();
          compoundtag1.put("Data", compoundtag);
+         net.minecraftforge.common.ForgeHooks.writeAdditionalLevelSaveData(p_78292_, compoundtag1);
          this.saveLevelData(compoundtag1);
       }
 
@@ -503,6 +_,10 @@
 
       public Optional<Path> getIconFile() {
          return !this.lock.isValid() ? Optional.empty() : Optional.of(this.levelDirectory.iconFile());
+      }
+
+      public Path getWorldDir() {
+         return baseDir;
       }
 
       public void deleteLevel() throws IOException {

--- a/net/minecraft/world/level/storage/PrimaryLevelData.java
+++ b/net/minecraft/world/level/storage/PrimaryLevelData.java
@@ -2,11 +_,12 @@
 
 import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Sets;
+import com.mojang.datafixers.DataFixer;
 import com.mojang.logging.LogUtils;
+import com.mojang.serialization.DataResult;
 import com.mojang.serialization.Dynamic;
 import com.mojang.serialization.DynamicOps;
 import com.mojang.serialization.Lifecycle;
-import com.mojang.serialization.DataResult.Error;
 import java.util.HashSet;
 import java.util.Set;
 import java.util.UUID;
@@ -16,6 +_,7 @@
 import net.minecraft.SharedConstants;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
+import net.minecraft.core.Registry;
 import net.minecraft.core.RegistryAccess;
 import net.minecraft.core.UUIDUtil;
 import net.minecraft.nbt.CompoundTag;
@@ -24,7 +_,12 @@
 import net.minecraft.nbt.NbtUtils;
 import net.minecraft.nbt.StringTag;
 import net.minecraft.nbt.Tag;
+import net.minecraft.network.protocol.game.ClientboundChangeDifficultyPacket;
+import net.minecraft.resources.RegistryOps;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.level.ServerLevel;
+import net.minecraft.server.level.ServerPlayer;
+import net.minecraft.util.datafix.DataFixTypes;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.GameType;
@@ -32,11 +_,15 @@
 import net.minecraft.world.level.LevelSettings;
 import net.minecraft.world.level.WorldDataConfiguration;
 import net.minecraft.world.level.border.WorldBorder;
+import net.minecraft.world.level.dimension.LevelStem;
 import net.minecraft.world.level.dimension.end.EndDragonFight;
 import net.minecraft.world.level.levelgen.WorldGenSettings;
 import net.minecraft.world.level.levelgen.WorldOptions;
 import net.minecraft.world.level.timers.TimerCallbacks;
 import net.minecraft.world.level.timers.TimerQueue;
+import org.bukkit.Bukkit;
+import org.bukkit.event.weather.ThunderChangeEvent;
+import org.bukkit.event.weather.WeatherChangeEvent;
 import org.slf4j.Logger;
 
 public class PrimaryLevelData implements ServerLevelData, WorldData {
@@ -74,6 +_,22 @@
     private boolean wasModded;
     private final Set<String> removedFeatureFlags;
     private final TimerQueue<MinecraftServer> scheduledEvents;
+    private boolean confirmedExperimentalWarning = false;
+
+    // CraftBukkit start - Add world and pdc
+    public Registry<LevelStem> customDimensions;
+    private ServerLevel world;
+    protected Tag pdc;
+
+    public void setWorld(ServerLevel world) {
+        if (this.world != null) {
+            return;
+        }
+        this.world = world;
+        if (world.getWorld() != null) world.getWorld().readBukkitValues(pdc);
+        pdc = null;
+    }
+    // CraftBukkit end
 
     private PrimaryLevelData(
         @Nullable CompoundTag p_277888_,
@@ -200,7 +_,7 @@
             p_251864_,
             p_250651_,
             p_78538_
-        );
+        ).withConfirmedWarning(p_78538_ != Lifecycle.stable() && p_78531_.get("confirmedExperimentalSettings").asBoolean(false));
     }
 
     @Override
@@ -230,8 +_,8 @@
         NbtUtils.addCurrentDataVersion(p_78547_);
         DynamicOps<Tag> dynamicops = p_78546_.createSerializationContext(NbtOps.INSTANCE);
         WorldGenSettings.encode(dynamicops, this.worldOptions, p_78546_)
-            .resultOrPartial(Util.prefix("WorldGenSettings: ", LOGGER::error))
-            .ifPresent(p_78574_ -> p_78547_.put("WorldGenSettings", p_78574_));
+                .resultOrPartial(Util.prefix("WorldGenSettings: ", LOGGER::error))
+                .ifPresent(p_78574_ -> p_78547_.put("WorldGenSettings", p_78574_)); // Mohist TODO craftbukkit patch
         p_78547_.putInt("GameType", this.settings.gameType().getId());
         p_78547_.putInt("SpawnX", this.spawnPos.getX());
         p_78547_.putInt("SpawnY", this.spawnPos.getY());
@@ -251,7 +_,7 @@
         p_78547_.putBoolean("allowCommands", this.settings.allowCommands());
         p_78547_.putBoolean("initialized", this.initialized);
         this.worldBorder.write(p_78547_);
-        p_78547_.putByte("Difficulty", (byte)this.settings.difficulty().getId());
+        p_78547_.putByte("Difficulty", (byte) this.settings.difficulty().getId());
         p_78547_.putBoolean("DifficultyLocked", this.difficultyLocked);
         p_78547_.put("GameRules", this.settings.gameRules().createTag());
         p_78547_.put("DragonFight", EndDragonFight.Data.CODEC.encodeStart(NbtOps.INSTANCE, this.endDragonFightData).getOrThrow());
@@ -273,6 +_,14 @@
         if (this.wanderingTraderId != null) {
             p_78547_.putUUID("WanderingTraderId", this.wanderingTraderId);
         }
+        p_78547_.putString("forgeLifecycle", net.minecraftforge.common.ForgeHooks.encodeLifecycle(this.settings.getLifecycle()));
+        p_78547_.putBoolean("confirmedExperimentalSettings", this.confirmedExperimentalWarning);
+
+        if (Bukkit.getServer() != null && world != null) {
+            p_78547_.putString("Bukkit.Version", Bukkit.getName() + "/" + Bukkit.getVersion() + "/" + Bukkit.getBukkitVersion()); // CraftBukkit
+            world.getWorld().storeBukkitValues(p_78547_); // CraftBukkit - add pdc
+        }
+
     }
 
     private static ListTag stringCollectionToTag(Set<String> p_277880_) {
@@ -350,6 +_,20 @@
 
     @Override
     public void setThundering(boolean p_78562_) {
+        // CraftBukkit start
+        if (this.thundering == p_78562_) {
+            return;
+        }
+
+        org.bukkit.World world = Bukkit.getWorld(getLevelName());
+        if (world != null) {
+            ThunderChangeEvent thunder = new ThunderChangeEvent(world, p_78562_);
+            Bukkit.getServer().getPluginManager().callEvent(thunder);
+            if (thunder.isCancelled()) {
+                return;
+            }
+        }
+        // CraftBukkit end
         this.thundering = p_78562_;
     }
 
@@ -370,6 +_,20 @@
 
     @Override
     public void setRaining(boolean p_78576_) {
+        // CraftBukkit start
+        if (this.raining == p_78576_) {
+            return;
+        }
+
+        org.bukkit.World world = Bukkit.getWorld(getLevelName());
+        if (world != null) {
+            WeatherChangeEvent weather = new WeatherChangeEvent(world, p_78576_);
+            Bukkit.getServer().getPluginManager().callEvent(weather);
+            if (weather.isCancelled()) {
+                return;
+            }
+        }
+        // CraftBukkit end
         this.raining = p_78576_;
     }
 
@@ -436,6 +_,11 @@
     @Override
     public void setDifficulty(Difficulty p_78521_) {
         this.settings = this.settings.withDifficulty(p_78521_);
+        // CraftBukkit start
+        ClientboundChangeDifficultyPacket packet = new ClientboundChangeDifficultyPacket(this.getDifficulty(), this.isDifficultyLocked());
+        for (ServerPlayer player : world.players()) {
+            player.connection.send(packet);
+        }
     }
 
     @Override
@@ -572,10 +_,28 @@
         return this.settings.copy();
     }
 
+    public boolean hasConfirmedExperimentalWarning() {
+        return this.confirmedExperimentalWarning;
+    }
+
+    public PrimaryLevelData withConfirmedWarning(boolean confirmedWarning) { // Builder-like to not patch ctor
+        this.confirmedExperimentalWarning = confirmedWarning;
+        return this;
+    }
+
+
     @Deprecated
     public static enum SpecialWorldProperty {
         NONE,
         FLAT,
         DEBUG;
     }
+
+    // CraftBukkit start - Check if the name stored in NBT is the correct one
+    public void checkName(String name) {
+        if (!this.settings.levelName.equals(name)) {
+            this.settings.levelName = name;
+        }
+    }
+    // CraftBukkit end
 }

--- a/net/minecraft/world/level/storage/PrimaryLevelData.java
+++ b/net/minecraft/world/level/storage/PrimaryLevelData.java
@@ -16,6 +_,7 @@
 import net.minecraft.SharedConstants;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
+import net.minecraft.core.Registry;
 import net.minecraft.core.RegistryAccess;
 import net.minecraft.core.UUIDUtil;
 import net.minecraft.nbt.CompoundTag;
@@ -24,8 +_,11 @@
 import net.minecraft.nbt.NbtUtils;
 import net.minecraft.nbt.StringTag;
 import net.minecraft.nbt.Tag;
+import net.minecraft.network.protocol.game.ClientboundChangeDifficultyPacket;
 import net.minecraft.resources.RegistryOps;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.level.ServerLevel;
+import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.util.datafix.DataFixTypes;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.level.GameRules;
@@ -34,10 +_,14 @@
 import net.minecraft.world.level.LevelSettings;
 import net.minecraft.world.level.WorldDataConfiguration;
 import net.minecraft.world.level.border.WorldBorder;
+import net.minecraft.world.level.dimension.LevelStem;
 import net.minecraft.world.level.levelgen.WorldGenSettings;
 import net.minecraft.world.level.levelgen.WorldOptions;
 import net.minecraft.world.level.timers.TimerCallbacks;
 import net.minecraft.world.level.timers.TimerQueue;
+import org.bukkit.Bukkit;
+import org.bukkit.event.weather.ThunderChangeEvent;
+import org.bukkit.event.weather.WeatherChangeEvent;
 import org.slf4j.Logger;
 
 public class PrimaryLevelData implements ServerLevelData, WorldData {
@@ -79,6 +_,22 @@
    private final Set<String> f_78439_;
    private boolean f_78440_;
    private final TimerQueue<MinecraftServer> f_78441_;
+   private boolean confirmedExperimentalWarning = false;
+
+   // CraftBukkit start - Add world and pdc
+   public Registry<LevelStem> customDimensions;
+   private ServerLevel world;
+   protected Tag pdc;
+
+   public void setWorld(ServerLevel world) {
+      if (this.world != null) {
+         return;
+      }
+      this.world = world;
+      world.getWorld().readBukkitValues(pdc);
+      pdc = null;
+   }
+   // CraftBukkit end
 
    private PrimaryLevelData(@Nullable DataFixer p_249266_, int p_249857_, @Nullable CompoundTag p_249309_, boolean p_251525_, int p_249614_, int p_252310_, int p_250544_, float p_250495_, long p_250393_, long p_252085_, int p_250455_, int p_248981_, int p_249051_, boolean p_249672_, int p_249807_, boolean p_252350_, boolean p_250231_, boolean p_249788_, WorldBorder.Settings p_251494_, int p_249519_, int p_250649_, @Nullable UUID p_248892_, Set<String> p_251898_, TimerQueue<MinecraftServer> p_251119_, @Nullable CompoundTag p_248915_, CompoundTag p_252274_, LevelSettings p_248619_, WorldOptions p_251512_, PrimaryLevelData.SpecialWorldProperty p_251396_, Lifecycle p_252247_) {
       this.f_78452_ = p_249266_;
@@ -124,7 +_,7 @@
       }).convert(NbtOps.f_128958_).getValue();
       return new PrimaryLevelData(p_78532_, p_78533_, p_78534_, p_78531_.get("WasModded").asBoolean(false), p_78531_.get("SpawnX").asInt(0), p_78531_.get("SpawnY").asInt(0), p_78531_.get("SpawnZ").asInt(0), p_78531_.get("SpawnAngle").asFloat(0.0F), i, p_78531_.get("DayTime").asLong(i), p_78536_.m_78389_(), p_78531_.get("clearWeatherTime").asInt(0), p_78531_.get("rainTime").asInt(0), p_78531_.get("raining").asBoolean(false), p_78531_.get("thunderTime").asInt(0), p_78531_.get("thundering").asBoolean(false), p_78531_.get("initialized").asBoolean(true), p_78531_.get("DifficultyLocked").asBoolean(false), WorldBorder.Settings.m_62037_(p_78531_, WorldBorder.f_61907_), p_78531_.get("WanderingTraderSpawnDelay").asInt(0), p_78531_.get("WanderingTraderSpawnChance").asInt(0), p_78531_.get("WanderingTraderId").read(UUIDUtil.f_235867_).result().orElse((UUID)null), p_78531_.get("ServerBrands").asStream().flatMap((p_78529_) -> {
          return p_78529_.asString().result().stream();
-      }).collect(Collectors.toCollection(Sets::newLinkedHashSet)), new TimerQueue<>(TimerCallbacks.f_82226_, p_78531_.get("ScheduledEvents").asStream()), (CompoundTag)p_78531_.get("CustomBossEvents").orElseEmptyMap().getValue(), compoundtag, p_78535_, p_251864_, p_250651_, p_78538_);
+      }).collect(Collectors.toCollection(Sets::newLinkedHashSet)), new TimerQueue<>(TimerCallbacks.f_82226_, p_78531_.get("ScheduledEvents").asStream()), (CompoundTag)p_78531_.get("CustomBossEvents").orElseEmptyMap().getValue(), compoundtag, p_78535_, p_251864_, p_250651_, p_78538_).withConfirmedWarning(p_78538_ != Lifecycle.stable() && p_78531_.get("confirmedExperimentalSettings").asBoolean(false));
    }
 
    public CompoundTag m_6626_(RegistryAccess p_78543_, @Nullable CompoundTag p_78544_) {
@@ -198,6 +_,13 @@
          p_78547_.m_128362_("WanderingTraderId", this.f_78438_);
       }
 
+      p_78547_.m_128359_("forgeLifecycle", net.minecraftforge.common.ForgeHooks.encodeLifecycle(this.f_78443_.getLifecycle()));
+      p_78547_.m_128379_("confirmedExperimentalSettings", this.confirmedExperimentalWarning);
+
+      if (Bukkit.getServer() != null) {
+         p_78547_.m_128359_("Bukkit.Version", Bukkit.getName() + "/" + Bukkit.getVersion() + "/" + Bukkit.getBukkitVersion()); // CraftBukkit
+         world.getWorld().storeBukkitValues(p_78547_); // CraftBukkit - add pdc
+      }
    }
 
    public int m_6789_() {
@@ -295,6 +_,20 @@
    }
 
    public void m_5557_(boolean p_78562_) {
+      // CraftBukkit start
+      if (this.f_78460_ == p_78562_) {
+         return;
+      }
+
+      org.bukkit.World world = Bukkit.getWorld(m_5462_());
+      if (world != null) {
+         ThunderChangeEvent thunder = new ThunderChangeEvent(world, p_78562_);
+         Bukkit.getServer().getPluginManager().callEvent(thunder);
+         if (thunder.isCancelled()) {
+            return;
+         }
+      }
+      // CraftBukkit end
       this.f_78460_ = p_78562_;
    }
 
@@ -311,6 +_,20 @@
    }
 
    public void m_5565_(boolean p_78576_) {
+      // CraftBukkit start
+      if (this.f_78458_ == p_78576_) {
+         return;
+      }
+
+      org.bukkit.World world = Bukkit.getWorld(m_5462_());
+      if (world != null) {
+         WeatherChangeEvent weather = new WeatherChangeEvent(world, p_78576_);
+         Bukkit.getServer().getPluginManager().callEvent(weather);
+         if (weather.isCancelled()) {
+            return;
+         }
+      }
+      // CraftBukkit end
       this.f_78458_ = p_78576_;
    }
 
@@ -364,6 +_,12 @@
 
    public void m_6166_(Difficulty p_78521_) {
       this.f_78443_ = this.f_78443_.m_46918_(p_78521_);
+      // CraftBukkit start
+      ClientboundChangeDifficultyPacket packet = new ClientboundChangeDifficultyPacket(this.m_5472_(), this.m_5474_());
+      for (ServerPlayer player : (java.util.List<ServerPlayer>) (java.util.List) world.m_6907_()) {
+         player.f_8906_.m_9829_(packet);
+      }
+      // CraftBukkit end
    }
 
    public boolean m_5474_() {
@@ -470,6 +_,15 @@
       return this.f_78443_.m_46935_();
    }
 
+   public boolean hasConfirmedExperimentalWarning() {
+      return this.confirmedExperimentalWarning;
+   }
+
+   public PrimaryLevelData withConfirmedWarning(boolean confirmedWarning) { // Builder-like to not patch ctor
+      this.confirmedExperimentalWarning = confirmedWarning;
+      return this;
+   }
+
    /** @deprecated */
    @Deprecated
    public static enum SpecialWorldProperty {
@@ -477,4 +_,12 @@
       FLAT,
       DEBUG;
    }
+
+   // CraftBukkit start - Check if the name stored in NBT is the correct one
+   public void checkName(String name) {
+      if (!this.f_78443_.f_46902_.equals(name)) {
+         this.f_78443_.f_46902_ = name;
+      }
+   }
+   // CraftBukkit end
 }

--- a/net/minecraft/world/level/storage/PlayerDataStorage.java
+++ b/net/minecraft/world/level/storage/PlayerDataStorage.java
@@ -14,8 +_,10 @@
 import net.minecraft.nbt.NbtAccounter;
 import net.minecraft.nbt.NbtIo;
 import net.minecraft.nbt.NbtUtils;
+import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.util.datafix.DataFixTypes;
 import net.minecraft.world.entity.player.Player;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
 import org.slf4j.Logger;
 
 public class PlayerDataStorage {
@@ -31,6 +_,7 @@
     }
 
     public void save(Player p_78434_) {
+      	if (org.spigotmc.SpigotConfig.disablePlayerDataSaving) return; // Spigot
         try {
             CompoundTag compoundtag = p_78434_.saveWithoutId(new CompoundTag());
             Path path = this.playerDir.toPath();
@@ -39,6 +_,7 @@
             Path path2 = path.resolve(p_78434_.getStringUUID() + ".dat");
             Path path3 = path.resolve(p_78434_.getStringUUID() + ".dat_old");
             Util.safeReplaceFile(path2, path1, path3);
+            net.minecraftforge.event.ForgeEventFactory.firePlayerSavingEvent(p_78434_, playerDir, p_78434_.getStringUUID());
         } catch (Exception exception) {
             LOGGER.warn("Failed to save player data for {}", p_78434_.getName().getString());
         }
@@ -61,7 +_,9 @@
         File file1 = new File(this.playerDir, p_329651_.getStringUUID() + p_330353_);
         if (file1.exists() && file1.isFile()) {
             try {
-                return Optional.of(NbtIo.readCompressed(file1.toPath(), NbtAccounter.unlimitedHeap()));
+                var ret = Optional.of(NbtIo.readCompressed(file1.toPath(), NbtAccounter.unlimitedHeap()));
+                net.minecraftforge.event.ForgeEventFactory.firePlayerLoadingEvent(p_329651_, playerDir, p_329651_.getStringUUID());
+                return ret;
             } catch (Exception exception) {
                 LOGGER.warn("Failed to load player data for {}", p_329651_.getName().getString());
             }
@@ -83,4 +_,26 @@
             return p_328937_;
         });
     }
+
+   public File getPlayerDataFolder() {
+      return playerDir;
+   }
+
+   // CraftBukkit start
+   public CompoundTag getPlayerData(String s) {
+      try {
+         File file1 = new File(this.playerDir, s + ".dat");
+         if (file1.exists()) {
+            return NbtIo.readCompressed(file1.toPath(), NbtAccounter.unlimitedHeap());
+         }
+      } catch (Exception exception) {
+         LOGGER.warn("Failed to load player data for " + s);
+      }
+      return null;
+   }
+
+   public File getPlayerDir() {
+      return getPlayerDataFolder();
+   }
+   // CraftBukkit end
 }

--- a/net/minecraft/world/level/portal/PortalShape.java
+++ b/net/minecraft/world/level/portal/PortalShape.java
@@ -1,6 +_,7 @@
 package net.minecraft.world.level.portal;
 
 import java.util.Optional;
+import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.BlockUtil;
@@ -17,17 +_,21 @@
 import net.minecraft.world.level.block.NetherPortalBlock;
 import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.craftbukkit.event.CraftPortalEvent;
+import org.bukkit.craftbukkit.util.BlockStateListPopulator;
+import org.bukkit.event.world.PortalCreateEvent;
 
 public class PortalShape {
     private static final int MIN_WIDTH = 2;
     public static final int MAX_WIDTH = 21;
     private static final int MIN_HEIGHT = 3;
     public static final int MAX_HEIGHT = 21;
-    private static final BlockBehaviour.StatePredicate FRAME = (p_77720_, p_77721_, p_77722_) -> p_77720_.is(Blocks.OBSIDIAN);
+    private static final BlockBehaviour.StatePredicate FRAME = (p_77720_, p_77721_, p_77722_) -> p_77720_.isPortalFrame(p_77721_, p_77722_);
     private static final float SAFE_TRAVEL_MAX_ENTITY_XY = 4.0F;
     private static final double SAFE_TRAVEL_MAX_VERTICAL_DELTA = 1.0;
     private final LevelAccessor level;
@@ -38,6 +_,7 @@
     private BlockPos bottomLeft;
     private int height;
     private final int width;
+   BlockStateListPopulator blocks; // CraftBukkit - add field
 
     public static Optional<PortalShape> findEmptyPortalShape(LevelAccessor p_77709_, BlockPos p_77710_, Direction.Axis p_77711_) {
         return findPortalShape(p_77709_, p_77710_, p_77727_ -> p_77727_.isValid() && p_77727_.numPortalBlocks == 0, p_77711_);
@@ -54,6 +_,7 @@
     }
 
     public PortalShape(LevelAccessor p_77695_, BlockPos p_77696_, Direction.Axis p_77697_) {
+      blocks = new BlockStateListPopulator(p_77695_.getMinecraftWorld()); // CraftBukkit
         this.level = p_77695_;
         this.axis = p_77697_;
         this.rightDir = p_77697_ == Direction.Axis.X ? Direction.WEST : Direction.SOUTH;
@@ -96,6 +_,7 @@
             BlockState blockstate = this.level.getBlockState(blockpos$mutableblockpos);
             if (!isEmpty(blockstate)) {
                 if (FRAME.test(blockstate, this.level, blockpos$mutableblockpos)) {
+               		blocks.setBlock(blockpos$mutableblockpos, blockstate, 18); // CraftBukkit - lower left / right
                     return i;
                 }
                 break;
@@ -105,7 +_,8 @@
             if (!FRAME.test(blockstate1, this.level, blockpos$mutableblockpos)) {
                 break;
             }
-        }
+         	blocks.setBlock(blockpos$mutableblockpos, blockstate1, 18); // CraftBukkit - bottom row
+      	}
 
         return 0;
     }
@@ -122,6 +_,7 @@
             if (!FRAME.test(this.level.getBlockState(blockpos$mutableblockpos), this.level, blockpos$mutableblockpos)) {
                 return false;
             }
+         	blocks.setBlock(blockpos$mutableblockpos, this.level.getBlockState(blockpos$mutableblockpos), 18); // CraftBukkit - upper row
         }
 
         return true;
@@ -150,6 +_,10 @@
                     this.numPortalBlocks++;
                 }
             }
+         // CraftBukkit start - left and right
+         blocks.setBlock(p_77729_.set(this.bottomLeft).move(Direction.UP, i).move(this.rightDir, -1), this.level.getBlockState(p_77729_), 18);
+         blocks.setBlock(p_77729_.set(this.bottomLeft).move(Direction.UP, i).move(this.rightDir, this.width), this.level.getBlockState(p_77729_), 18);
+         // CraftBukkit end
         }
 
         return 21;
@@ -163,11 +_,31 @@
         return this.bottomLeft != null && this.width >= 2 && this.width <= 21 && this.height >= 3 && this.height <= 21;
     }
 
-    public void createPortalBlocks() {
-        BlockState blockstate = Blocks.NETHER_PORTAL.defaultBlockState().setValue(NetherPortalBlock.AXIS, this.axis);
-        BlockPos.betweenClosed(this.bottomLeft, this.bottomLeft.relative(Direction.UP, this.height - 1).relative(this.rightDir, this.width - 1))
-            .forEach(p_77725_ -> this.level.setBlock(p_77725_, blockstate, 18));
-    }
+   private AtomicReference<BlockState> mohist$state = new AtomicReference<>();
+
+   public void createPortalBlocks() {
+      BlockState blockstate = Blocks.NETHER_PORTAL.defaultBlockState().setValue(NetherPortalBlock.AXIS, this.axis);
+      mohist$state.set(blockstate);
+      BlockPos.betweenClosed(this.bottomLeft, this.bottomLeft.relative(Direction.UP, this.height - 1).relative(this.rightDir, this.width - 1)).forEach((p_77725_) -> {
+         this.level.setBlock(p_77725_, blockstate, 18);
+      });
+   }
+
+   public boolean createPortalBlocksCB() {
+      org.bukkit.World bworld = this.level.getMinecraftWorld().getWorld();
+      createPortalBlocks();
+      PortalCreateEvent event = new PortalCreateEvent((java.util.List<org.bukkit.block.BlockState>) (java.util.List) blocks.getList(), bworld, null, PortalCreateEvent.CreateReason.FIRE);
+      this.level.getMinecraftWorld().getServer().server.getPluginManager().callEvent(event);
+
+      if (event.isCancelled()) {
+         return false;
+      }
+      // CraftBukkit end
+      BlockPos.betweenClosed(this.bottomLeft, this.bottomLeft.relative(Direction.UP, this.height - 1).relative(this.rightDir, this.width - 1)).forEach((p_77725_) -> {
+         this.level.setBlock(p_77725_, mohist$state.get(), 18);
+      });
+      return true; // CraftBukkit
+   }
 
     public boolean isComplete() {
         return this.isValid() && this.numPortalBlocks == this.width * this.height;
@@ -198,7 +_,46 @@
         return new Vec3(d2, d5, d4);
     }
 
-    public static Vec3 findCollisionFreePosition(Vec3 p_260315_, ServerLevel p_259704_, Entity p_259626_, EntityDimensions p_259816_) {
+   private static AtomicReference<CraftPortalEvent> mohist$portalInfo = new AtomicReference<>(null);
+
+    public static PortalInfo createPortalInfo(
+        ServerLevel p_259301_,
+        BlockUtil.FoundRectangle p_259931_,
+        Direction.Axis p_259901_,
+        Vec3 p_259630_,
+        Entity p_259166_,
+        Vec3 p_260043_,
+        float p_259853_,
+        float p_259667_
+    ) {
+        BlockPos blockpos = p_259931_.minCorner;
+        BlockState blockstate = p_259301_.getBlockState(blockpos);
+        Direction.Axis direction$axis = blockstate.getOptionalValue(BlockStateProperties.HORIZONTAL_AXIS).orElse(Direction.Axis.X);
+        double d0 = (double)p_259931_.axis1Size;
+        double d1 = (double)p_259931_.axis2Size;
+        EntityDimensions entitydimensions = p_259166_.getDimensions(p_259166_.getPose());
+        int i = p_259901_ == direction$axis ? 0 : 90;
+        Vec3 vec3 = p_259901_ == direction$axis ? p_260043_ : new Vec3(p_260043_.z, p_260043_.y, -p_260043_.x);
+        double d2 = (double)entitydimensions.width() / 2.0 + (d0 - (double)entitydimensions.width()) * p_259630_.x();
+        double d3 = (d1 - (double)entitydimensions.height()) * p_259630_.y();
+        double d4 = 0.5 + p_259630_.z();
+        boolean flag = direction$axis == Direction.Axis.X;
+        Vec3 vec31 = new Vec3(
+            (double)blockpos.getX() + (flag ? d2 : d4), (double)blockpos.getY() + d3, (double)blockpos.getZ() + (flag ? d4 : d2)
+        );
+      Vec3 vec32 = findCollisionFreePosition(vec31, p_259301_, p_259166_, entitydimensions);
+      PortalInfo portalInfo = new PortalInfo(vec32, vec3, p_259853_ + (float)i, p_259667_);
+      portalInfo.setWorld(p_259301_);
+      portalInfo.setPortalEventInfo(mohist$portalInfo.getAndSet(null));
+      return portalInfo;
+   }
+
+   public static PortalInfo createPortalInfo(ServerLevel pLevel, BlockUtil.FoundRectangle pPortalPos, Direction.Axis pAxis, Vec3 pRelativePos, Entity pEntity, Vec3 pVelocity, float pYRot, float pXRot, CraftPortalEvent portalEventInfo) { // CraftBukkit
+      mohist$portalInfo.set(portalEventInfo);
+      return createPortalInfo(pLevel, pPortalPos, pAxis, pRelativePos, pEntity, pVelocity, pYRot, pXRot);
+   }
+
+    private static Vec3 findCollisionFreePosition(Vec3 p_260315_, ServerLevel p_259704_, Entity p_259626_, EntityDimensions p_259816_) {
         if (!(p_259816_.width() > 4.0F) && !(p_259816_.height() > 4.0F)) {
             double d0 = (double)p_259816_.height() / 2.0;
             Vec3 vec3 = p_260315_.add(0.0, d0, 0.0);

--- a/net/minecraft/world/level/levelgen/presets/WorldPresets.java
+++ b/net/minecraft/world/level/levelgen/presets/WorldPresets.java
@@ -1,7 +_,6 @@
 package net.minecraft.world.level.levelgen.presets;
 
 import java.util.Map;
-import java.util.Objects;
 import java.util.Optional;
 import net.minecraft.core.Holder;
 import net.minecraft.core.HolderGetter;
@@ -44,22 +_,17 @@
     }
 
     private static ResourceKey<WorldPreset> register(String p_226460_) {
-        return ResourceKey.create(Registries.WORLD_PRESET, ResourceLocation.withDefaultNamespace(p_226460_));
+        return ResourceKey.create(Registries.WORLD_PRESET, new ResourceLocation(p_226460_));
     }
 
     public static Optional<ResourceKey<WorldPreset>> fromSettings(WorldDimensions p_329954_) {
-        return p_329954_.get(LevelStem.OVERWORLD).flatMap(p_341908_ -> {
-            Object object = p_341908_;
-            Objects.requireNonNull(object);
-            ChunkGenerator chunkgenerator = (ChunkGenerator)object;
-
-            p_341908_.generator();
-            return switch (chunkgenerator) {
-                case FlatLevelSource flatlevelsource -> Optional.of(FLAT);
-                case DebugLevelSource debuglevelsource -> Optional.of(DEBUG);
-                case NoiseBasedChunkGenerator noisebasedchunkgenerator -> Optional.of(NORMAL);
-                default -> Optional.empty();
-            };
+        return p_329954_.get(LevelStem.OVERWORLD).flatMap(p_251294_ -> {
+            ChunkGenerator chunkgenerator = p_251294_.generator();
+            if (chunkgenerator instanceof FlatLevelSource) {
+                return Optional.of(FLAT);
+            } else {
+                return chunkgenerator instanceof DebugLevelSource ? Optional.of(DEBUG) : Optional.empty();
+            }
         });
     }
 

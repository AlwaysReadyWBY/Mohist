--- a/net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate.java
+++ b/net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate.java
@@ -24,6 +_,7 @@
 import net.minecraft.nbt.IntTag;
 import net.minecraft.nbt.ListTag;
 import net.minecraft.nbt.NbtUtils;
+import net.minecraft.nbt.Tag;
 import net.minecraft.util.RandomSource;
 import net.minecraft.world.Clearable;
 import net.minecraft.world.RandomizableContainer;
@@ -31,6 +_,7 @@
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
+import net.minecraft.world.entity.SpawnGroupData;
 import net.minecraft.world.entity.decoration.Painting;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.EmptyBlockGetter;
@@ -50,6 +_,8 @@
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.phys.shapes.BitSetDiscreteVoxelShape;
 import net.minecraft.world.phys.shapes.DiscreteVoxelShape;
+import org.bukkit.craftbukkit.persistence.CraftPersistentDataContainer;
+import org.bukkit.craftbukkit.persistence.CraftPersistentDataTypeRegistry;
 
 public class StructureTemplate {
     public static final String PALETTE_TAG = "palette";
@@ -63,8 +_,8 @@
     public static final String ENTITY_TAG_BLOCKPOS = "blockPos";
     public static final String ENTITY_TAG_NBT = "nbt";
     public static final String SIZE_TAG = "size";
-    public final List<StructureTemplate.Palette> palettes = Lists.newArrayList();
-    public final List<StructureTemplate.StructureEntityInfo> entityInfoList = Lists.newArrayList();
+   	public final List<StructureTemplate.Palette> palettes = Lists.newArrayList();
+   	public final List<StructureTemplate.StructureEntityInfo> entityInfoList = Lists.newArrayList();
     private Vec3i size = Vec3i.ZERO;
     private String author = "?";
 
@@ -80,6 +_,11 @@
         return this.author;
     }
 
+   	// CraftBukkit start - data containers
+   	private static final CraftPersistentDataTypeRegistry DATA_TYPE_REGISTRY = new CraftPersistentDataTypeRegistry();
+   	public CraftPersistentDataContainer persistentDataContainer = new CraftPersistentDataContainer(DATA_TYPE_REGISTRY);
+   	// CraftBukkit end
+
     public void fillFromWorld(Level p_163803_, BlockPos p_163804_, Vec3i p_163805_, boolean p_163806_, @Nullable Block p_163807_) {
         if (p_163805_.getX() >= 1 && p_163805_.getY() >= 1 && p_163805_.getZ() >= 1) {
             BlockPos blockpos = p_163804_.offset(p_163805_).offset(-1, -1, -1);
@@ -226,6 +_,10 @@
         return transform(p_74565_, p_74564_.getMirror(), p_74564_.getRotation(), p_74564_.getRotationPivot());
     }
 
+    public static Vec3 transformedVec3d(StructurePlaceSettings placementIn, Vec3 pos) {
+        return transform(pos, placementIn.getMirror(), placementIn.getRotation(), placementIn.getRotationPivot());
+    }
+
     public boolean placeInWorld(
         ServerLevelAccessor p_230329_, BlockPos p_230330_, BlockPos p_230331_, StructurePlaceSettings p_230332_, RandomSource p_230333_, int p_230334_
     ) {
@@ -238,8 +_,8 @@
                 && this.size.getY() >= 1
                 && this.size.getZ() >= 1) {
                 BoundingBox boundingbox = p_230332_.getBoundingBox();
-                List<BlockPos> list1 = Lists.newArrayListWithCapacity(p_230332_.shouldApplyWaterlogging() ? list.size() : 0);
-                List<BlockPos> list2 = Lists.newArrayListWithCapacity(p_230332_.shouldApplyWaterlogging() ? list.size() : 0);
+                List<BlockPos> list1 = Lists.newArrayListWithCapacity(p_230332_.shouldKeepLiquids() ? list.size() : 0);
+                List<BlockPos> list2 = Lists.newArrayListWithCapacity(p_230332_.shouldKeepLiquids() ? list.size() : 0);
                 List<Pair<BlockPos, CompoundTag>> list3 = Lists.newArrayListWithCapacity(list.size());
                 int i = Integer.MAX_VALUE;
                 int j = Integer.MAX_VALUE;
@@ -248,10 +_,10 @@
                 int i1 = Integer.MIN_VALUE;
                 int j1 = Integer.MIN_VALUE;
 
-                for (StructureTemplate.StructureBlockInfo structuretemplate$structureblockinfo : processBlockInfos(p_230329_, p_230330_, p_230331_, p_230332_, list)) {
+                for (StructureTemplate.StructureBlockInfo structuretemplate$structureblockinfo : processBlockInfos(p_230329_, p_230330_, p_230331_, p_230332_, list, this)) {
                     BlockPos blockpos = structuretemplate$structureblockinfo.pos;
                     if (boundingbox == null || boundingbox.isInside(blockpos)) {
-                        FluidState fluidstate = p_230332_.shouldApplyWaterlogging() ? p_230329_.getFluidState(blockpos) : null;
+                        FluidState fluidstate = p_230332_.shouldKeepLiquids() ? p_230329_.getFluidState(blockpos) : null;
                         BlockState blockstate = structuretemplate$structureblockinfo.state.mirror(p_230332_.getMirror()).rotate(p_230332_.getRotation());
                         if (structuretemplate$structureblockinfo.nbt != null) {
                             BlockEntity blockentity = p_230329_.getBlockEntity(blockpos);
@@ -360,7 +_,7 @@
                 }
 
                 if (!p_230332_.isIgnoreEntities()) {
-                    this.placeEntities(p_230329_, p_230330_, p_230332_.getMirror(), p_230332_.getRotation(), p_230332_.getRotationPivot(), boundingbox, p_230332_.shouldFinalizeEntities());
+                    this.addEntitiesToWorld(p_230329_, p_230330_, p_230332_);
                 }
 
                 return true;
@@ -394,12 +_,21 @@
         });
     }
 
+    /**
+     * @deprecated Forge: Use {@link #processBlockInfos(ServerLevelAccessor, BlockPos, BlockPos, StructurePlaceSettings, List, StructureTemplate)} instead.
+     */
+    @Deprecated
+    public static List<StructureTemplate.StructureBlockInfo> processBlockInfos(ServerLevelAccessor p_278297_, BlockPos p_74519_, BlockPos p_74520_, StructurePlaceSettings p_74521_, List<StructureTemplate.StructureBlockInfo> p_74522_) {
+        return processBlockInfos(p_278297_, p_74519_, p_74520_, p_74521_, p_74522_, null);
+    }
+
     public static List<StructureTemplate.StructureBlockInfo> processBlockInfos(
         ServerLevelAccessor p_278297_,
         BlockPos p_74519_,
         BlockPos p_74520_,
         StructurePlaceSettings p_74521_,
-        List<StructureTemplate.StructureBlockInfo> p_74522_
+        List<StructureTemplate.StructureBlockInfo> p_74522_,
+        @Nullable StructureTemplate template
     ) {
         List<StructureTemplate.StructureBlockInfo> list = new ArrayList<>();
         List<StructureTemplate.StructureBlockInfo> list1 = new ArrayList<>();
@@ -415,7 +_,7 @@
 
             while (structuretemplate$structureblockinfo1 != null && iterator.hasNext()) {
                 structuretemplate$structureblockinfo1 = iterator.next()
-                    .processBlock(p_278297_, p_74519_, p_74520_, structuretemplate$structureblockinfo, structuretemplate$structureblockinfo1, p_74521_);
+                    .process(p_278297_, p_74519_, p_74520_, structuretemplate$structureblockinfo, structuretemplate$structureblockinfo1, p_74521_, template);
             }
 
             if (structuretemplate$structureblockinfo1 != null) {
@@ -431,21 +_,27 @@
         return list1;
     }
 
+    private void addEntitiesToWorld(ServerLevelAccessor p_74524_, BlockPos p_74525_, StructurePlaceSettings placementIn) {
+        placeEntities(p_74524_, p_74525_, placementIn.getMirror(), placementIn.getRotation(), placementIn.getBoundingBox(), placementIn.shouldFinalizeEntities(), placementIn);
+    }
+
     private void placeEntities(
         ServerLevelAccessor p_74524_,
         BlockPos p_74525_,
         Mirror p_74526_,
         Rotation p_74527_,
-        BlockPos p_74528_,
         @Nullable BoundingBox p_74529_,
-        boolean p_74530_
+        boolean p_74530_,
+        StructurePlaceSettings placementIn
     ) {
-        for (StructureTemplate.StructureEntityInfo structuretemplate$structureentityinfo : this.entityInfoList) {
-            BlockPos blockpos = transform(structuretemplate$structureentityinfo.blockPos, p_74526_, p_74527_, p_74528_).offset(p_74525_);
+        var entities = processEntityInfos(this, p_74524_, p_74525_, placementIn, this.entityInfoList);
+        for (StructureTemplate.StructureEntityInfo structuretemplate$structureentityinfo : entities) {
+            BlockPos blockpos = structuretemplate$structureentityinfo.blockPos; // FORGE: Position will have already been transformed by processEntityInfos
             if (p_74529_ == null || p_74529_.isInside(blockpos)) {
                 CompoundTag compoundtag = structuretemplate$structureentityinfo.nbt.copy();
-                Vec3 vec3 = transform(structuretemplate$structureentityinfo.pos, p_74526_, p_74527_, p_74528_);
-                Vec3 vec31 = vec3.add((double)p_74525_.getX(), (double)p_74525_.getY(), (double)p_74525_.getZ());
+                //Vec3 vec3 = transform(structuretemplate$structureentityinfo.pos, p_74526_, p_74527_, p_74528_);
+                //Vec3 vec31 = vec3.add((double)p_74525_.getX(), (double)p_74525_.getY(), (double)p_74525_.getZ());
+                Vec3 vec31 = structuretemplate$structureentityinfo.pos; // FORGE: Position will have already been transformed by processEntityInfos
                 ListTag listtag = new ListTag();
                 listtag.add(DoubleTag.valueOf(vec31.x));
                 listtag.add(DoubleTag.valueOf(vec31.y));
@@ -466,6 +_,24 @@
         }
     }
 
+    public static List<StructureTemplate.StructureEntityInfo> processEntityInfos(@Nullable StructureTemplate template, LevelAccessor level, BlockPos seedPos, StructurePlaceSettings settings, List<StructureTemplate.StructureEntityInfo> entities) {
+        var list = new ArrayList<StructureTemplate.StructureEntityInfo>();
+        for (var entityInfo : entities) {
+           var pos = transformedVec3d(settings, entityInfo.pos).add(Vec3.atLowerCornerOf(seedPos));
+           var blockpos = calculateRelativePosition(settings, entityInfo.blockPos).offset(seedPos);
+           var info = new StructureTemplate.StructureEntityInfo(pos, blockpos, entityInfo.nbt);
+           for (var proc : settings.getProcessors()) {
+              info = proc.processEntity(level, seedPos, entityInfo, info, settings, template);
+              if (info == null)
+                 break;
+           }
+           if (info != null)
+              list.add(info);
+        }
+        return list;
+     }
+
+
     private static Optional<Entity> createEntityIgnoreException(ServerLevelAccessor p_74544_, CompoundTag p_74545_) {
         try {
             return EntityType.create(p_74545_, p_74544_.getLevel());
@@ -683,6 +_,13 @@
 
         p_74619_.put("entities", listtag);
         p_74619_.put("size", this.newIntegerList(this.size.getX(), this.size.getY(), this.size.getZ()));
+
+      // CraftBukkit Start - PDC
+      if (!this.persistentDataContainer.isEmpty()) {
+         p_74619_.put("BukkitValues", this.persistentDataContainer.toTagCompound());
+      }
+      // CraftBukkit end
+
         return NbtUtils.addCurrentDataVersion(p_74619_);
     }
 
@@ -715,6 +_,12 @@
                 this.entityInfoList.add(new StructureTemplate.StructureEntityInfo(vec3, blockpos, compoundtag1));
             }
         }
+
+      	// CraftBukkit start - PDC
+      	Tag base = p_248574_.get("BukkitValues");
+      	if (base instanceof CompoundTag) {
+         	this.persistentDataContainer.putAll((CompoundTag) base);
+		}
     }
 
     private void loadPalette(HolderGetter<Block> p_256546_, ListTag p_251056_, ListTag p_251493_) {

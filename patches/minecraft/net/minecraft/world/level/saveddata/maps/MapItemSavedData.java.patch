--- a/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
+++ b/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
@@ -11,6 +_,7 @@
 import java.util.Map;
 import java.util.Objects;
 import java.util.Optional;
+import java.util.UUID;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
@@ -41,6 +_,13 @@
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.dimension.DimensionType;
 import net.minecraft.world.level.saveddata.SavedData;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.craftbukkit.map.CraftMapView;
+import org.bukkit.craftbukkit.map.RenderData;
+import org.bukkit.craftbukkit.util.CraftChatMessage;
 import org.slf4j.Logger;
 
 public class MapItemSavedData extends SavedData {
@@ -49,22 +_,28 @@
     private static final int HALF_MAP_SIZE = 64;
     public static final int MAX_SCALE = 4;
     public static final int TRACKED_DECORATION_LIMIT = 256;
-    private static final String FRAME_PREFIX = "frame-";
-    public int centerX;
-    public int centerZ;
-    public ResourceKey<Level> dimension;
-    public boolean trackingPosition;
-    public boolean unlimitedTracking;
-    public byte scale;
-    public byte[] colors = new byte[16384];
-    public boolean locked;
-    public final List<MapItemSavedData.HoldingPlayer> carriedBy = Lists.newArrayList();
-    public final Map<Player, MapItemSavedData.HoldingPlayer> carriedByPlayers = Maps.newHashMap();
-    private final Map<String, MapBanner> bannerMarkers = Maps.newHashMap();
-    public final Map<String, MapDecoration> decorations = Maps.newLinkedHashMap();
+   	public int centerX;
+   	public int centerZ;
+   	public ResourceKey<Level> dimension;
+   	public boolean trackingPosition;
+   	public boolean unlimitedTracking;
+   	public byte scale;
+   	public byte[] colors = new byte[16384];
+   	public boolean locked;
+   	public final List<MapItemSavedData.HoldingPlayer> carriedBy = Lists.newArrayList();
+   	public final Map<Player, MapItemSavedData.HoldingPlayer> carriedByPlayers = Maps.newHashMap();
+   	private final Map<String, MapBanner> bannerMarkers = Maps.newHashMap();
+   	public final Map<String, MapDecoration> decorations = Maps.newLinkedHashMap();
     private final Map<String, MapFrame> frameMarkers = Maps.newHashMap();
     private int trackedDecorationCount;
 
+   // CraftBukkit start
+   public final CraftMapView mapView;
+   private CraftServer server;
+   public UUID uniqueId = null;
+   public MapId id;
+   // CraftBukkit end
+   
     public static SavedData.Factory<MapItemSavedData> factory() {
         return new SavedData.Factory<>(() -> {
             throw new IllegalStateException("Should never create an empty map saved data");
@@ -82,6 +_,11 @@
         this.unlimitedTracking = p_164772_;
         this.locked = p_164773_;
         this.setDirty();
+
+      // CraftBukkit start
+      mapView = new CraftMapView(this);
+      server = (CraftServer) org.bukkit.Bukkit.getServer();
+      // CraftBukkit end
     }
 
     public static MapItemSavedData createFresh(
@@ -142,7 +_,7 @@
                 mapitemsaveddata.addDecoration(
                     MapDecorationTypes.FRAME,
                     null,
-                    getFrameKey(mapframe.getEntityId()),
+                    "frame-" + mapframe.getEntityId(),
                     (double)mapframe.getPos().getX(),
                     (double)mapframe.getPos().getZ(),
                     (double)mapframe.getRotation(),
@@ -244,14 +_,14 @@
             BlockPos blockpos = itemframe.getPos();
             MapFrame mapframe1 = this.frameMarkers.get(MapFrame.frameId(blockpos));
             if (mapframe1 != null && itemframe.getId() != mapframe1.getEntityId() && this.frameMarkers.containsKey(mapframe1.getId())) {
-                this.removeDecoration(getFrameKey(mapframe1.getEntityId()));
+                this.removeDecoration("frame-" + mapframe1.getEntityId());
             }
 
             MapFrame mapframe = new MapFrame(blockpos, itemframe.getDirection().get2DDataValue() * 90, itemframe.getId());
             this.addDecoration(
                 MapDecorationTypes.FRAME,
                 p_77919_.level(),
-                getFrameKey(itemframe.getId()),
+                "frame-" + itemframe.getId(),
                 (double)blockpos.getX(),
                 (double)blockpos.getZ(),
                 (double)(itemframe.getDirection().get2DDataValue() * 90),
@@ -264,15 +_,15 @@
         if (!this.decorations.keySet().containsAll(mapdecorations.decorations().keySet())) {
             mapdecorations.decorations()
                 .forEach(
-                    (p_341967_, p_341968_) -> {
-                        if (!this.decorations.containsKey(p_341967_)) {
+                    (p_327528_, p_327529_) -> {
+                        if (!this.decorations.containsKey(p_327528_)) {
                             this.addDecoration(
-                                p_341968_.type(),
+                                p_327529_.type(),
                                 p_77919_.level(),
-                                p_341967_,
-                                p_341968_.x(),
-                                p_341968_.z(),
-                                (double)p_341968_.rotation(),
+                                p_327528_,
+                                p_327529_.x(),
+                                p_327529_.z(),
+                                (double)p_327529_.rotation(),
                                 null
                             );
                         }
@@ -386,7 +_,7 @@
         }
     }
 
-    public void setDecorationsDirty() {
+    private void setDecorationsDirty() {
         this.setDirty();
         this.carriedBy.forEach(MapItemSavedData.HoldingPlayer::markDecorationsDirty);
     }
@@ -450,7 +_,7 @@
     }
 
     public void removedFromFrame(BlockPos p_77948_, int p_77949_) {
-        this.removeDecoration(getFrameKey(p_77949_));
+        this.removeDecoration("frame-" + p_77949_);
         this.frameMarkers.remove(MapFrame.frameId(p_77948_));
     }
 
@@ -500,10 +_,6 @@
         return this.trackedDecorationCount >= p_181313_;
     }
 
-    private static String getFrameKey(int p_342097_) {
-        return "frame-" + p_342097_;
-    }
-
     public class HoldingPlayer {
         public final Player player;
         private boolean dirtyData = true;
@@ -552,7 +_,6 @@
             } else {
                 collection = null;
             }
-
             return collection == null && mapitemsaveddata$mappatch == null
                 ? null
                 : new ClientboundMapItemDataPacket(

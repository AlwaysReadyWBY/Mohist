--- a/net/minecraft/world/level/chunk/ChunkGenerator.java
+++ b/net/minecraft/world/level/chunk/ChunkGenerator.java
@@ -74,12 +_,15 @@
 import net.minecraft.world.level.levelgen.structure.placement.StructurePlacement;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager;
 import org.apache.commons.lang3.mutable.MutableBoolean;
+import org.bukkit.craftbukkit.v1_20_R3.generator.CraftLimitedRegion;
+import org.bukkit.craftbukkit.v1_20_R3.util.RandomSourceWrapper;
+import org.bukkit.generator.BlockPopulator;
 
 public abstract class ChunkGenerator {
    public static final Codec<ChunkGenerator> CODEC = BuiltInRegistries.CHUNK_GENERATOR.byNameCodec().dispatchStable(ChunkGenerator::codec, Function.identity());
    protected final BiomeSource biomeSource;
    private final Supplier<List<FeatureSorter.StepFeatureData>> featuresPerStep;
-   private final Function<Holder<Biome>, BiomeGenerationSettings> generationSettingsGetter;
+   public final Function<Holder<Biome>, BiomeGenerationSettings> generationSettingsGetter;
 
    public ChunkGenerator(BiomeSource p_256133_) {
       this(p_256133_, (p_223234_) -> {
@@ -265,6 +_,31 @@
       }
    }
 
+   public void addVanillaDecorations(WorldGenLevel pLevel, ChunkAccess pChunk, StructureManager pStructureManager) { // CraftBukkit
+      this.applyBiomeDecoration(pLevel, pChunk, pStructureManager);
+   }
+
+   public void applyBiomeDecoration(WorldGenLevel pLevel, ChunkAccess pChunk, StructureManager pStructureManager, boolean vanilla) {
+      if (vanilla) {
+         this.addVanillaDecorations(pLevel, pChunk, pStructureManager);
+      }
+      org.bukkit.World world = pLevel.getMinecraftWorld().getWorld();
+      // only call when a populator is present (prevents unnecessary entity conversion)
+      if (!world.getPopulators().isEmpty()) {
+         CraftLimitedRegion limitedRegion = new CraftLimitedRegion(pLevel, pChunk.getPos());
+         int x = pChunk.getPos().x;
+         int z = pChunk.getPos().z;
+         for (BlockPopulator populator : world.getPopulators()) {
+            WorldgenRandom seededrandom = new WorldgenRandom(new LegacyRandomSource(pLevel.getSeed()));
+            seededrandom.setDecorationSeed(pLevel.getSeed(), x, z);
+            populator.populate(world, new RandomSourceWrapper.RandomWrapper(seededrandom), x, z, limitedRegion);
+         }
+         limitedRegion.saveEntities();
+         limitedRegion.breakLink();
+      }
+      // CraftBukkit end
+   }
+
    public void applyBiomeDecoration(WorldGenLevel p_223087_, ChunkAccess p_223088_, StructureManager p_223089_) {
       ChunkPos chunkpos = p_223088_.getPos();
       if (!SharedConstants.debugVoidTerrain(chunkpos)) {
@@ -480,6 +_,14 @@
       Predicate<Holder<Biome>> predicate = holderset::contains;
       StructureStart structurestart = structure.generate(p_223107_, this, this.biomeSource, p_223108_, p_223109_, p_223110_, p_223112_, i, p_223111_, predicate);
       if (structurestart.isValid()) {
+         // CraftBukkit start
+         BoundingBox box = structurestart.getBoundingBox();
+         org.bukkit.event.world.AsyncStructureSpawnEvent event = new org.bukkit.event.world.AsyncStructureSpawnEvent(p_223106_.level.getMinecraftWorld().getWorld(), org.bukkit.craftbukkit.v1_20_R3.generator.structure.CraftStructure.minecraftToBukkit(structure, p_223107_), new org.bukkit.util.BoundingBox(box.minX(), box.minY(), box.minZ(), box.maxX(), box.maxY(), box.maxZ()), p_223112_.x, p_223112_.z);
+         org.bukkit.Bukkit.getPluginManager().callEvent(event);
+         if (event.isCancelled()) {
+            return true;
+         }
+         // CraftBukkit end
          p_223106_.setStartForStructure(p_223113_, structure, structurestart, p_223111_);
          return true;
       } else {

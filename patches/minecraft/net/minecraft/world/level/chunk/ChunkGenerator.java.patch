--- a/net/minecraft/world/level/chunk/ChunkGenerator.java
+++ b/net/minecraft/world/level/chunk/ChunkGenerator.java
@@ -1,12 +_,17 @@
 package net.minecraft.world.level.chunk;
 
+import com.google.common.base.Stopwatch;
 import com.google.common.base.Suppliers;
+import com.mojang.datafixers.Products;
 import com.mojang.datafixers.util.Pair;
+import com.mojang.logging.LogUtils;
 import com.mojang.serialization.Codec;
+import com.mojang.serialization.codecs.RecordCodecBuilder;
 import it.unimi.dsi.fastutil.ints.IntArraySet;
 import it.unimi.dsi.fastutil.ints.IntSet;
 import it.unimi.dsi.fastutil.longs.LongSet;
 import it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap;
+import it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.objects.ObjectArraySet;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -14,13 +_,16 @@
 import java.util.List;
 import java.util.Map;
 import java.util.Optional;
+import java.util.Random;
 import java.util.Set;
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.Executor;
+import java.util.concurrent.TimeUnit;
 import java.util.function.Function;
 import java.util.function.Predicate;
 import java.util.function.Supplier;
 import java.util.stream.Collectors;
+import java.util.stream.Stream;
 import javax.annotation.Nullable;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
@@ -37,9 +_,11 @@
 import net.minecraft.core.registries.BuiltInRegistries;
 import net.minecraft.core.registries.Registries;
 import net.minecraft.network.protocol.game.DebugPackets;
+import net.minecraft.resources.RegistryOps;
 import net.minecraft.resources.ResourceKey;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.WorldGenRegion;
+import net.minecraft.util.RandomSource;
 import net.minecraft.util.random.WeightedRandomList;
 import net.minecraft.world.entity.MobCategory;
 import net.minecraft.world.level.ChunkPos;
@@ -54,6 +_,7 @@
 import net.minecraft.world.level.biome.BiomeSource;
 import net.minecraft.world.level.biome.FeatureSorter;
 import net.minecraft.world.level.biome.MobSpawnSettings;
+import net.minecraft.world.level.levelgen.FlatLevelSource;
 import net.minecraft.world.level.levelgen.GenerationStep;
 import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.level.levelgen.LegacyRandomSource;
@@ -74,12 +_,18 @@
 import net.minecraft.world.level.levelgen.structure.placement.StructurePlacement;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager;
 import org.apache.commons.lang3.mutable.MutableBoolean;
+import org.bukkit.craftbukkit.v1_19_R2.generator.CraftLimitedRegion;
+import org.bukkit.craftbukkit.v1_19_R2.util.RandomSourceWrapper;
+import org.bukkit.generator.BlockPopulator;
+import org.bukkit.generator.LimitedRegion;
+import org.bukkit.generator.WorldInfo;
+import org.slf4j.Logger;
 
 public abstract class ChunkGenerator {
    public static final Codec<ChunkGenerator> f_62136_ = BuiltInRegistries.f_256914_.m_194605_().dispatchStable(ChunkGenerator::m_6909_, Function.identity());
    protected final BiomeSource f_62137_;
    private final Supplier<List<FeatureSorter.StepFeatureData>> f_223020_;
-   private final Function<Holder<Biome>, BiomeGenerationSettings> f_223021_;
+   public final Function<Holder<Biome>, BiomeGenerationSettings> f_223021_;
 
    public ChunkGenerator(BiomeSource p_256133_) {
       this(p_256133_, (p_223234_) -> {
@@ -363,6 +_,42 @@
             throw new ReportedException(crashreport);
          }
       }
+      org.bukkit.World world = p_223087_.getMinecraftWorld().getWorld();
+      // only call when a populator is present (prevents unnecessary entity conversion)
+      if (!world.getPopulators().isEmpty()) {
+         CraftLimitedRegion limitedRegion = new CraftLimitedRegion(p_223087_, p_223088_.m_7697_());
+         int x = p_223088_.m_7697_().f_45578_;
+         int z = p_223088_.m_7697_().f_45579_;
+         for (BlockPopulator populator : world.getPopulators()) {
+            WorldgenRandom seededrandom = new WorldgenRandom(new LegacyRandomSource(p_223087_.m_7328_()));
+            seededrandom.m_64690_(p_223087_.m_7328_(), x, z);
+            populator.populate(world, new RandomSourceWrapper.RandomWrapper(seededrandom), x, z, limitedRegion);
+         }
+         limitedRegion.saveEntities();
+         limitedRegion.breakLink();
+      }
+      // CraftBukkit end
+   }
+
+   public void applyBiomeDecoration(WorldGenLevel p_223087_, ChunkAccess p_223088_, StructureManager p_223089_, final boolean vanilla) {
+      if (vanilla) {
+         this.m_213609_(p_223087_, p_223088_, p_223089_);
+      }
+      org.bukkit.World world = p_223087_.getMinecraftWorld().getWorld();
+      // only call when a populator is present (prevents unnecessary entity conversion)
+      if (!world.getPopulators().isEmpty()) {
+         CraftLimitedRegion limitedRegion = new CraftLimitedRegion(p_223087_, p_223088_.m_7697_());
+         int x = p_223088_.m_7697_().f_45578_;
+         int z = p_223088_.m_7697_().f_45579_;
+         for (BlockPopulator populator : world.getPopulators()) {
+            WorldgenRandom seededrandom = new WorldgenRandom(new LegacyRandomSource(p_223087_.m_7328_()));
+            seededrandom.m_64690_(p_223087_.m_7328_(), x, z);
+            populator.populate(world, new RandomSourceWrapper.RandomWrapper(seededrandom), x, z, limitedRegion);
+         }
+         limitedRegion.saveEntities();
+         limitedRegion.breakLink();
+      }
+      // CraftBukkit end
    }
 
    private static BoundingBox m_187717_(ChunkAccess p_187718_) {

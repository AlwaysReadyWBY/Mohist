--- a/net/minecraft/world/level/block/BigDripleafBlock.java
+++ b/net/minecraft/world/level/block/BigDripleafBlock.java
@@ -39,6 +_,9 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.craftbukkit.v1_20_R2.block.CraftBlock;
+import org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityInteractEvent;
 
 public class BigDripleafBlock extends HorizontalDirectionalBlock implements BonemealableBlock, SimpleWaterloggedBlock {
    private static final BooleanProperty WATERLOGGED = BlockStateProperties.WATERLOGGED;
@@ -104,7 +_,7 @@
    }
 
    public void onProjectileHit(Level p_152228_, BlockState p_152229_, BlockHitResult p_152230_, Projectile p_152231_) {
-      this.setTiltAndScheduleTick(p_152229_, p_152228_, p_152230_.getBlockPos(), Tilt.FULL, SoundEvents.BIG_DRIPLEAF_TILT_DOWN);
+      this.setTiltAndScheduleTick(p_152229_, p_152228_, p_152230_.getBlockPos(), Tilt.FULL, SoundEvents.BIG_DRIPLEAF_TILT_DOWN, p_152231_); // CraftBukkit
    }
 
    public FluidState getFluidState(BlockState p_152312_) {
@@ -152,7 +_,20 @@
    public void entityInside(BlockState p_152266_, Level p_152267_, BlockPos p_152268_, Entity p_152269_) {
       if (!p_152267_.isClientSide) {
          if (p_152266_.getValue(TILT) == Tilt.NONE && canEntityTilt(p_152268_, p_152269_) && !p_152267_.hasNeighborSignal(p_152268_)) {
-            this.setTiltAndScheduleTick(p_152266_, p_152267_, p_152268_, Tilt.UNSTABLE, (SoundEvent)null);
+            // CraftBukkit start - tilt dripleaf
+            org.bukkit.event.Cancellable cancellable;
+            if (p_152269_ instanceof Player) {
+               cancellable = CraftEventFactory.callPlayerInteractEvent((Player) p_152269_, org.bukkit.event.block.Action.PHYSICAL, p_152268_, null, null, null);
+            } else {
+               cancellable = new EntityInteractEvent(p_152269_.getBukkitEntity(), CraftBlock.at(p_152267_, p_152268_));
+               p_152267_.getCraftServer().getPluginManager().callEvent((EntityInteractEvent) cancellable);
+            }
+
+            if (cancellable.isCancelled()) {
+               return;
+            }
+            this.setTiltAndScheduleTick(p_152266_, p_152267_, p_152268_, Tilt.UNSTABLE, (SoundEvent) null, p_152269_);
+            // CraftBukkit end
          }
 
       }
@@ -164,9 +_,9 @@
       } else {
          Tilt tilt = p_220798_.getValue(TILT);
          if (tilt == Tilt.UNSTABLE) {
-            this.setTiltAndScheduleTick(p_220798_, p_220799_, p_220800_, Tilt.PARTIAL, SoundEvents.BIG_DRIPLEAF_TILT_DOWN);
+            this.setTiltAndScheduleTick(p_220798_, p_220799_, p_220800_, Tilt.PARTIAL, SoundEvents.BIG_DRIPLEAF_TILT_DOWN, null); // CraftBukkit
          } else if (tilt == Tilt.PARTIAL) {
-            this.setTiltAndScheduleTick(p_220798_, p_220799_, p_220800_, Tilt.FULL, SoundEvents.BIG_DRIPLEAF_TILT_DOWN);
+            this.setTiltAndScheduleTick(p_220798_, p_220799_, p_220800_, Tilt.FULL, SoundEvents.BIG_DRIPLEAF_TILT_DOWN, null); // CraftBukkit
          } else if (tilt == Tilt.FULL) {
             resetTilt(p_220798_, p_220799_, p_220800_);
          }
@@ -190,34 +_,41 @@
       return p_152303_.onGround() && p_152303_.position().y > (double)((float)p_152302_.getY() + 0.6875F);
    }
 
-   private void setTiltAndScheduleTick(BlockState p_152283_, Level p_152284_, BlockPos p_152285_, Tilt p_152286_, @Nullable SoundEvent p_152287_) {
-      setTilt(p_152283_, p_152284_, p_152285_, p_152286_);
-      if (p_152287_ != null) {
-         playTiltSound(p_152284_, p_152285_, p_152287_);
+   private void setTiltAndScheduleTick(BlockState pState, Level pLevel, BlockPos pPos, Tilt pTilt, @Nullable SoundEvent pSound, @Nullable Entity entity) {
+      if (!setTilt(pState, pLevel, pPos, pTilt, entity)) return;
+      if (pSound != null) {
+         playTiltSound(pLevel, pPos, pSound);
       }
 
-      int i = DELAY_UNTIL_NEXT_TILT_STATE.getInt(p_152286_);
+      int i = DELAY_UNTIL_NEXT_TILT_STATE.getInt(pTilt);
       if (i != -1) {
-         p_152284_.scheduleTick(p_152285_, this, i);
+         pLevel.scheduleTick(pPos, this, i);
       }
 
    }
 
    private static void resetTilt(BlockState p_152314_, Level p_152315_, BlockPos p_152316_) {
-      setTilt(p_152314_, p_152315_, p_152316_, Tilt.NONE);
+      setTilt(p_152314_, p_152315_, p_152316_, Tilt.NONE, null);
       if (p_152314_.getValue(TILT) != Tilt.NONE) {
          playTiltSound(p_152315_, p_152316_, SoundEvents.BIG_DRIPLEAF_TILT_UP);
       }
 
    }
 
-   private static void setTilt(BlockState p_152278_, Level p_152279_, BlockPos p_152280_, Tilt p_152281_) {
-      Tilt tilt = p_152278_.getValue(TILT);
-      p_152279_.setBlock(p_152280_, p_152278_.setValue(TILT, p_152281_), 2);
-      if (p_152281_.causesVibration() && p_152281_ != tilt) {
-         p_152279_.gameEvent((Entity)null, GameEvent.BLOCK_CHANGE, p_152280_);
+   private static boolean setTilt(BlockState pState, Level pLevel, BlockPos pPos, Tilt pTilt, @Nullable Entity entity) {
+      if (entity != null) {
+         if (!CraftEventFactory.callEntityChangeBlockEvent(entity, pPos, pState.setValue(BigDripleafBlock.TILT, pTilt))) {
+            return false;
+         }
+      }
+      // CraftBukkit end
+      Tilt tilt = pState.getValue(TILT);
+      pLevel.setBlock(pPos, pState.setValue(TILT, pTilt), 2);
+      if (pTilt.causesVibration() && pTilt != tilt) {
+         pLevel.gameEvent((Entity)null, GameEvent.BLOCK_CHANGE, pPos);
       }
 
+      return true; // CraftBukkit
    }
 
    public VoxelShape getCollisionShape(BlockState p_152307_, BlockGetter p_152308_, BlockPos p_152309_, CollisionContext p_152310_) {

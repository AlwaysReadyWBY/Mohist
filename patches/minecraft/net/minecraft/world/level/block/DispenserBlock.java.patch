--- a/net/minecraft/world/level/block/DispenserBlock.java
+++ b/net/minecraft/world/level/block/DispenserBlock.java
@@ -42,10 +_,11 @@
    private static final Logger LOGGER = LogUtils.getLogger();
    public static final DirectionProperty FACING = DirectionalBlock.FACING;
    public static final BooleanProperty TRIGGERED = BlockStateProperties.TRIGGERED;
-   private static final Map<Item, DispenseItemBehavior> DISPENSER_REGISTRY = Util.make(new Object2ObjectOpenHashMap<>(), (p_52723_) -> {
+   public static final Map<Item, DispenseItemBehavior> DISPENSER_REGISTRY = Util.make(new Object2ObjectOpenHashMap<>(), (p_52723_) -> {
       p_52723_.defaultReturnValue(new DefaultDispenseItemBehavior());
    });
    private static final int TRIGGER_DURATION = 4;
+   public static boolean eventFired = false; // CraftBukkit
 
    public static void registerBehavior(ItemLike p_52673_, DispenseItemBehavior p_52674_) {
       DISPENSER_REGISTRY.put(p_52673_.asItem(), p_52674_);
@@ -74,7 +_,7 @@
       }
    }
 
-   protected void dispenseFrom(ServerLevel p_52665_, BlockState p_301828_, BlockPos p_52666_) {
+   public void dispenseFrom(ServerLevel p_52665_, BlockState p_301828_, BlockPos p_52666_) {
       DispenserBlockEntity dispenserblockentity = p_52665_.getBlockEntity(p_52666_, BlockEntityType.DISPENSER).orElse((DispenserBlockEntity)null);
       if (dispenserblockentity == null) {
          LOGGER.warn("Ignoring dispensing attempt for Dispenser without matching block entity at {}", (Object)p_52666_);
@@ -88,6 +_,7 @@
             ItemStack itemstack = dispenserblockentity.getItem(i);
             DispenseItemBehavior dispenseitembehavior = this.getDispenseMethod(itemstack);
             if (dispenseitembehavior != DispenseItemBehavior.NOOP) {
+               eventFired = false; // CraftBukkit - reset event status
                dispenserblockentity.setItem(i, dispenseitembehavior.dispense(blocksource, itemstack));
             }
 

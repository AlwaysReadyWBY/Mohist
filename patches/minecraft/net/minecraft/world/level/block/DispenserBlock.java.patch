--- a/net/minecraft/world/level/block/DispenserBlock.java
+++ b/net/minecraft/world/level/block/DispenserBlock.java
@@ -49,6 +_,7 @@
         new Object2ObjectOpenHashMap<>(), p_327262_ -> p_327262_.defaultReturnValue(DEFAULT_BEHAVIOR)
     );
     private static final int TRIGGER_DURATION = 4;
+   	public static boolean eventFired = false; // CraftBukkit
 
     @Override
     public MapCodec<? extends DispenserBlock> codec() {
@@ -87,7 +_,7 @@
         }
     }
 
-    protected void dispenseFrom(ServerLevel p_52665_, BlockState p_301828_, BlockPos p_52666_) {
+    public void dispenseFrom(ServerLevel p_52665_, BlockState p_301828_, BlockPos p_52666_) {
         DispenserBlockEntity dispenserblockentity = p_52665_.getBlockEntity(p_52666_, BlockEntityType.DISPENSER).orElse(null);
         if (dispenserblockentity == null) {
             LOGGER.warn("Ignoring dispensing attempt for Dispenser without matching block entity at {}", p_52666_);
@@ -101,6 +_,7 @@
                 ItemStack itemstack = dispenserblockentity.getItem(i);
                 DispenseItemBehavior dispenseitembehavior = this.getDispenseMethod(p_52665_, itemstack);
                 if (dispenseitembehavior != DispenseItemBehavior.NOOP) {
+               		eventFired = false; // CraftBukkit - reset event status
                     dispenserblockentity.setItem(i, dispenseitembehavior.dispense(blocksource, itemstack));
                 }
             }

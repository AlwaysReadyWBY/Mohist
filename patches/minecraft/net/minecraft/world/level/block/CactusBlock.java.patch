--- a/net/minecraft/world/level/block/CactusBlock.java
+++ b/net/minecraft/world/level/block/CactusBlock.java
@@ -4,7 +_,6 @@
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.server.level.ServerLevel;
-import net.minecraft.tags.BlockTags;
 import net.minecraft.tags.FluidTags;
 import net.minecraft.util.RandomSource;
 import net.minecraft.world.entity.Entity;
@@ -20,8 +_,9 @@
 import net.minecraft.world.level.pathfinder.PathComputationType;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
-public class CactusBlock extends Block {
+public class CactusBlock extends Block implements net.minecraftforge.common.IPlantable {
     public static final MapCodec<CactusBlock> CODEC = simpleCodec(CactusBlock::new);
     public static final IntegerProperty AGE = BlockStateProperties.AGE_15;
     public static final int MAX_AGE = 15;
@@ -41,6 +_,7 @@
 
     @Override
     protected void tick(BlockState p_220908_, ServerLevel p_220909_, BlockPos p_220910_, RandomSource p_220911_) {
+        if (!p_220909_.isAreaLoaded(p_220910_, 1)) return; // Forge: prevent growing cactus from loading unloaded chunks with block update
         if (!p_220908_.canSurvive(p_220909_, p_220910_)) {
             p_220909_.destroyBlock(p_220910_, true);
         }
@@ -58,6 +_,7 @@
 
             if (i < 3) {
                 int j = p_220913_.getValue(AGE);
+                if (net.minecraftforge.common.ForgeHooks.onCropsGrowPre(p_220914_, blockpos, p_220913_, true)) {
                 if (j == 15) {
                     p_220914_.setBlockAndUpdate(blockpos, this.defaultBlockState());
                     BlockState blockstate = p_220913_.setValue(AGE, Integer.valueOf(0));
@@ -66,6 +_,8 @@
                 } else {
                     p_220914_.setBlock(p_220915_, p_220913_.setValue(AGE, Integer.valueOf(j + 1)), 4);
                 }
+                net.minecraftforge.common.ForgeHooks.onCropsGrowPost(p_220914_, p_220915_, p_220913_);
+                }
             }
         }
     }
@@ -99,12 +_,12 @@
         }
 
         BlockState blockstate1 = p_51154_.getBlockState(p_51155_.below());
-        return (blockstate1.is(Blocks.CACTUS) || blockstate1.is(BlockTags.SAND)) && !p_51154_.getBlockState(p_51155_.above()).liquid();
+        return blockstate1.canSustainPlant(p_51154_, p_51155_, Direction.UP, this) && !p_51154_.getBlockState(p_51155_.above()).liquid();
     }
 
     @Override
     protected void entityInside(BlockState p_51148_, Level p_51149_, BlockPos p_51150_, Entity p_51151_) {
-        p_51151_.hurt(p_51149_.damageSources().cactus(), 1.0F);
+      p_51151_.hurt(p_51149_.damageSources().cactus().directBlock(p_51149_, p_51150_), 1.0F); // CraftBukkit
     }
 
     @Override
@@ -115,5 +_,15 @@
     @Override
     protected boolean isPathfindable(BlockState p_51143_, PathComputationType p_51146_) {
         return false;
+    }
+
+    @Override
+    public net.minecraftforge.common.PlantType getPlantType(BlockGetter world, BlockPos pos) {
+        return net.minecraftforge.common.PlantType.DESERT;
+    }
+
+    @Override
+    public BlockState getPlant(BlockGetter world, BlockPos pos) {
+        return defaultBlockState();
     }
 }

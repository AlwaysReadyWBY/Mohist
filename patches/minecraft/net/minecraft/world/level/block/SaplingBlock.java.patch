--- a/net/minecraft/world/level/block/SaplingBlock.java
+++ b/net/minecraft/world/level/block/SaplingBlock.java
@@ -13,12 +_,14 @@
 import net.minecraft.world.level.block.state.properties.IntegerProperty;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.TreeType;
 
 public class SaplingBlock extends BushBlock implements BonemealableBlock {
    public static final IntegerProperty f_55973_ = BlockStateProperties.f_61387_;
    protected static final float f_154380_ = 6.0F;
    protected static final VoxelShape f_55974_ = Block.m_49796_(2.0D, 0.0D, 2.0D, 14.0D, 12.0D, 14.0D);
    private final AbstractTreeGrower f_55975_;
+   public static TreeType treeType; // CraftBukkit
 
    public SaplingBlock(AbstractTreeGrower p_55978_, BlockBehaviour.Properties p_55979_) {
       super(p_55979_);
@@ -31,6 +_,7 @@
    }
 
    public void m_213898_(BlockState p_222011_, ServerLevel p_222012_, BlockPos p_222013_, RandomSource p_222014_) {
+      if (!p_222012_.isAreaLoaded(p_222013_, 1)) return; // Forge: prevent loading unloaded chunks when checking neighbor's light
       if (p_222012_.m_46803_(p_222013_.m_7494_()) >= 9 && p_222014_.m_188503_(7) == 0) {
          this.m_222000_(p_222012_, p_222013_, p_222011_, p_222014_);
       }
@@ -41,6 +_,7 @@
       if (p_222003_.m_61143_(f_55973_) == 0) {
          p_222001_.m_7731_(p_222002_, p_222003_.m_61122_(f_55973_), 4);
       } else {
+         if (!net.minecraftforge.event.ForgeEventFactory.saplingGrowTree(p_222001_, p_222004_, p_222002_)) return;
          this.f_55975_.m_213817_(p_222001_, p_222001_.m_7726_().m_8481_(), p_222002_, p_222003_, p_222004_);
       }
 

--- a/net/minecraft/world/level/block/LeverBlock.java
+++ b/net/minecraft/world/level/block/LeverBlock.java
@@ -9,6 +_,7 @@
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.util.RandomSource;
+import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
@@ -26,6 +_,8 @@
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class LeverBlock extends FaceAttachedHorizontalDirectionalBlock {
     public static final MapCodec<LeverBlock> CODEC = simpleCodec(LeverBlock::new);
@@ -99,7 +_,24 @@
 
             return InteractionResult.SUCCESS;
         } else {
-            this.pull(p_54640_, p_54641_, p_54642_, null);
+         // CraftBukkit start - Interact Lever
+         boolean powered = p_54640_.getValue(POWERED); // Old powered state
+         org.bukkit.block.Block block = CraftBlock.at(p_54641_, p_54642_);
+         int old = (powered) ? 15 : 0;
+         int current = (!powered) ? 15 : 0;
+
+         BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(block, old, current);
+         p_54641_.getCraftServer().getPluginManager().callEvent(eventRedstone);
+
+         if ((eventRedstone.getNewCurrent() > 0) != (!powered)) {
+            return InteractionResult.SUCCESS;
+         }
+         // CraftBukkit end
+
+            BlockState blockstate = this.pull(p_54640_, p_54641_, p_54642_);
+            float f = blockstate.getValue(POWERED) ? 0.6F : 0.5F;
+            p_54641_.playSound(null, p_54642_, SoundEvents.LEVER_CLICK, SoundSource.BLOCKS, 0.3F, f);
+            p_54641_.gameEvent(p_54643_, blockstate.getValue(POWERED) ? GameEvent.BLOCK_ACTIVATE : GameEvent.BLOCK_DEACTIVATE, p_54642_);
             return InteractionResult.CONSUME;
         }
     }

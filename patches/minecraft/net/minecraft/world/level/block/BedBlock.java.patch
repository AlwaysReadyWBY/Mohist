--- a/net/minecraft/world/level/block/BedBlock.java
+++ b/net/minecraft/world/level/block/BedBlock.java
@@ -2,7 +_,6 @@
 
 import com.mojang.serialization.MapCodec;
 import com.mojang.serialization.codecs.RecordCodecBuilder;
-import com.mojang.serialization.codecs.RecordCodecBuilder.Instance;
 import java.util.List;
 import java.util.Optional;
 import javax.annotation.Nullable;
@@ -10,6 +_,7 @@
 import net.minecraft.core.Direction;
 import net.minecraft.network.chat.Component;
 import net.minecraft.util.Mth;
+import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
@@ -22,6 +_,7 @@
 import net.minecraft.world.item.context.BlockPlaceContext;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.CollisionGetter;
+import net.minecraft.world.level.ExplosionDamageCalculator;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.entity.BedBlockEntity;
@@ -91,36 +_,64 @@
                 }
             }
 
-            if (!canSetSpawn(p_49516_)) {
-                p_49516_.removeBlock(p_49517_, false);
-                BlockPos blockpos = p_49517_.relative(p_49515_.getValue(FACING).getOpposite());
-                if (p_49516_.getBlockState(blockpos).is(this)) {
-                    p_49516_.removeBlock(blockpos, false);
-                }
-
-                Vec3 vec3 = p_49517_.getCenter();
-                p_49516_.explode(null, p_49516_.damageSources().badRespawnPointExplosion(vec3), null, vec3, 5.0F, true, Level.ExplosionInteraction.BLOCK);
-                return InteractionResult.SUCCESS;
-            } else if (p_49515_.getValue(OCCUPIED)) {
-                if (!this.kickVillagerOutOfBed(p_49516_, p_49517_)) {
-                    p_49518_.displayClientMessage(Component.translatable("block.minecraft.bed.occupied"), true);
-                }
-
-                return InteractionResult.SUCCESS;
-            } else {
-                p_49518_.startSleepInBed(p_49517_).ifLeft(p_49477_ -> {
-                    if (p_49477_.getMessage() != null) {
-                        p_49518_.displayClientMessage(p_49477_.getMessage(), true);
-                    }
-                });
-                return InteractionResult.SUCCESS;
-            }
-        }
-    }
-
-    public static boolean canSetSpawn(Level p_49489_) {
-        return p_49489_.dimensionType().bedWorks();
-    }
+         // CraftBukkit - moved world and biome check into EntityHuman
+         if (false && !canSetSpawn(p_49516_)) {
+            p_49516_.removeBlock(p_49517_, false);
+            BlockPos blockpos = p_49517_.relative(p_49515_.getValue(FACING).getOpposite());
+            if (p_49516_.getBlockState(blockpos).is(this)) {
+               p_49516_.removeBlock(blockpos, false);
+            }
+
+            Vec3 vec3 = p_49517_.getCenter();
+            p_49516_.explode((Entity)null, p_49516_.damageSources().badRespawnPointExplosion(vec3), (ExplosionDamageCalculator)null, vec3, 5.0F, true, Level.ExplosionInteraction.BLOCK);
+            return InteractionResult.SUCCESS;
+         } else if (p_49515_.getValue(OCCUPIED)) {
+            if (!this.kickVillagerOutOfBed(p_49516_, p_49517_)) {
+               p_49518_.displayClientMessage(Component.translatable("block.minecraft.bed.occupied"), true);
+            }
+
+            return InteractionResult.SUCCESS;
+         } else {
+            // CraftBukkit start
+            BlockState finaliblockdata = p_49515_;
+            BlockPos finalblockposition = p_49517_;
+            // CraftBukkit end
+            p_49518_.startSleepInBed(p_49517_).ifLeft((p_49477_) -> {
+               // CraftBukkit start - handling bed explosion from below here
+               if (!p_49516_.dimensionType().bedWorks()) {
+                  this.explodeBed(finaliblockdata, p_49516_, finalblockposition);
+               } else
+                  // CraftBukkit end
+               if (p_49477_.getMessage() != null) {
+                  p_49518_.displayClientMessage(p_49477_.getMessage(), true);
+               }
+
+            });
+            return InteractionResult.SUCCESS;
+         }
+      }
+   }
+
+   // CraftBukkit start
+   private InteractionResult explodeBed(BlockState iblockdata, Level world, BlockPos blockposition) {
+      world.removeBlock(blockposition, false);
+      BlockPos blockposition1 = blockposition.relative((iblockdata.getValue(FACING)).getOpposite());
+
+      if (world.getBlockState(blockposition1).getBlock() == this) {
+         world.removeBlock(blockposition1, false);
+      }
+
+      Vec3 vec3d = blockposition.getCenter();
+
+      world.explode(null, world.damageSources().badRespawnPointExplosion(vec3d), null, vec3d, 5.0F, true, Level.ExplosionInteraction.BLOCK);
+      return InteractionResult.SUCCESS;
+   }
+   // CraftBukkit end
+
+   public static boolean canSetSpawn(Level p_49489_) {
+      // CraftBukkit - moved world and biome check into EntityHuman
+      return true || p_49489_.dimensionType().bedWorks();
+   }
 
     private boolean kickVillagerOutOfBed(Level p_49491_, BlockPos p_49492_) {
         List<Villager> list = p_49491_.getEntitiesOfClass(Villager.class, new AABB(p_49492_), LivingEntity::isSleeping);
@@ -300,6 +_,11 @@
         if (!p_49499_.isClientSide) {
             BlockPos blockpos = p_49500_.relative(p_49501_.getValue(FACING));
             p_49499_.setBlock(blockpos, p_49501_.setValue(PART, BedPart.HEAD), 3);
+         	// CraftBukkit start - SPIGOT-7315: Don't updated if we capture block states
+         	if (p_49499_.captureBlockStates) {
+            	return;
+         	}
+         	// CraftBukkit end
             p_49499_.blockUpdated(p_49500_, Blocks.AIR);
             p_49501_.updateNeighbourShapes(p_49499_, p_49500_, 3);
         }

--- a/net/minecraft/world/level/block/piston/PistonBaseBlock.java
+++ b/net/minecraft/world/level/block/piston/PistonBaseBlock.java
@@ -1,5 +_,6 @@
 package net.minecraft.world.level.block.piston;
 
+import com.google.common.collect.ImmutableList;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.mojang.serialization.Codec;
@@ -16,6 +_,7 @@
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.tags.BlockTags;
 import net.minecraft.world.entity.LivingEntity;
+import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.context.BlockPlaceContext;
 import net.minecraft.world.level.BlockGetter;
@@ -39,6 +_,8 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.event.block.BlockPistonRetractEvent;
 
 public class PistonBaseBlock extends DirectionalBlock {
     public static final MapCodec<PistonBaseBlock> CODEC = RecordCodecBuilder.mapCodec(
@@ -143,6 +_,19 @@
                 i = 2;
             }
 
+         // CraftBukkit start
+         if (!this.isSticky) {
+            org.bukkit.block.Block block = CraftBlock.at(p_60168_, p_60169_);
+            BlockPistonRetractEvent event = new BlockPistonRetractEvent(block, ImmutableList.<org.bukkit.block.Block>of(), CraftBlock.notchToBlockFace(direction));
+            p_60168_.getCraftServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+               return;
+            }
+         }
+         // PAIL: checkME - what happened to setTypeAndData?
+         // CraftBukkit end
+
             p_60168_.blockEvent(p_60169_, this, i, direction.get3DDataValue());
         }
     }
@@ -186,6 +_,7 @@
         }
 
         if (p_60195_ == 0) {
+            if (net.minecraftforge.event.ForgeEventFactory.onPistonMovePre(p_60193_, p_60194_, direction, true)) return false;
             if (!this.moveBlocks(p_60193_, p_60194_, direction, true)) {
                 return false;
             }
@@ -194,6 +_,7 @@
             p_60193_.playSound(null, p_60194_, SoundEvents.PISTON_EXTEND, SoundSource.BLOCKS, 0.5F, p_60193_.random.nextFloat() * 0.25F + 0.6F);
             p_60193_.gameEvent(GameEvent.BLOCK_ACTIVATE, p_60194_, GameEvent.Context.of(blockstate));
         } else if (p_60195_ == 1 || p_60195_ == 2) {
+            if (net.minecraftforge.event.ForgeEventFactory.onPistonMovePre(p_60193_, p_60194_, direction, false)) return false;
             BlockEntity blockentity = p_60193_.getBlockEntity(p_60194_.relative(direction));
             if (blockentity instanceof PistonMovingBlockEntity) {
                 ((PistonMovingBlockEntity)blockentity).finalTick();
@@ -241,6 +_,7 @@
             p_60193_.gameEvent(GameEvent.BLOCK_DEACTIVATE, p_60194_, GameEvent.Context.of(blockstate1));
         }
 
+        net.minecraftforge.event.ForgeEventFactory.onPistonMovePost(p_60193_, p_60194_, direction, (p_60195_ == 0));
         return true;
     }
 
@@ -380,6 +_,11 @@
     @Override
     protected BlockState rotate(BlockState p_60215_, Rotation p_60216_) {
         return p_60215_.setValue(FACING, p_60216_.rotate(p_60215_.getValue(FACING)));
+    }
+
+    @Override
+    public BlockState rotate(BlockState state, net.minecraft.world.level.LevelAccessor world, BlockPos pos, Rotation direction) {
+        return state.getValue(EXTENDED) ? state : super.rotate(state, world, pos, direction);
     }
 
     @Override

--- a/net/minecraft/world/level/block/SignBlock.java
+++ b/net/minecraft/world/level/block/SignBlock.java
@@ -3,6 +_,7 @@
 import com.mojang.serialization.MapCodec;
 import java.util.Arrays;
 import java.util.UUID;
+import java.util.concurrent.atomic.AtomicReference;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
@@ -36,6 +_,7 @@
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.event.player.PlayerSignOpenEvent;
 
 public abstract class SignBlock extends BaseEntityBlock implements SimpleWaterloggedBlock {
    public static final BooleanProperty WATERLOGGED = BlockStateProperties.WATERLOGGED;
@@ -103,6 +_,7 @@
             } else if (flag) {
                return InteractionResult.SUCCESS;
             } else if (!this.otherPlayerIsEditingSign(p_56281_, signblockentity) && p_56281_.mayBuild() && this.hasEditableText(p_56281_, signblockentity, flag2)) {
+               openTextEditcause.set(PlayerSignOpenEvent.Cause.INTERACT); // CraftBukkit
                this.openTextEdit(p_56281_, signblockentity, flag2);
                return this.getInteractionResult(flag1);
             } else {
@@ -152,11 +_,20 @@
       return woodtype;
    }
 
+   public AtomicReference<PlayerSignOpenEvent.Cause> openTextEditcause = new AtomicReference<>(PlayerSignOpenEvent.Cause.UNKNOWN);
    public void openTextEdit(Player p_277738_, SignBlockEntity p_277467_, boolean p_277771_) {
+      if (!org.bukkit.craftbukkit.v1_20_R4.event.CraftEventFactory.callPlayerSignOpenEvent(p_277738_, p_277467_, p_277771_, openTextEditcause.getAndSet(PlayerSignOpenEvent.Cause.UNKNOWN))) {
+         return;
+      }
       p_277467_.setAllowedPlayerEditor(p_277738_.getUUID());
       p_277738_.openTextEdit(p_277467_, p_277771_);
    }
 
+   public void openTextEdit(Player entityhuman, SignBlockEntity tileentitysign, boolean flag, org.bukkit.event.player.PlayerSignOpenEvent.Cause cause) {
+      openTextEditcause.set(cause);
+      openTextEdit(entityhuman, tileentitysign, flag);
+   }
+
    private boolean otherPlayerIsEditingSign(Player p_277952_, SignBlockEntity p_277599_) {
       UUID uuid = p_277599_.getPlayerWhoMayEdit();
       return uuid != null && !uuid.equals(p_277952_.getUUID());
@@ -164,6 +_,6 @@
 
    @Nullable
    public <T extends BlockEntity> BlockEntityTicker<T> getTicker(Level p_277367_, BlockState p_277896_, BlockEntityType<T> p_277724_) {
-      return createTickerHelper(p_277724_, BlockEntityType.SIGN, SignBlockEntity::tick);
+      return null; // Craftbukkit - remove unnecessary sign ticking
    }
 }

--- a/net/minecraft/world/level/block/SignBlock.java
+++ b/net/minecraft/world/level/block/SignBlock.java
@@ -2,6 +_,7 @@
 
 import java.util.Arrays;
 import java.util.UUID;
+import java.util.concurrent.atomic.AtomicReference;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
@@ -36,6 +_,7 @@
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.event.player.PlayerSignOpenEvent;
 
 public abstract class SignBlock extends BaseEntityBlock implements SimpleWaterloggedBlock {
    public static final BooleanProperty WATERLOGGED = BlockStateProperties.WATERLOGGED;
@@ -89,7 +_,7 @@
             boolean flag = signblockentity.executeClickCommandsIfPresent(p_56281_, p_56279_, p_56280_, flag2);
             if (signblockentity.isWaxed()) {
                p_56279_.playSound((Player)null, signblockentity.getBlockPos(), SoundEvents.WAXED_SIGN_INTERACT_FAIL, SoundSource.BLOCKS);
-               return this.getInteractionResult(flag1);
+               return InteractionResult.PASS;
             } else if (flag1 && !this.otherPlayerIsEditingSign(p_56281_, signblockentity) && signapplicator.canApplyToSign(signtext, p_56281_) && signapplicator.tryApplyToSign(p_56279_, signblockentity, flag2, p_56281_)) {
                if (!p_56281_.isCreative()) {
                   itemstack.shrink(1);
@@ -101,8 +_,9 @@
             } else if (flag) {
                return InteractionResult.SUCCESS;
             } else if (!this.otherPlayerIsEditingSign(p_56281_, signblockentity) && p_56281_.mayBuild() && this.hasEditableText(p_56281_, signblockentity, flag2)) {
+               openTextEditcause.set(PlayerSignOpenEvent.Cause.INTERACT); // CraftBukkit
                this.openTextEdit(p_56281_, signblockentity, flag2);
-               return this.getInteractionResult(flag1);
+               return InteractionResult.SUCCESS;
             } else {
                return InteractionResult.PASS;
             }
@@ -150,9 +_,18 @@
       return woodtype;
    }
 
+   public AtomicReference<PlayerSignOpenEvent.Cause> openTextEditcause = new AtomicReference<>(PlayerSignOpenEvent.Cause.UNKNOWN);
    public void openTextEdit(Player p_277738_, SignBlockEntity p_277467_, boolean p_277771_) {
+      if (!org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callPlayerSignOpenEvent(p_277738_, p_277467_, p_277771_, openTextEditcause.getAndSet(PlayerSignOpenEvent.Cause.UNKNOWN))) {
+         return;
+      }
       p_277467_.setAllowedPlayerEditor(p_277738_.getUUID());
       p_277738_.openTextEdit(p_277467_, p_277771_);
+   }
+
+   public void openTextEdit(Player entityhuman, SignBlockEntity tileentitysign, boolean flag, org.bukkit.event.player.PlayerSignOpenEvent.Cause cause) {
+      openTextEditcause.set(cause);
+      openTextEdit(entityhuman, tileentitysign, flag);
    }
 
    private boolean otherPlayerIsEditingSign(Player p_277952_, SignBlockEntity p_277599_) {

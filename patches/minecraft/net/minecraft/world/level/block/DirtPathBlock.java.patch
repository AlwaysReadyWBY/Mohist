--- a/net/minecraft/world/level/block/DirtPathBlock.java
+++ b/net/minecraft/world/level/block/DirtPathBlock.java
@@ -5,6 +_,7 @@
 import net.minecraft.core.Direction;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.util.RandomSource;
+import net.minecraft.world.entity.Entity;
 import net.minecraft.world.item.context.BlockPlaceContext;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.LevelAccessor;
@@ -16,59 +_,52 @@
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class DirtPathBlock extends Block {
-    public static final MapCodec<DirtPathBlock> CODEC = simpleCodec(DirtPathBlock::new);
-    protected static final VoxelShape SHAPE = FarmBlock.SHAPE;
-
-    @Override
-    public MapCodec<DirtPathBlock> codec() {
-        return CODEC;
-    }
-
-    public DirtPathBlock(BlockBehaviour.Properties p_153129_) {
-        super(p_153129_);
-    }
-
-    @Override
-    protected boolean useShapeForLightOcclusion(BlockState p_153159_) {
-        return true;
-    }
-
-    @Override
-    public BlockState getStateForPlacement(BlockPlaceContext p_153131_) {
-        return !this.defaultBlockState().canSurvive(p_153131_.getLevel(), p_153131_.getClickedPos())
-            ? Block.pushEntitiesUp(this.defaultBlockState(), Blocks.DIRT.defaultBlockState(), p_153131_.getLevel(), p_153131_.getClickedPos())
-            : super.getStateForPlacement(p_153131_);
-    }
-
-    @Override
-    protected BlockState updateShape(
-        BlockState p_153152_, Direction p_153153_, BlockState p_153154_, LevelAccessor p_153155_, BlockPos p_153156_, BlockPos p_153157_
-    ) {
-        if (p_153153_ == Direction.UP && !p_153152_.canSurvive(p_153155_, p_153156_)) {
-            p_153155_.scheduleTick(p_153156_, this, 1);
-        }
-
-        return super.updateShape(p_153152_, p_153153_, p_153154_, p_153155_, p_153156_, p_153157_);
-    }
-
-    @Override
-    protected void tick(BlockState p_221070_, ServerLevel p_221071_, BlockPos p_221072_, RandomSource p_221073_) {
-        FarmBlock.turnToDirt(null, p_221070_, p_221071_, p_221072_);
-    }
-
-    @Override
-    protected boolean canSurvive(BlockState p_153148_, LevelReader p_153149_, BlockPos p_153150_) {
-        BlockState blockstate = p_153149_.getBlockState(p_153150_.above());
-        return !blockstate.isSolid() || blockstate.getBlock() instanceof FenceGateBlock;
-    }
-
-    @Override
-    protected VoxelShape getShape(BlockState p_153143_, BlockGetter p_153144_, BlockPos p_153145_, CollisionContext p_153146_) {
-        return SHAPE;
-    }
-
-    @Override
-    protected boolean isPathfindable(BlockState p_153138_, PathComputationType p_153141_) {
-        return false;
-    }
+   public static final MapCodec<DirtPathBlock> CODEC = simpleCodec(DirtPathBlock::new);
+   protected static final VoxelShape SHAPE = FarmBlock.SHAPE;
+
+   public MapCodec<DirtPathBlock> codec() {
+      return CODEC;
+   }
+
+   public DirtPathBlock(BlockBehaviour.Properties p_153129_) {
+      super(p_153129_);
+   }
+
+   public boolean useShapeForLightOcclusion(BlockState p_153159_) {
+      return true;
+   }
+
+   public BlockState getStateForPlacement(BlockPlaceContext p_153131_) {
+      return !this.defaultBlockState().canSurvive(p_153131_.getLevel(), p_153131_.getClickedPos()) ? Block.pushEntitiesUp(this.defaultBlockState(), Blocks.DIRT.defaultBlockState(), p_153131_.getLevel(), p_153131_.getClickedPos()) : super.getStateForPlacement(p_153131_);
+   }
+
+   public BlockState updateShape(BlockState p_153152_, Direction p_153153_, BlockState p_153154_, LevelAccessor p_153155_, BlockPos p_153156_, BlockPos p_153157_) {
+      if (p_153153_ == Direction.UP && !p_153152_.canSurvive(p_153155_, p_153156_)) {
+         p_153155_.scheduleTick(p_153156_, this, 1);
+      }
+
+      return super.updateShape(p_153152_, p_153153_, p_153154_, p_153155_, p_153156_, p_153157_);
+   }
+
+   public void tick(BlockState p_221070_, ServerLevel p_221071_, BlockPos p_221072_, RandomSource p_221073_) {
+      // CraftBukkit start - do not fade if the block is valid here
+      if (p_221070_.canSurvive(p_221071_, p_221072_)) {
+         return;
+      }
+      // CraftBukkit end
+      FarmBlock.turnToDirt((Entity)null, p_221070_, p_221071_, p_221072_);
+   }
+
+   public boolean canSurvive(BlockState p_153148_, LevelReader p_153149_, BlockPos p_153150_) {
+      BlockState blockstate = p_153149_.getBlockState(p_153150_.above());
+      return !blockstate.isSolid() || blockstate.getBlock() instanceof FenceGateBlock;
+   }
+
+   public VoxelShape getShape(BlockState p_153143_, BlockGetter p_153144_, BlockPos p_153145_, CollisionContext p_153146_) {
+      return SHAPE;
+   }
+
+   public boolean isPathfindable(BlockState p_153138_, BlockGetter p_153139_, BlockPos p_153140_, PathComputationType p_153141_) {
+      return false;
+   }
 }

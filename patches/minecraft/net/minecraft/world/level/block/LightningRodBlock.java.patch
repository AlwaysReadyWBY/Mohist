--- a/net/minecraft/world/level/block/LightningRodBlock.java
+++ b/net/minecraft/world/level/block/LightningRodBlock.java
@@ -20,6 +_,10 @@
 import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.level.material.FluidState;
 import net.minecraft.world.level.material.Fluids;
+import net.minecraft.world.phys.BlockHitResult;
+import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class LightningRodBlock extends RodBlock implements SimpleWaterloggedBlock {
     public static final MapCodec<LightningRodBlock> CODEC = simpleCodec(LightningRodBlock::new);
@@ -74,7 +_,19 @@
         return p_153748_.getValue(POWERED) && p_153748_.getValue(FACING) == p_153751_ ? 15 : 0;
     }
 
-    public void onLightningStrike(BlockState p_153761_, Level p_153762_, BlockPos p_153763_) {
+   public void onLightningStrike(BlockState p_153761_, Level p_153762_, BlockPos p_153763_) {
+      // CraftBukkit start
+      boolean powered = p_153761_.getValue(LightningRodBlock.POWERED);
+      int old = (powered) ? 15 : 0;
+      int current = (!powered) ? 15 : 0;
+
+      BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(CraftBlock.at(p_153762_, p_153763_), old, current);
+      p_153762_.getCraftServer().getPluginManager().callEvent(eventRedstone);
+
+      if (eventRedstone.getNewCurrent() <= 0) {
+         return;
+      }
+      // CraftBukkit end
         p_153762_.setBlock(p_153763_, p_153761_.setValue(POWERED, Boolean.valueOf(true)), 3);
         this.updateNeighbours(p_153761_, p_153762_, p_153763_);
         p_153762_.scheduleTick(p_153763_, this, 8);

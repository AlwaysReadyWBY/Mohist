--- a/net/minecraft/world/level/block/FlowerPotBlock.java
+++ b/net/minecraft/world/level/block/FlowerPotBlock.java
@@ -1,12 +_,9 @@
 package net.minecraft.world.level.block;
 
 import com.google.common.collect.Maps;
-import com.mojang.serialization.MapCodec;
-import com.mojang.serialization.codecs.RecordCodecBuilder;
 import java.util.Map;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
-import net.minecraft.core.registries.BuiltInRegistries;
 import net.minecraft.stats.Stats;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
@@ -17,7 +_,6 @@
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
-import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.gameevent.GameEvent;
@@ -41,10 +_,33 @@
       return CODEC;
    }
 
+   @Deprecated // Mods should use the constructor below
    public FlowerPotBlock(Block p_53528_, BlockBehaviour.Properties p_53529_) {
-      super(p_53529_);
-      this.potted = p_53528_;
-      POTTED_BY_CONTENT.put(p_53528_, this);
+       this(Blocks.FLOWER_POT == null ? null : () -> (FlowerPotBlock) net.minecraftforge.registries.ForgeRegistries.BLOCKS.getDelegateOrThrow(Blocks.FLOWER_POT).get(), () -> net.minecraftforge.registries.ForgeRegistries.BLOCKS.getDelegateOrThrow(p_53528_).get(), p_53529_);
+       if (Blocks.FLOWER_POT != null) {
+           ((FlowerPotBlock)Blocks.FLOWER_POT).addPlant(net.minecraftforge.registries.ForgeRegistries.BLOCKS.getKey(p_53528_), () -> this);
+       }
+   }
+
+   /**
+    * For mod use, eliminates the need to extend this class, and prevents modded
+    * flower pots from altering vanilla behavior.
+    *
+    * @param emptyPot    The empty pot for this pot, or null for self.
+    * @param p_53528_ The flower block.
+    * @param properties
+    */
+   public FlowerPotBlock(@org.jetbrains.annotations.Nullable java.util.function.Supplier<FlowerPotBlock> emptyPot, java.util.function.Supplier<? extends Block> p_53528_, BlockBehaviour.Properties properties) {
+      super(properties);
+      this.content = null; // Unused, redirected by coremod
+      this.flowerDelegate = p_53528_;
+      if (emptyPot == null) {
+         this.fullPots = Maps.newHashMap();
+         this.emptyPot = null;
+      } else {
+         this.fullPots = java.util.Collections.emptyMap();
+         this.emptyPot = emptyPot;
+      }
    }
 
    public VoxelShape getShape(BlockState p_53556_, BlockGetter p_53557_, BlockPos p_53558_, CollisionContext p_53559_) {
@@ -58,7 +_,7 @@
    public InteractionResult use(BlockState p_53540_, Level p_53541_, BlockPos p_53542_, Player p_53543_, InteractionHand p_53544_, BlockHitResult p_53545_) {
       ItemStack itemstack = p_53543_.getItemInHand(p_53544_);
       Item item = itemstack.getItem();
-      BlockState blockstate = (item instanceof BlockItem ? POTTED_BY_CONTENT.getOrDefault(((BlockItem)item).getBlock(), Blocks.AIR) : Blocks.AIR).defaultBlockState();
+      BlockState blockstate = (item instanceof BlockItem ? getEmptyPot().fullPots.getOrDefault(net.minecraftforge.registries.ForgeRegistries.BLOCKS.getKey(((BlockItem)item).getBlock()), net.minecraftforge.registries.ForgeRegistries.BLOCKS.getDelegateOrThrow(Blocks.AIR)).get() : Blocks.AIR).defaultBlockState();
       boolean flag = blockstate.is(Blocks.AIR);
       boolean flag1 = this.isEmpty();
       if (flag != flag1) {
@@ -105,4 +_,25 @@
    public boolean isPathfindable(BlockState p_53535_, BlockGetter p_53536_, BlockPos p_53537_, PathComputationType p_53538_) {
       return false;
    }
+
+   //Forge Start
+   private final Map<net.minecraft.resources.ResourceLocation, java.util.function.Supplier<? extends Block>> fullPots;
+   private final java.util.function.Supplier<FlowerPotBlock> emptyPot;
+   private final java.util.function.Supplier<? extends Block> flowerDelegate;
+
+   public FlowerPotBlock getEmptyPot() {
+       return emptyPot == null ? this : emptyPot.get();
+   }
+
+   public void addPlant(net.minecraft.resources.ResourceLocation flower, java.util.function.Supplier<? extends Block> fullPot) {
+       if (getEmptyPot() != this) {
+           throw new IllegalArgumentException("Cannot add plant to non-empty pot: " + this);
+       }
+       fullPots.put(flower, fullPot);
+   }
+
+   public Map<net.minecraft.resources.ResourceLocation, java.util.function.Supplier<? extends Block>> getFullPotsView() {
+      return java.util.Collections.unmodifiableMap(fullPots);
+   }
+   //Forge End
 }

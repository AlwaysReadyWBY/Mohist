--- a/net/minecraft/world/level/block/entity/DispenserBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/DispenserBlockEntity.java
@@ -1,5 +_,6 @@
 package net.minecraft.world.level.block.entity;
 
+import java.util.List;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.HolderLookup;
 import net.minecraft.core.NonNullList;
@@ -8,14 +_,47 @@
 import net.minecraft.util.RandomSource;
 import net.minecraft.world.ContainerHelper;
 import net.minecraft.world.entity.player.Inventory;
+import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.inventory.AbstractContainerMenu;
 import net.minecraft.world.inventory.DispenserMenu;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.block.state.BlockState;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
 
 public class DispenserBlockEntity extends RandomizableContainerBlockEntity {
-    public static final int CONTAINER_SIZE = 9;
-    private NonNullList<ItemStack> items = NonNullList.withSize(9, ItemStack.EMPTY);
+   public static final int CONTAINER_SIZE = 9;
+   private NonNullList<ItemStack> items = NonNullList.withSize(9, ItemStack.EMPTY);
+
+   // CraftBukkit start - add fields and methods
+   public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+   private int maxStack = MAX_STACK;
+
+   public List<ItemStack> getContents() {
+      return this.items;
+   }
+
+   public void onOpen(CraftHumanEntity who) {
+      transaction.add(who);
+   }
+
+   public void onClose(CraftHumanEntity who) {
+      transaction.remove(who);
+   }
+
+   public List<HumanEntity> getViewers() {
+      return transaction;
+   }
+
+   @Override
+   public int getMaxStackSize() {
+      return maxStack;
+   }
+
+   public void setMaxStackSize(int size) {
+      maxStack = size;
+   }
+   // CraftBukkit end
 
     protected DispenserBlockEntity(BlockEntityType<?> p_155489_, BlockPos p_155490_, BlockState p_155491_) {
         super(p_155489_, p_155490_, p_155491_);
@@ -44,29 +_,15 @@
         return i;
     }
 
-    public ItemStack insertItem(ItemStack p_345441_) {
-        int i = this.getMaxStackSize(p_345441_);
-
-        for (int j = 0; j < this.items.size(); j++) {
-            ItemStack itemstack = this.items.get(j);
-            if (itemstack.isEmpty() || ItemStack.isSameItemSameComponents(p_345441_, itemstack)) {
-                int k = Math.min(p_345441_.getCount(), i - itemstack.getCount());
-                if (k > 0) {
-                    if (itemstack.isEmpty()) {
-                        this.setItem(j, p_345441_.split(k));
-                    } else {
-                        p_345441_.shrink(k);
-                        itemstack.grow(k);
-                    }
-                }
-
-                if (p_345441_.isEmpty()) {
-                    break;
-                }
+    public int addItem(ItemStack p_59238_) {
+        for (int i = 0; i < this.items.size(); i++) {
+            if (this.items.get(i).isEmpty()) {
+                this.setItem(i, p_59238_);
+                return i;
             }
         }
 
-        return p_345441_;
+        return -1;
     }
 
     @Override

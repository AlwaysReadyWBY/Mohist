--- a/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
@@ -14,8 +_,11 @@
 import net.minecraft.util.Mth;
 import net.minecraft.util.RandomSource;
 import net.minecraft.world.Clearable;
+import net.minecraft.world.Container;
 import net.minecraft.world.ContainerHelper;
 import net.minecraft.world.Containers;
+import net.minecraft.world.SimpleContainer;
+import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.component.ItemContainerContents;
@@ -28,6 +_,11 @@
 import net.minecraft.world.level.block.CampfireBlock;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.gameevent.GameEvent;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockCookEvent;
+import org.bukkit.event.block.CampfireStartEvent;
+import org.bukkit.inventory.CampfireRecipe;
 
 public class CampfireBlockEntity extends BlockEntity implements Clearable {
     private static final int BURN_COOL_SPEED = 2;
@@ -56,6 +_,20 @@
                         .map(p_341839_ -> p_341839_.value().assemble(singlerecipeinput, p_155307_.registryAccess()))
                         .orElse(itemstack);
                     if (itemstack1.isItemEnabled(p_155307_.enabledFeatures())) {
+                  		// CraftBukkit start - fire BlockCookEvent
+                  		CraftItemStack source = CraftItemStack.asCraftMirror(itemstack);
+                  		org.bukkit.inventory.ItemStack result = CraftItemStack.asBukkitCopy(itemstack1);
+
+                  		BlockCookEvent blockCookEvent = new BlockCookEvent(CraftBlock.at(p_155307_, p_155308_), source, result);
+                  		p_155307_.getCraftServer().getPluginManager().callEvent(blockCookEvent);
+
+                  		if (blockCookEvent.isCancelled()) {
+                     		return;
+                  		}
+
+                  		result = blockCookEvent.getResult();
+                  		itemstack1 = CraftItemStack.asNMSCopy(result);
+                  		// CraftBukkit end
                         Containers.dropItemStack(p_155307_, (double)p_155308_.getX(), (double)p_155308_.getY(), (double)p_155308_.getZ(), itemstack1);
                         p_155310_.items.set(i, ItemStack.EMPTY);
                         p_155307_.sendBlockUpdated(p_155308_, p_155309_, p_155309_, 3);
@@ -165,7 +_,11 @@
         for (int i = 0; i < this.items.size(); i++) {
             ItemStack itemstack = this.items.get(i);
             if (itemstack.isEmpty()) {
-                this.cookingTime[i] = p_238287_;
+            	// CraftBukkit start
+            	CampfireStartEvent event = new CampfireStartEvent(CraftBlock.at(this.level,this.worldPosition), CraftItemStack.asCraftMirror(p_238286_), (CampfireRecipe) getCookableRecipe(p_238286_).get().toBukkitRecipe());
+            	this.level.getCraftServer().getPluginManager().callEvent(event);
+            	this.cookingTime[i] = event.getTotalCookTime(); // i -> event.getTotalCookTime()
+            	// CraftBukkit end
                 this.cookingProgress[i] = 0;
                 this.items.set(i, p_238286_.consumeAndReturn(1, p_344627_));
                 this.level.gameEvent(GameEvent.BLOCK_CHANGE, this.getBlockPos(), GameEvent.Context.of(p_344627_, this.getBlockState()));

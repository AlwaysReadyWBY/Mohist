--- a/net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerData.java
+++ b/net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerData.java
@@ -1,7 +_,6 @@
 package net.minecraft.world.level.block.entity.trialspawner;
 
 import com.google.common.collect.Sets;
-import com.mojang.datafixers.util.Pair;
 import com.mojang.serialization.Codec;
 import com.mojang.serialization.MapCodec;
 import com.mojang.serialization.codecs.RecordCodecBuilder;
@@ -17,7 +_,6 @@
 import javax.annotation.Nullable;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
-import net.minecraft.core.Holder;
 import net.minecraft.core.UUIDUtil;
 import net.minecraft.core.registries.BuiltInRegistries;
 import net.minecraft.core.registries.Registries;
@@ -29,12 +_,10 @@
 import net.minecraft.util.RandomSource;
 import net.minecraft.util.random.SimpleWeightedRandomList;
 import net.minecraft.util.random.WeightedEntry;
-import net.minecraft.world.effect.MobEffect;
 import net.minecraft.world.effect.MobEffectInstance;
 import net.minecraft.world.effect.MobEffects;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
-import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.Level;
@@ -102,7 +_,6 @@
         this.nextMobSpawnsAt = 0L;
         this.cooldownEndsAt = 0L;
         this.currentMobs.clear();
-        this.nextSpawnData = Optional.empty();
     }
 
     public boolean hasMobToSpawn(TrialSpawner p_328530_, RandomSource p_333493_) {
@@ -135,24 +_,27 @@
         if (!flag) {
             if (!p_331326_.getState().equals(TrialSpawnerState.COOLDOWN) || !p_331326_.isOminous()) {
                 List<UUID> list = p_331326_.getPlayerDetector().detect(p_313049_, p_331326_.getEntitySelector(), p_310981_, (double)p_331326_.getRequiredPlayerRange(), true);
-                boolean flag1;
-                if (!p_331326_.isOminous() && !list.isEmpty()) {
-                    Optional<Pair<Player, Holder<MobEffect>>> optional = findPlayerWithOminousEffect(p_313049_, list);
-                    optional.ifPresent(p_341867_ -> {
-                        Player player = p_341867_.getFirst();
-                        if (p_341867_.getSecond() == MobEffects.BAD_OMEN) {
-                            transformBadOmenIntoTrialOmen(player);
+                Player player = null;
+
+                for (UUID uuid : list) {
+                    Player player1 = p_313049_.getPlayerByUUID(uuid);
+                    if (player1 != null) {
+                        if (player1.hasEffect(MobEffects.BAD_OMEN)) {
+                            this.transformBadOmenIntoTrialOmen(player1, player1.getEffect(MobEffects.BAD_OMEN));
+                            player = player1;
+                        } else if (player1.hasEffect(MobEffects.TRIAL_OMEN)) {
+                            player = player1;
                         }
+                    }
+                }
 
+                boolean flag1 = !p_331326_.isOminous() && player != null;
+                if (!p_331326_.getState().equals(TrialSpawnerState.COOLDOWN) || flag1) {
+                    if (flag1) {
                         p_313049_.levelEvent(3020, BlockPos.containing(player.getEyePosition()), 0);
                         p_331326_.applyOminous(p_313049_, p_310981_);
-                    });
-                    flag1 = optional.isPresent();
-                } else {
-                    flag1 = false;
-                }
+                    }
 
-                if (!p_331326_.getState().equals(TrialSpawnerState.COOLDOWN) || flag1) {
                     boolean flag2 = p_331326_.getData().detectedPlayers.isEmpty();
                     List<UUID> list1 = flag2
                         ? list
@@ -169,35 +_,11 @@
         }
     }
 
-    private static Optional<Pair<Player, Holder<MobEffect>>> findPlayerWithOminousEffect(ServerLevel p_342909_, List<UUID> p_343949_) {
-        Player player = null;
-
-        for (UUID uuid : p_343949_) {
-            Player player1 = p_342909_.getPlayerByUUID(uuid);
-            if (player1 != null) {
-                Holder<MobEffect> holder = MobEffects.TRIAL_OMEN;
-                if (player1.hasEffect(holder)) {
-                    return Optional.of(Pair.of(player1, holder));
-                }
-
-                if (player1.hasEffect(MobEffects.BAD_OMEN)) {
-                    player = player1;
-                }
-            }
-        }
-
-        return Optional.ofNullable(player).map(p_341863_ -> Pair.of(p_341863_, MobEffects.BAD_OMEN));
-    }
-
     public void resetAfterBecomingOminous(TrialSpawner p_330837_, ServerLevel p_328172_) {
-        this.currentMobs.stream().map(p_328172_::getEntity).forEach(p_341869_ -> {
-            if (p_341869_ != null) {
-                p_328172_.levelEvent(3012, p_341869_.blockPosition(), TrialSpawner.FlameParticle.NORMAL.encode());
-                if (p_341869_ instanceof Mob mob) {
-                    mob.dropPreservedEquipment();
-                }
-
-                p_341869_.remove(Entity.RemovalReason.DISCARDED);
+        this.currentMobs.stream().map(p_328172_::getEntity).forEach(p_327368_ -> {
+            if (p_327368_ != null) {
+                p_328172_.levelEvent(3012, p_327368_.blockPosition(), TrialSpawner.FlameParticle.NORMAL.encode());
+                p_327368_.remove(Entity.RemovalReason.DISCARDED);
             }
         });
         if (!p_330837_.getOminousConfig().spawnPotentialsDefinition().isEmpty()) {
@@ -211,14 +_,11 @@
         this.cooldownEndsAt = p_328172_.getGameTime() + p_330837_.getOminousConfig().ticksBetweenItemSpawners();
     }
 
-    private static void transformBadOmenIntoTrialOmen(Player p_327801_) {
-        MobEffectInstance mobeffectinstance = p_327801_.getEffect(MobEffects.BAD_OMEN);
-        if (mobeffectinstance != null) {
-            int i = mobeffectinstance.getAmplifier() + 1;
-            int j = 18000 * i;
-            p_327801_.removeEffect(MobEffects.BAD_OMEN);
-            p_327801_.addEffect(new MobEffectInstance(MobEffects.TRIAL_OMEN, j, 0));
-        }
+    private void transformBadOmenIntoTrialOmen(Player p_327801_, MobEffectInstance p_329932_) {
+        int i = p_329932_.getAmplifier() + 1;
+        int j = 18000 * i;
+        p_327801_.removeEffect(MobEffects.BAD_OMEN);
+        p_327801_.addEffect(new MobEffectInstance(MobEffects.TRIAL_OMEN, j, 0));
     }
 
     public boolean isReadyToOpenShutter(ServerLevel p_311936_, float p_312381_, int p_334019_) {
@@ -255,9 +_,7 @@
 
     @Nullable
     public Entity getOrCreateDisplayEntity(TrialSpawner p_310895_, Level p_310374_, TrialSpawnerState p_310556_) {
-        if (!p_310556_.hasSpinningMob()) {
-            return null;
-        } else {
+        if (p_310895_.canSpawnInLevel(p_310374_) && p_310556_.hasSpinningMob()) {
             if (this.displayEntity == null) {
                 CompoundTag compoundtag = this.getOrCreateNextSpawnData(p_310895_, p_310374_.getRandom()).getEntityToSpawn();
                 if (compoundtag.contains("id", 8)) {
@@ -266,6 +_,8 @@
             }
 
             return this.displayEntity;
+        } else {
+            return null;
         }
     }
 

--- a/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java
@@ -30,6 +_,8 @@
 import net.minecraft.world.level.material.PushReaction;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.v1_20_R4.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
 
 public class ShulkerBoxBlockEntity extends RandomizableContainerBlockEntity implements WorldlyContainer {
    public static final int COLUMNS = 9;
@@ -49,6 +_,42 @@
    @Nullable
    private final DyeColor color;
 
+   // CraftBukkit start - add fields and methods
+   public List<HumanEntity> transaction = new java.util.ArrayList<>();
+   private int maxStack = MAX_STACK;
+   public boolean opened;
+
+   @Override
+   public int getMaxStackSize() {
+      return maxStack;
+   }
+
+   @Override
+   public List<ItemStack> getContents() {
+      return itemStacks;
+   }
+
+   @Override
+   public void onOpen(CraftHumanEntity who) {
+      this.transaction.add(who);
+   }
+
+   @Override
+   public void onClose(CraftHumanEntity who) {
+      this.transaction.remove(who);
+   }
+
+   @Override
+   public List<HumanEntity> getViewers() {
+      return this.transaction;
+   }
+
+   @Override
+   public void setMaxStackSize(int size) {
+      this.maxStack = size;
+   }
+   // CraftBukkit end
+
    public ShulkerBoxBlockEntity(@Nullable DyeColor p_155666_, BlockPos p_155667_, BlockState p_155668_) {
       super(BlockEntityType.SHULKER_BOX, p_155667_, p_155668_);
       this.color = p_155666_;
@@ -134,10 +_,12 @@
          this.openCount = p_59679_;
          if (p_59679_ == 0) {
             this.animationStatus = ShulkerBoxBlockEntity.AnimationStatus.CLOSING;
+            doNeighborUpdates(this.getLevel(), this.worldPosition, this.getBlockState());
          }
 
          if (p_59679_ == 1) {
             this.animationStatus = ShulkerBoxBlockEntity.AnimationStatus.OPENING;
+            doNeighborUpdates(this.getLevel(), this.worldPosition, this.getBlockState());
          }
 
          return true;
@@ -158,6 +_,7 @@
          }
 
          ++this.openCount;
+         if (opened) return; // CraftBukkit - only animate if the ShulkerBox hasn't been forced open already by an API call.
          this.level.blockEvent(this.worldPosition, this.getBlockState().getBlock(), 1, this.openCount);
          if (this.openCount == 1) {
             this.level.gameEvent(p_59692_, GameEvent.CONTAINER_OPEN, this.worldPosition);
@@ -170,6 +_,7 @@
    public void stopOpen(Player p_59688_) {
       if (!this.remove && !p_59688_.isSpectator()) {
          --this.openCount;
+         if (opened) return; // CraftBukkit - only animate if the ShulkerBox hasn't been forced open already by an API call.
          this.level.blockEvent(this.worldPosition, this.getBlockState().getBlock(), 1, this.openCount);
          if (this.openCount <= 0) {
             this.level.gameEvent(p_59688_, GameEvent.CONTAINER_CLOSE, this.worldPosition);
@@ -217,7 +_,7 @@
    }
 
    public boolean canPlaceItemThroughFace(int p_59663_, ItemStack p_59664_, @Nullable Direction p_59665_) {
-      return !(Block.byItem(p_59664_.getItem()) instanceof ShulkerBoxBlock);
+      return !(Block.byItem(p_59664_.getItem()) instanceof ShulkerBoxBlock) && p_59664_.getItem().canFitInsideContainerItems(); // FORGE: Make shulker boxes respect Item#canFitInsideContainerItems
    }
 
    public boolean canTakeItemThroughFace(int p_59682_, ItemStack p_59683_, Direction p_59684_) {
@@ -239,6 +_,11 @@
 
    public boolean isClosed() {
       return this.animationStatus == ShulkerBoxBlockEntity.AnimationStatus.CLOSED;
+   }
+
+   @Override
+   protected net.minecraftforge.items.IItemHandler createUnSidedHandler() {
+      return new net.minecraftforge.items.wrapper.SidedInvWrapper(this, Direction.UP);
    }
 
    public static enum AnimationStatus {

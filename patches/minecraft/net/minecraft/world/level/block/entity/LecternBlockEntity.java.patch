--- a/net/minecraft/world/level/block/entity/LecternBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/LecternBlockEntity.java
@@ -1,5 +_,8 @@
 package net.minecraft.world.level.block.entity;
 
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
 import javax.annotation.Nullable;
 import net.minecraft.commands.CommandSource;
 import net.minecraft.commands.CommandSourceStack;
@@ -13,6 +_,7 @@
 import net.minecraft.world.Clearable;
 import net.minecraft.world.Container;
 import net.minecraft.world.MenuProvider;
+import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.player.Inventory;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.inventory.AbstractContainerMenu;
@@ -27,13 +_,21 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec2;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.command.CraftBlockCommandSender;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.util.CraftLocation;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.inventory.InventoryHolder;
 
-public class LecternBlockEntity extends BlockEntity implements Clearable, MenuProvider {
+public class LecternBlockEntity extends BlockEntity implements Clearable, MenuProvider, CommandSource {
     public static final int DATA_PAGE = 0;
     public static final int NUM_DATA = 1;
     public static final int SLOT_BOOK = 0;
     public static final int NUM_SLOTS = 1;
-    private final Container bookAccess = new Container() {
+    private final Container bookAccess = new LecternInventory();
+
+    public class LecternInventory implements Container {
         @Override
         public int getContainerSize() {
             return 1;
@@ -75,10 +_,16 @@
             }
         }
 
-        @Override
-        public void setItem(int p_59585_, ItemStack p_59586_) {
-        }
-
+      // CraftBukkit start
+      public void setItem(int p_59585_, ItemStack p_59586_) {
+         if (p_59585_ == 0) {
+            LecternBlockEntity.this.setBook(p_59586_);
+            if (LecternBlockEntity.this.getLevel() != null) {
+               LecternBlock.resetBookState(null, LecternBlockEntity.this.getLevel(), LecternBlockEntity.this.getBlockPos(), LecternBlockEntity.this.getBlockState(), LecternBlockEntity.this.hasBook());
+            }
+         }
+      }
+      // CraftBukkit end
         @Override
         public int getMaxStackSize() {
             return 1;
@@ -99,9 +_,51 @@
             return false;
         }
 
-        @Override
-        public void clearContent() {
-        }
+      public List<HumanEntity> transaction = new ArrayList<>();
+      private int maxStack = 1;
+
+      @Override
+      public List<ItemStack> getContents() {
+         return Arrays.asList(book);
+      }
+
+      @Override
+      public void onOpen(CraftHumanEntity who) {
+         transaction.add(who);
+      }
+
+      @Override
+      public void onClose(CraftHumanEntity who) {
+         transaction.remove(who);
+      }
+
+      @Override
+      public List<HumanEntity> getViewers() {
+         return transaction;
+      }
+
+      @Override
+      public InventoryHolder getOwner() {
+         return (org.bukkit.block.Lectern) LecternBlockEntity.this.getOwner();
+      }
+
+      @Override
+      public void setMaxStackSize(int size) {
+         maxStack = size;
+      }
+
+      @Override
+      public Location getLocation() {
+         if (level == null) return null;
+         return CraftLocation.toBukkit(worldPosition, level.getWorld());
+      }
+
+      public void clearContent() {
+      }
+
+      public LecternBlockEntity getLectern() {
+         return LecternBlockEntity.this;
+      }
     };
     private final ContainerData dataAccess = new ContainerData() {
         @Override
@@ -231,8 +_,8 @@
 
     @Override
     public AbstractContainerMenu createMenu(int p_59562_, Inventory p_59563_, Player p_59564_) {
-        return new LecternMenu(p_59562_, this.bookAccess, this.dataAccess);
-    }
+      return new LecternMenu(p_59562_, this.bookAccess, this.dataAccess, p_59563_); // CraftBukkit
+   }
 
     @Override
     public Component getDisplayName() {
@@ -248,4 +_,30 @@
             return writablebookcontent != null ? writablebookcontent.pages().size() : 0;
         }
     }
+
+   // CraftBukkit start
+   @Override
+   public void sendSystemMessage(Component ichatbasecomponent) {
+   }
+
+   @Override
+   public org.bukkit.command.CommandSender getBukkitSender(CommandSourceStack wrapper) {
+      return wrapper.getEntity() != null ? wrapper.getEntity().getBukkitSender(wrapper) : new CraftBlockCommandSender(wrapper, this);
+   }
+
+   @Override
+   public boolean acceptsSuccess() {
+      return false;
+   }
+
+   @Override
+   public boolean acceptsFailure() {
+      return false;
+   }
+
+   @Override
+   public boolean shouldInformAdmins() {
+      return false;
+   }
+   // CraftBukkit end
 }

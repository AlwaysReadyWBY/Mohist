--- a/net/minecraft/world/level/block/entity/vault/VaultBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/vault/VaultBlockEntity.java
@@ -22,7 +_,6 @@
 import net.minecraft.network.protocol.game.ClientboundBlockEntityDataPacket;
 import net.minecraft.resources.ResourceKey;
 import net.minecraft.server.level.ServerLevel;
-import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.stats.Stats;
@@ -282,14 +_,17 @@
             VaultState vaultstate = p_331301_.getValue(VaultBlock.STATE);
             if (canEjectReward(p_333877_, vaultstate)) {
                 if (!isValidToInsert(p_333877_, p_329896_)) {
-                    playInsertFailSound(p_330813_, p_334388_, p_333223_, SoundEvents.VAULT_INSERT_ITEM_FAIL);
+                    playInsertFailSound(p_330813_, p_334388_, p_333223_);
                 } else if (p_334388_.hasRewardedPlayer(p_332764_)) {
-                    playInsertFailSound(p_330813_, p_334388_, p_333223_, SoundEvents.VAULT_REJECT_REWARDED_PLAYER);
+                    playInsertFailSound(p_330813_, p_334388_, p_333223_);
                 } else {
                     List<ItemStack> list = resolveItemsToEject(p_330813_, p_333877_, p_333223_, p_332764_);
                     if (!list.isEmpty()) {
                         p_332764_.awardStat(Stats.ITEM_USED.get(p_329896_.getItem()));
-                        p_329896_.consume(p_333877_.keyItem().getCount(), p_332764_);
+                        if (!p_332764_.isCreative()) {
+                            p_329896_.shrink(p_333877_.keyItem().getCount());
+                        }
+
                         unlock(p_330813_, p_331301_, p_333223_, p_333877_, p_334388_, p_330336_, list);
                         p_334388_.addToRewardedPlayers(p_332764_);
                         p_330336_.updateConnectedPlayersWithinRange(p_330813_, p_333223_, p_334388_, p_333877_, p_333877_.deactivationRange());
@@ -321,7 +_,7 @@
             LootParams lootparams = new LootParams.Builder(p_329309_)
                 .withParameter(LootContextParams.ORIGIN, Vec3.atCenterOf(p_331772_))
                 .create(LootContextParamSets.VAULT);
-            List<ItemStack> list = loottable.getRandomItems(lootparams, p_329309_.getRandom());
+            List<ItemStack> list = loottable.getRandomItems(lootparams);
             return list.isEmpty() ? ItemStack.EMPTY : Util.getRandom(list, p_329309_.getRandom());
         }
 
@@ -362,9 +_,9 @@
             return p_334702_ % 20L == 0L && p_332761_ == VaultState.ACTIVE;
         }
 
-        private static void playInsertFailSound(ServerLevel p_334677_, VaultServerData p_330421_, BlockPos p_330460_, SoundEvent p_342956_) {
+        private static void playInsertFailSound(ServerLevel p_334677_, VaultServerData p_330421_, BlockPos p_330460_) {
             if (p_334677_.getGameTime() >= p_330421_.getLastInsertFailTimestamp() + 15L) {
-                p_334677_.playSound(null, p_330460_, p_342956_, SoundSource.BLOCKS);
+                p_334677_.playSound(null, p_330460_, SoundEvents.VAULT_INSERT_ITEM_FAIL, SoundSource.BLOCKS);
                 p_330421_.setLastInsertFailTimestamp(p_334677_.getGameTime());
             }
         }

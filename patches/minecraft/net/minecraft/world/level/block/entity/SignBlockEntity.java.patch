--- a/net/minecraft/world/level/block/entity/SignBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/SignBlockEntity.java
@@ -3,6 +_,7 @@
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
 import com.mojang.logging.LogUtils;
 import java.util.List;
+import java.util.Objects;
 import java.util.UUID;
 import java.util.function.UnaryOperator;
 import javax.annotation.Nullable;
@@ -17,6 +_,7 @@
 import net.minecraft.network.chat.Style;
 import net.minecraft.network.protocol.game.ClientboundBlockEntityDataPacket;
 import net.minecraft.server.level.ServerLevel;
+import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.server.network.FilteredText;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
@@ -29,14 +_,18 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec2;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.block.sign.Side;
+import org.bukkit.craftbukkit.v1_20_R3.block.CraftBlock;
+import org.bukkit.craftbukkit.v1_20_R3.util.CraftChatMessage;
+import org.bukkit.event.block.SignChangeEvent;
 import org.slf4j.Logger;
 
-public class SignBlockEntity extends BlockEntity {
+public class SignBlockEntity extends BlockEntity implements CommandSource { // CraftBukkit - implements
    private static final Logger LOGGER = LogUtils.getLogger();
    private static final int MAX_TEXT_LINE_WIDTH = 90;
    private static final int TEXT_LINE_HEIGHT = 10;
    @Nullable
-   private UUID playerWhoMayEdit;
+   public UUID playerWhoMayEdit;
    private SignText frontText = this.createDefaultSignText();
    private SignText backText = this.createDefaultSignText();
    private boolean isWaxed;
@@ -140,12 +_,13 @@
    public void updateSignText(Player p_278048_, boolean p_278103_, List<FilteredText> p_277990_) {
       if (!this.isWaxed() && p_278048_.getUUID().equals(this.getPlayerWhoMayEdit()) && this.level != null) {
          this.updateText((p_277776_) -> {
-            return this.setMessages(p_278048_, p_277990_, p_277776_);
+            return this.setMessages(p_278048_, p_277990_, p_277776_, p_278103_); // CraftBukkit
          }, p_278103_);
          this.setAllowedPlayerEditor((UUID)null);
          this.level.sendBlockUpdated(this.getBlockPos(), this.getBlockState(), this.getBlockState(), 3);
       } else {
          LOGGER.warn("Player {} just tried to change non-editable sign", (Object)p_278048_.getName().getString());
+         ((ServerPlayer) p_278048_).connection.send(this.getUpdatePacket()); // CraftBukkit
       }
    }
 
@@ -154,18 +_,42 @@
       return this.setText(p_277877_.apply(signtext), p_277426_);
    }
 
-   private SignText setMessages(Player p_277396_, List<FilteredText> p_277744_, SignText p_277359_) {
-      for(int i = 0; i < p_277744_.size(); ++i) {
-         FilteredText filteredtext = p_277744_.get(i);
-         Style style = p_277359_.getMessage(i, p_277396_.isTextFilteringEnabled()).getStyle();
-         if (p_277396_.isTextFilteringEnabled()) {
-            p_277359_ = p_277359_.setMessage(i, Component.literal(filteredtext.filteredOrEmpty()).setStyle(style));
+   private SignText setMessages(Player pPlayer, List<FilteredText> pFilteredText, SignText pText, boolean front) { // CraftBukkit
+      SignText originalText = pText; // CraftBukkit
+      for(int i = 0; i < pFilteredText.size(); ++i) {
+         FilteredText filteredtext = pFilteredText.get(i);
+         Style style = pText.getMessage(i, pPlayer.isTextFilteringEnabled()).getStyle();
+         if (pPlayer.isTextFilteringEnabled()) {
+            pText = pText.setMessage(i, Component.literal(filteredtext.filteredOrEmpty()).setStyle(style));
          } else {
-            p_277359_ = p_277359_.setMessage(i, Component.literal(filteredtext.raw()).setStyle(style), Component.literal(filteredtext.filteredOrEmpty()).setStyle(style));
-         }
-      }
-
-      return p_277359_;
+            pText = pText.setMessage(i, Component.literal(filteredtext.raw()).setStyle(style), Component.literal(filteredtext.filteredOrEmpty()).setStyle(style));
+         }
+      }
+
+      // CraftBukkit start
+      org.bukkit.entity.Player player = ((ServerPlayer) pPlayer).getBukkitEntity();
+      String[] lines = new String[4];
+
+      for (int i = 0; i < pFilteredText.size(); ++i) {
+         lines[i] = CraftChatMessage.fromComponent(pText.getMessage(i, pPlayer.isTextFilteringEnabled()));
+      }
+
+      SignChangeEvent event = new SignChangeEvent(CraftBlock.at(this.level, this.worldPosition), player, lines.clone(), (front) ? Side.FRONT : Side.BACK);
+      pPlayer.level().getCraftServer().getPluginManager().callEvent(event);
+
+      if (event.isCancelled()) {
+         return originalText;
+      }
+
+      Component[] components = org.bukkit.craftbukkit.v1_20_R3.block.CraftSign.sanitizeLines(event.getLines());
+      for (int i = 0; i < components.length; i++) {
+         if (!Objects.equals(lines[i], event.getLine(i))) {
+            pText = pText.setMessage(i, components[i]);
+         }
+      }
+      // CraftBukkit end
+
+      return pText;
    }
 
    public boolean setText(SignText p_277733_, boolean p_277720_) {
@@ -211,6 +_,29 @@
       return flag;
    }
 
+   // CraftBukkit start
+   @Override
+   public void sendSystemMessage(Component ichatbasecomponent) {}
+
+   @Override
+   public org.bukkit.command.CommandSender getBukkitSender(CommandSourceStack wrapper) {
+      return wrapper.getEntity() != null ? wrapper.getEntity().getBukkitSender(wrapper) : new org.bukkit.craftbukkit.v1_20_R3.command.CraftBlockCommandSender(wrapper, this);
+   }
+
+   @Override
+   public boolean acceptsSuccess() {
+      return false;
+   }
+
+   @Override
+   public boolean acceptsFailure() {
+      return false;
+   }
+
+   @Override
+   public boolean shouldInformAdmins() {
+      return false;
+   }
    private static CommandSourceStack createCommandSourceStack(@Nullable Player p_279428_, Level p_279359_, BlockPos p_279430_) {
       String s = p_279428_ == null ? "Sign" : p_279428_.getName().getString();
       Component component = (Component)(p_279428_ == null ? Component.literal("Sign") : p_279428_.getDisplayName());
@@ -235,12 +_,17 @@
 
    @Nullable
    public UUID getPlayerWhoMayEdit() {
+      // CraftBukkit start - unnecessary sign ticking removed, so do this lazily
+      if (this.level != null && this.playerWhoMayEdit != null) {
+         clearInvalidPlayerWhoMayEdit(this, this.level, this.playerWhoMayEdit);
+      }
+      // CraftBukkit end
       return this.playerWhoMayEdit;
    }
 
    private void markUpdated() {
       this.setChanged();
-      this.level.sendBlockUpdated(this.getBlockPos(), this.getBlockState(), this.getBlockState(), 3);
+      if (this.level != null) this.level.sendBlockUpdated(this.getBlockPos(), this.getBlockState(), this.getBlockState(), 3); // CraftBukkit - skip notify if world is null (SPIGOT-5122)
    }
 
    public boolean isWaxed() {

--- a/net/minecraft/world/level/block/ComposterBlock.java
+++ b/net/minecraft/world/level/block/ComposterBlock.java
@@ -1,5 +_,6 @@
 package net.minecraft.world.level.block;
 
+import com.google.common.util.concurrent.AtomicDouble;
 import it.unimi.dsi.fastutil.objects.Object2FloatMap;
 import it.unimi.dsi.fastutil.objects.Object2FloatOpenHashMap;
 import javax.annotation.Nullable;
@@ -39,6 +_,9 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_20_R2.inventory.CraftBlockInventoryHolder;
+import org.bukkit.craftbukkit.v1_20_R2.util.DummyGeneratorAccess;
 
 public class ComposterBlock extends Block implements WorldlyContainerHolder {
    public static final int READY = 8;
@@ -236,7 +_,15 @@
    public static BlockState insertItem(Entity p_270919_, BlockState p_270087_, ServerLevel p_270284_, ItemStack p_270253_, BlockPos p_270678_) {
       int i = p_270087_.getValue(LEVEL);
       if (i < 7 && COMPOSTABLES.containsKey(p_270253_.getItem())) {
-         BlockState blockstate = addItem(p_270919_, p_270087_, p_270284_, p_270678_, p_270253_);
+         // CraftBukkit start
+         double rand = p_270284_.getRandom().nextDouble();
+         BlockState blockstate = addItem(p_270919_, p_270087_, DummyGeneratorAccess.INSTANCE, p_270678_, p_270253_, rand);
+         if (p_270087_ == blockstate || !CraftEventFactory.callEntityChangeBlockEvent(p_270919_, p_270678_, blockstate)) {
+            return p_270087_;
+         }
+         blockstate = addItem(p_270919_, p_270087_, p_270284_, p_270678_, p_270253_, rand);
+         // CraftBukkit end
+
          p_270253_.shrink(1);
          return blockstate;
       } else {
@@ -245,6 +_,14 @@
    }
 
    public static BlockState extractProduce(Entity p_270467_, BlockState p_51999_, Level p_52000_, BlockPos p_52001_) {
+      // CraftBukkit start
+      if (p_270467_ != null && !(p_270467_ instanceof Player)) {
+         BlockState iblockdata1 = empty(p_270467_, p_51999_, DummyGeneratorAccess.INSTANCE, p_52001_);
+         if (!CraftEventFactory.callEntityChangeBlockEvent(p_270467_, p_52001_, iblockdata1)) {
+            return p_51999_;
+         }
+      }
+      // CraftBukkit end
       if (!p_52000_.isClientSide) {
          Vec3 vec3 = Vec3.atLowerCornerWithOffset(p_52001_, 0.5D, 1.01D, 0.5D).offsetRandom(p_52000_.random, 0.7F);
          ItemEntity itementity = new ItemEntity(p_52000_, vec3.x(), vec3.y(), vec3.z(), new ItemStack(Items.BONE_MEAL));
@@ -264,10 +_,15 @@
       return blockstate;
    }
 
+   // Mohist start
+   static AtomicDouble bukkitRand = new AtomicDouble(-114514);
    static BlockState addItem(@Nullable Entity p_270464_, BlockState p_270603_, LevelAccessor p_270151_, BlockPos p_270547_, ItemStack p_270354_) {
       int i = p_270603_.getValue(LEVEL);
       float f = COMPOSTABLES.getFloat(p_270354_.getItem());
-      if ((i != 0 || !(f > 0.0F)) && !(p_270151_.getRandom().nextDouble() < (double)f)) {
+      if (bukkitRand.get() == -114514) {
+         bukkitRand.set(p_270151_.getRandom().nextDouble());
+      }
+      if ((i != 0 || !(f > 0.0F)) && !(bukkitRand.getAndSet(-114514) < (double)f)) {
          return p_270603_;
       } else {
          int j = i + 1;
@@ -282,6 +_,12 @@
       }
    }
 
+   static BlockState addItem(@Nullable Entity pEntity, BlockState pState, LevelAccessor pLevel, BlockPos pPos, ItemStack pStack, double rand) {
+      bukkitRand.set(rand);
+      return addItem(pEntity, pState, pLevel, pPos, pStack);
+   }
+   // Mohist end
+
    public void tick(BlockState p_221015_, ServerLevel p_221016_, BlockPos p_221017_, RandomSource p_221018_) {
       if (p_221015_.getValue(LEVEL) == 7) {
          p_221016_.setBlock(p_221017_, p_221015_.cycle(LEVEL), 3);
@@ -311,13 +_,14 @@
       if (i == 8) {
          return new ComposterBlock.OutputContainer(p_51956_, p_51957_, p_51958_, new ItemStack(Items.BONE_MEAL));
       } else {
-         return (WorldlyContainer)(i < 7 ? new ComposterBlock.InputContainer(p_51956_, p_51957_, p_51958_) : new ComposterBlock.EmptyContainer());
+         return (WorldlyContainer)(i < 7 ? new ComposterBlock.InputContainer(p_51956_, p_51957_, p_51958_) : new ComposterBlock.EmptyContainer(p_51957_, p_51958_));
       }
    }
 
-   static class EmptyContainer extends SimpleContainer implements WorldlyContainer {
-      public EmptyContainer() {
+   public static class EmptyContainer extends SimpleContainer implements WorldlyContainer {
+      public EmptyContainer(LevelAccessor levelAccessor, BlockPos blockPos) { // Mohist TODO
          super(0);
+         this.bukkitOwner = new CraftBlockInventoryHolder(levelAccessor, blockPos, this); // CraftBukkit
       }
 
       public int[] getSlotsForFace(Direction p_52012_) {
@@ -333,7 +_,7 @@
       }
    }
 
-   static class InputContainer extends SimpleContainer implements WorldlyContainer {
+   public static class InputContainer extends SimpleContainer implements WorldlyContainer {
       private final BlockState state;
       private final LevelAccessor level;
       private final BlockPos pos;
@@ -341,6 +_,7 @@
 
       public InputContainer(BlockState p_52022_, LevelAccessor p_52023_, BlockPos p_52024_) {
          super(1);
+         this.bukkitOwner = new CraftBlockInventoryHolder(p_52023_, p_52024_, this); // CraftBukkit
          this.state = p_52022_;
          this.level = p_52023_;
          this.pos = p_52024_;
@@ -374,7 +_,7 @@
       }
    }
 
-   static class OutputContainer extends SimpleContainer implements WorldlyContainer {
+   public static class OutputContainer extends SimpleContainer implements WorldlyContainer {
       private final BlockState state;
       private final LevelAccessor level;
       private final BlockPos pos;
@@ -404,8 +_,15 @@
       }
 
       public void setChanged() {
-         ComposterBlock.empty((Entity)null, this.state, this.level, this.pos);
-         this.changed = true;
+         // CraftBukkit start - allow putting items back (eg cancelled InventoryMoveItemEvent)
+         if (this.isEmpty()) {
+            ComposterBlock.empty((Entity) null, this.state, this.level, this.pos);
+            this.changed = true;
+         } else {
+            this.level.setBlock(this.pos, this.state, 3);
+            this.changed = false;
+         }
+         // CraftBukkit end
       }
    }
 }

--- a/net/minecraft/world/level/block/PointedDripstoneBlock.java
+++ b/net/minecraft/world/level/block/PointedDripstoneBlock.java
@@ -3,6 +_,7 @@
 import com.google.common.annotations.VisibleForTesting;
 import com.mojang.serialization.MapCodec;
 import java.util.Optional;
+import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.BiPredicate;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
@@ -42,6 +_,7 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class PointedDripstoneBlock extends Block implements Fallable, SimpleWaterloggedBlock {
    public static final MapCodec<PointedDripstoneBlock> CODEC = simpleCodec(PointedDripstoneBlock::new);
@@ -123,6 +_,11 @@
       if (!p_154042_.isClientSide) {
          BlockPos blockpos = p_154044_.getBlockPos();
          if (p_154045_.mayInteract(p_154042_, blockpos) && p_154045_.mayBreak(p_154042_) && p_154045_ instanceof ThrownTrident && p_154045_.getDeltaMovement().length() > 0.6D) {
+         	// CraftBukkit start
+         	if (!CraftEventFactory.callEntityChangeBlockEvent(p_154045_, blockpos, Blocks.AIR.defaultBlockState())) {
+            	return;
+         	}
+         	// CraftBukkit end
             p_154042_.destroyBlock(blockpos, true);
          }
 
@@ -131,7 +_,7 @@
 
    public void fallOn(Level p_154047_, BlockState p_154048_, BlockPos p_154049_, Entity p_154050_, float p_154051_) {
       if (p_154048_.getValue(TIP_DIRECTION) == Direction.UP && p_154048_.getValue(THICKNESS) == DripstoneThickness.TIP) {
-         p_154050_.causeFallDamage(p_154051_ + 2.0F, 2.0F, p_154047_.damageSources().stalagmite());
+         p_154050_.causeFallDamage(p_154051_ + 2.0F, 2.0F, p_154047_.damageSources().stalagmite().directBlock(p_154047_, p_154049_)); // CraftBukkit
       } else {
          super.fallOn(p_154047_, p_154048_, p_154049_, p_154050_, p_154051_);
       }
@@ -341,12 +_,14 @@
 
    }
 
+   private static AtomicReference<BlockPos> sourcePos = new AtomicReference<>();
    private static void grow(ServerLevel p_154036_, BlockPos p_154037_, Direction p_154038_) {
       BlockPos blockpos = p_154037_.relative(p_154038_);
       BlockState blockstate = p_154036_.getBlockState(blockpos);
       if (isUnmergedTipWithDirection(blockstate, p_154038_.getOpposite())) {
          createMergedTips(blockstate, p_154036_, blockpos);
       } else if (blockstate.isAir() || blockstate.is(Blocks.WATER)) {
+         sourcePos.set(p_154037_);
          createDripstone(p_154036_, blockpos, p_154038_, DripstoneThickness.TIP);
       }
 
@@ -354,7 +_,7 @@
 
    private static void createDripstone(LevelAccessor p_154088_, BlockPos p_154089_, Direction p_154090_, DripstoneThickness p_154091_) {
       BlockState blockstate = Blocks.POINTED_DRIPSTONE.defaultBlockState().setValue(TIP_DIRECTION, p_154090_).setValue(THICKNESS, p_154091_).setValue(WATERLOGGED, Boolean.valueOf(p_154088_.getFluidState(p_154089_).getType() == Fluids.WATER));
-      p_154088_.setBlock(p_154089_, blockstate, 3);
+      org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockSpreadEvent(p_154088_, sourcePos.getAndSet(null), p_154089_, blockstate, 3); // CraftBukkit
    }
 
    private static void createMergedTips(BlockState p_154231_, LevelAccessor p_154232_, BlockPos p_154233_) {
@@ -367,8 +_,9 @@
          blockpos = p_154233_;
          blockpos1 = p_154233_.below();
       }
-
+      sourcePos.set(p_154233_);
       createDripstone(p_154232_, blockpos, Direction.DOWN, DripstoneThickness.TIP_MERGE);
+      sourcePos.set(p_154233_);
       createDripstone(p_154232_, blockpos1, Direction.UP, DripstoneThickness.TIP_MERGE);
    }
 

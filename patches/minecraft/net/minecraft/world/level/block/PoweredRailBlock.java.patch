--- a/net/minecraft/world/level/block/PoweredRailBlock.java
+++ b/net/minecraft/world/level/block/PoweredRailBlock.java
@@ -11,11 +_,13 @@
 import net.minecraft.world.level.block.state.properties.EnumProperty;
 import net.minecraft.world.level.block.state.properties.Property;
 import net.minecraft.world.level.block.state.properties.RailShape;
+import org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory;
 
 public class PoweredRailBlock extends BaseRailBlock {
    public static final MapCodec<PoweredRailBlock> CODEC = simpleCodec(PoweredRailBlock::new);
    public static final EnumProperty<RailShape> SHAPE = BlockStateProperties.RAIL_SHAPE_STRAIGHT;
    public static final BooleanProperty POWERED = BlockStateProperties.POWERED;
+   private final boolean isActivator;  // TRUE for an Activator Rail, FALSE for Powered Rail
 
    public MapCodec<PoweredRailBlock> codec() {
       return CODEC;
@@ -34,7 +_,7 @@
          int j = p_55221_.getY();
          int k = p_55221_.getZ();
          boolean flag = true;
-         RailShape railshape = p_55222_.getValue(SHAPE);
+         RailShape railshape = p_55222_.getValue(getShapeProperty());
          switch (railshape) {
             case NORTH_SOUTH:
                if (p_55223_) {
@@ -129,6 +_,13 @@
       boolean flag = p_55232_.getValue(POWERED);
       boolean flag1 = p_55233_.hasNeighborSignal(p_55234_) || this.findPoweredRailSignal(p_55233_, p_55234_, p_55232_, true, 0) || this.findPoweredRailSignal(p_55233_, p_55234_, p_55232_, false, 0);
       if (flag1 != flag) {
+         // CraftBukkit start
+         int power = flag ? 15 : 0;
+         int newPower = CraftEventFactory.callRedstoneChange(p_55233_, p_55234_, power, 15 - power).getNewCurrent();
+         if (newPower == power) {
+            return;
+         }
+         // CraftBukkit end
          p_55233_.setBlock(p_55234_, p_55232_.setValue(POWERED, Boolean.valueOf(flag1)), 3);
          p_55233_.updateNeighborsAt(p_55234_.below(), this);
          if (p_55232_.getValue(SHAPE).isAscending()) {
@@ -162,6 +_,9 @@
                   return p_55240_.setValue(SHAPE, RailShape.SOUTH_EAST);
                case NORTH_EAST:
                   return p_55240_.setValue(SHAPE, RailShape.SOUTH_WEST);
+               case NORTH_SOUTH: //Forge fix: MC-196102
+               case EAST_WEST:
+                  return p_55240_;
             }
          case COUNTERCLOCKWISE_90:
             switch ((RailShape)p_55240_.getValue(SHAPE)) {
@@ -259,6 +_,10 @@
    }
 
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> p_55243_) {
-      p_55243_.add(SHAPE, POWERED, WATERLOGGED);
+      p_55243_.add(getShapeProperty(), POWERED, WATERLOGGED);
+   }
+
+   public boolean isActivatorRail() {
+      return isActivator;
    }
 }

--- a/net/minecraft/world/level/block/SculkVeinBlock.java
+++ b/net/minecraft/world/level/block/SculkVeinBlock.java
@@ -2,6 +_,7 @@
 
 import com.mojang.serialization.MapCodec;
 import java.util.Collection;
+import java.util.concurrent.atomic.AtomicReference;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.sounds.SoundEvents;
@@ -10,6 +_,7 @@
 import net.minecraft.tags.TagKey;
 import net.minecraft.util.Mth;
 import net.minecraft.util.RandomSource;
+import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.item.context.BlockPlaceContext;
 import net.minecraft.world.level.BlockGetter;
@@ -91,16 +_,21 @@
         }
     }
 
-    @Override
-    public int attemptUseCharge(
-        SculkSpreader.ChargeCursor p_222369_, LevelAccessor p_222370_, BlockPos p_222371_, RandomSource p_222372_, SculkSpreader p_222373_, boolean p_222374_
-    ) {
-        if (p_222374_ && this.attemptPlaceSculk(p_222373_, p_222370_, p_222369_.getPos(), p_222372_)) {
-            return p_222369_.getCharge() - 1;
-        } else {
-            return p_222372_.nextInt(p_222373_.chargeDecayRate()) == 0 ? Mth.floor((float)p_222369_.getCharge() * 0.5F) : p_222369_.getCharge();
-        }
-    }
+   // Mohist start
+   public AtomicReference<BlockPos> sourceBlock = new AtomicReference<>();
+   public int attemptUseCharge(SculkSpreader.ChargeCursor p_222369_, LevelAccessor p_222370_, BlockPos p_222371_, RandomSource p_222372_, SculkSpreader p_222373_, boolean p_222374_) {
+      this.sourceBlock.set(p_222371_);
+      if (p_222374_ && this.attemptPlaceSculk(p_222373_, p_222370_, p_222369_.getPos(), p_222372_)) {
+         return p_222369_.getCharge() - 1;
+      } else {
+         return p_222372_.nextInt(p_222373_.chargeDecayRate()) == 0 ? Mth.floor((float)p_222369_.getCharge() * 0.5F) : p_222369_.getCharge();
+      }
+   }
+
+   private boolean attemptPlaceSculk(SculkSpreader pSpreader, LevelAccessor pLevel, BlockPos pPos, RandomSource pRandom, BlockPos sourceBlock0) {
+      this.sourceBlock.set(sourceBlock0);
+      return attemptPlaceSculk(pSpreader, pLevel, pPos, pRandom);
+   }
 
     private boolean attemptPlaceSculk(SculkSpreader p_222376_, LevelAccessor p_222377_, BlockPos p_222378_, RandomSource p_222379_) {
         BlockState blockstate = p_222377_.getBlockState(p_222378_);
@@ -112,7 +_,12 @@
                 BlockState blockstate1 = p_222377_.getBlockState(blockpos);
                 if (blockstate1.is(tagkey)) {
                     BlockState blockstate2 = Blocks.SCULK.defaultBlockState();
-                    p_222377_.setBlock(blockpos, blockstate2, 3);
+               		// CraftBukkit start - Call BlockSpreadEvent
+               		if (!org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockSpreadEvent(p_222377_, this.sourceBlock.getAndSet(null), blockpos, blockstate2, 3)) {
+                  		return false;
+               		}
+               		// CraftBukkit end
+               		// Mohist end
                     Block.pushEntitiesUp(blockstate1, blockstate2, p_222377_, blockpos);
                     p_222377_.playSound(null, blockpos, SoundEvents.SCULK_BLOCK_SPREAD, SoundSource.BLOCKS, 1.0F, 1.0F);
                     this.veinSpreader.spreadAll(blockstate2, p_222377_, blockpos, p_222376_.isWorldGeneration());

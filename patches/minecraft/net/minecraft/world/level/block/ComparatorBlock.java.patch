--- a/net/minecraft/world/level/block/ComparatorBlock.java
+++ b/net/minecraft/world/level/block/ComparatorBlock.java
@@ -9,6 +_,7 @@
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.util.RandomSource;
+import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.entity.decoration.ItemFrame;
 import net.minecraft.world.entity.player.Player;
@@ -26,6 +_,7 @@
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.ticks.TickPriority;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class ComparatorBlock extends DiodeBlock implements EntityBlock {
     public static final MapCodec<ComparatorBlock> CODEC = simpleCodec(ComparatorBlock::new);
@@ -167,8 +_,18 @@
             boolean flag1 = this.shouldTurnOn(p_51908_, p_51909_, p_51910_);
             boolean flag = p_51910_.getValue(POWERED);
             if (flag && !flag1) {
+            // CraftBukkit start
+            if (CraftEventFactory.callRedstoneChange(p_51908_, p_51909_, 15, 0).getNewCurrent() != 0) {
+               return;
+            }
+            // CraftBukkit end
                 p_51908_.setBlock(p_51909_, p_51910_.setValue(POWERED, Boolean.valueOf(false)), 2);
             } else if (!flag && flag1) {
+            // CraftBukkit start
+            if (CraftEventFactory.callRedstoneChange(p_51908_, p_51909_, 0, 15).getNewCurrent() != 15) {
+               return;
+            }
+            // CraftBukkit end
                 p_51908_.setBlock(p_51909_, p_51910_.setValue(POWERED, Boolean.valueOf(true)), 2);
             }
 
@@ -196,5 +_,17 @@
     @Override
     protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> p_51887_) {
         p_51887_.add(FACING, MODE, POWERED);
+    }
+
+    @Override
+    public boolean getWeakChanges(BlockState state, net.minecraft.world.level.LevelReader world, BlockPos pos) {
+       return state.is(Blocks.COMPARATOR);
+    }
+
+    @Override
+    public void onNeighborChange(BlockState state, net.minecraft.world.level.LevelReader world, BlockPos pos, BlockPos neighbor) {
+       if (pos.getY() == neighbor.getY() && world instanceof Level level) {
+           level.neighborChanged(state, pos, world.getBlockState(neighbor).getBlock(), neighbor, false);
+       }
     }
 }

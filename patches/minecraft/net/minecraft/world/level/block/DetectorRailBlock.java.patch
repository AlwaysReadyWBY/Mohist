--- a/net/minecraft/world/level/block/DetectorRailBlock.java
+++ b/net/minecraft/world/level/block/DetectorRailBlock.java
@@ -24,6 +_,8 @@
 import net.minecraft.world.level.block.state.properties.Property;
 import net.minecraft.world.level.block.state.properties.RailShape;
 import net.minecraft.world.phys.AABB;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class DetectorRailBlock extends BaseRailBlock {
     public static final MapCodec<DetectorRailBlock> CODEC = simpleCodec(DetectorRailBlock::new);
@@ -38,6 +_,10 @@
 
     public DetectorRailBlock(BlockBehaviour.Properties p_52431_) {
         super(true, p_52431_);
+        this.registerDefaultState();
+    }
+
+    protected void registerDefaultState() {
         this.registerDefaultState(
             this.stateDefinition
                 .any()
@@ -91,6 +_,17 @@
                 flag1 = true;
             }
 
+         // CraftBukkit start
+         if (flag != flag1) {
+            org.bukkit.block.Block block = CraftBlock.at(p_52433_, p_52434_);
+
+            BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(block, flag ? 15 : 0, flag1 ? 15 : 0);
+            p_52433_.getCraftServer().getPluginManager().callEvent(eventRedstone);
+
+            flag1 = eventRedstone.getNewCurrent() > 0;
+         }
+         // CraftBukkit end
+
             if (flag1 && !flag) {
                 BlockState blockstate = p_52435_.setValue(POWERED, Boolean.valueOf(true));
                 p_52433_.setBlock(p_52434_, blockstate, 3);
@@ -152,7 +_,10 @@
                 return list.get(0).getCommandBlock().getSuccessCount();
             }
 
-            List<AbstractMinecart> list1 = this.getInteractingMinecartOfType(p_52455_, p_52456_, AbstractMinecart.class, EntitySelector.CONTAINER_ENTITY_SELECTOR);
+            List<AbstractMinecart> carts = this.getInteractingMinecartOfType(p_52455_, p_52456_, AbstractMinecart.class, e -> e.isAlive());
+            if (!carts.isEmpty() && carts.get(0).getComparatorLevel() > -1) return carts.get(0).getComparatorLevel();
+            List<AbstractMinecart> list1 = carts.stream().filter(EntitySelector.CONTAINER_ENTITY_SELECTOR).toList();
+
             if (!list1.isEmpty()) {
                 return AbstractContainerMenu.getRedstoneSignalFromContainer((Container)list1.get(0));
             }
@@ -297,6 +_,6 @@
 
     @Override
     protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> p_52469_) {
-        p_52469_.add(SHAPE, POWERED, WATERLOGGED);
+        p_52469_.add(getShapeProperty(), POWERED, WATERLOGGED);
     }
 }

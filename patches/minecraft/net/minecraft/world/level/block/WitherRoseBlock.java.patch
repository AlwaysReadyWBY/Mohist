--- a/net/minecraft/world/level/block/WitherRoseBlock.java
+++ b/net/minecraft/world/level/block/WitherRoseBlock.java
@@ -2,9 +_,8 @@
 
 import com.mojang.serialization.MapCodec;
 import com.mojang.serialization.codecs.RecordCodecBuilder;
-import com.mojang.serialization.codecs.RecordCodecBuilder.Instance;
+import java.util.List;
 import net.minecraft.core.BlockPos;
-import net.minecraft.core.Holder;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.util.RandomSource;
 import net.minecraft.world.Difficulty;
@@ -13,7 +_,6 @@
 import net.minecraft.world.effect.MobEffects;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.LivingEntity;
-import net.minecraft.world.item.component.SuspiciousStewEffects;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.state.BlockBehaviour;
@@ -23,59 +_,49 @@
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class WitherRoseBlock extends FlowerBlock {
-    public static final MapCodec<WitherRoseBlock> CODEC = RecordCodecBuilder.mapCodec(
-        p_312834_ -> p_312834_.group(EFFECTS_FIELD.forGetter(FlowerBlock::getSuspiciousEffects), propertiesCodec()).apply(p_312834_, WitherRoseBlock::new)
-    );
-
-    @Override
-    public MapCodec<WitherRoseBlock> codec() {
-        return CODEC;
-    }
-
-    public WitherRoseBlock(Holder<MobEffect> p_330275_, float p_332609_, BlockBehaviour.Properties p_58236_) {
-        this(makeEffectList(p_330275_, p_332609_), p_58236_);
-    }
-
-    public WitherRoseBlock(SuspiciousStewEffects p_333459_, BlockBehaviour.Properties p_310026_) {
-        super(p_333459_, p_310026_);
-    }
-
-    @Override
-    protected boolean mayPlaceOn(BlockState p_58248_, BlockGetter p_58249_, BlockPos p_58250_) {
-        return super.mayPlaceOn(p_58248_, p_58249_, p_58250_)
-            || p_58248_.is(Blocks.NETHERRACK)
-            || p_58248_.is(Blocks.SOUL_SAND)
-            || p_58248_.is(Blocks.SOUL_SOIL);
-    }
-
-    @Override
-    public void animateTick(BlockState p_222687_, Level p_222688_, BlockPos p_222689_, RandomSource p_222690_) {
-        VoxelShape voxelshape = this.getShape(p_222687_, p_222688_, p_222689_, CollisionContext.empty());
-        Vec3 vec3 = voxelshape.bounds().getCenter();
-        double d0 = (double)p_222689_.getX() + vec3.x;
-        double d1 = (double)p_222689_.getZ() + vec3.z;
-
-        for (int i = 0; i < 3; i++) {
-            if (p_222690_.nextBoolean()) {
-                p_222688_.addParticle(
-                    ParticleTypes.SMOKE,
-                    d0 + p_222690_.nextDouble() / 5.0,
-                    (double)p_222689_.getY() + (0.5 - p_222690_.nextDouble()),
-                    d1 + p_222690_.nextDouble() / 5.0,
-                    0.0,
-                    0.0,
-                    0.0
-                );
-            }
-        }
-    }
-
-    @Override
-    protected void entityInside(BlockState p_58238_, Level p_58239_, BlockPos p_58240_, Entity p_58241_) {
-        if (!p_58239_.isClientSide && p_58239_.getDifficulty() != Difficulty.PEACEFUL) {
-            if (p_58241_ instanceof LivingEntity livingentity && !livingentity.isInvulnerableTo(p_58239_.damageSources().wither())) {
-                livingentity.addEffect(new MobEffectInstance(MobEffects.WITHER, 40));
-            }
-        }
-    }
+   public static final MapCodec<WitherRoseBlock> CODEC = RecordCodecBuilder.mapCodec((p_312834_) -> {
+      return p_312834_.group(EFFECTS_FIELD.forGetter(FlowerBlock::getSuspiciousEffects), propertiesCodec()).apply(p_312834_, WitherRoseBlock::new);
+   });
+
+   public MapCodec<WitherRoseBlock> codec() {
+      return CODEC;
+   }
+
+   public WitherRoseBlock(MobEffect p_312856_, int p_311095_, BlockBehaviour.Properties p_310026_) {
+      this(makeEffectList(p_312856_, p_311095_), p_310026_);
+   }
+
+   public WitherRoseBlock(List<SuspiciousEffectHolder.EffectEntry> p_311376_, BlockBehaviour.Properties p_58236_) {
+      super(p_311376_, p_58236_);
+   }
+
+   protected boolean mayPlaceOn(BlockState p_58248_, BlockGetter p_58249_, BlockPos p_58250_) {
+      return super.mayPlaceOn(p_58248_, p_58249_, p_58250_) || p_58248_.is(Blocks.NETHERRACK) || p_58248_.is(Blocks.SOUL_SAND) || p_58248_.is(Blocks.SOUL_SOIL);
+   }
+
+   public void animateTick(BlockState p_222687_, Level p_222688_, BlockPos p_222689_, RandomSource p_222690_) {
+      VoxelShape voxelshape = this.getShape(p_222687_, p_222688_, p_222689_, CollisionContext.empty());
+      Vec3 vec3 = voxelshape.bounds().getCenter();
+      double d0 = (double)p_222689_.getX() + vec3.x;
+      double d1 = (double)p_222689_.getZ() + vec3.z;
+
+      for(int i = 0; i < 3; ++i) {
+         if (p_222690_.nextBoolean()) {
+            p_222688_.addParticle(ParticleTypes.SMOKE, d0 + p_222690_.nextDouble() / 5.0D, (double)p_222689_.getY() + (0.5D - p_222690_.nextDouble()), d1 + p_222690_.nextDouble() / 5.0D, 0.0D, 0.0D, 0.0D);
+         }
+      }
+
+   }
+
+   public void entityInside(BlockState p_58238_, Level p_58239_, BlockPos p_58240_, Entity p_58241_) {
+      if (!p_58239_.isClientSide && p_58239_.getDifficulty() != Difficulty.PEACEFUL) {
+         if (p_58241_ instanceof LivingEntity) {
+            LivingEntity livingentity = (LivingEntity)p_58241_;
+            if (!livingentity.isInvulnerableTo(p_58239_.damageSources().wither())) {
+               livingentity.addEffect(new MobEffectInstance(MobEffects.WITHER, 40), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.WITHER_ROSE); // CraftBukkit
+            }
+         }
+
+      }
+   }
 }

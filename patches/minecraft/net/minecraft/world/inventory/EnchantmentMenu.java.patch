--- a/net/minecraft/world/inventory/EnchantmentMenu.java
+++ b/net/minecraft/world/inventory/EnchantmentMenu.java
@@ -1,7 +_,9 @@
 package net.minecraft.world.inventory;
 
+import com.mohistmc.mohist.plugins.ban.bans.BanEnchantment;
 import com.mojang.datafixers.util.Pair;
 import java.util.List;
+import java.util.Map;
 import java.util.Optional;
 import net.minecraft.Util;
 import net.minecraft.advancements.CriteriaTriggers;
@@ -30,6 +_,16 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.EnchantingTableBlock;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.NamespacedKey;
+import org.bukkit.craftbukkit.inventory.CraftInventoryEnchanting;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.util.CraftNamespacedKey;
+import org.bukkit.enchantments.EnchantmentOffer;
+import org.bukkit.event.enchantment.EnchantItemEvent;
+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;
 
 public class EnchantmentMenu extends AbstractContainerMenu {
     static final ResourceLocation EMPTY_SLOT_LAPIS_LAZULI = ResourceLocation.withDefaultNamespace("item/empty_slot_lapis_lazuli");
@@ -39,6 +_,13 @@
             super.setChanged();
             EnchantmentMenu.this.slotsChanged(this);
         }
+
+        // CraftBukkit start
+        @Override
+        public Location getLocation() {
+            return access.getLocation();
+        }
+        // CraftBukkit end
     };
     private final ContainerLevelAccess access;
     private final RandomSource random = RandomSource.create();
@@ -47,6 +_,11 @@
     public final int[] enchantClue = new int[]{-1, -1, -1};
     public final int[] levelClue = new int[]{-1, -1, -1};
 
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private org.bukkit.entity.Player player;
+    // CraftBukkit end
+
     public EnchantmentMenu(int p_39454_, Inventory p_39455_) {
         this(p_39454_, p_39455_, ContainerLevelAccess.NULL);
     }
@@ -63,7 +_,7 @@
         this.addSlot(new Slot(this.enchantSlots, 1, 35, 47) {
             @Override
             public boolean mayPlace(ItemStack p_39517_) {
-                return p_39517_.is(Items.LAPIS_LAZULI);
+                return p_39517_.is(net.minecraftforge.common.Tags.Items.ENCHANTING_FUELS);
             }
 
             @Override
@@ -92,32 +_,37 @@
         this.addDataSlot(DataSlot.shared(this.levelClue, 0));
         this.addDataSlot(DataSlot.shared(this.levelClue, 1));
         this.addDataSlot(DataSlot.shared(this.levelClue, 2));
+        // CraftBukkit start
+        player = (org.bukkit.entity.Player) p_39458_.player.getBukkitEntity();
+        // CraftBukkit end
     }
 
     @Override
     public void slotsChanged(Container p_39461_) {
         if (p_39461_ == this.enchantSlots) {
             ItemStack itemstack = p_39461_.getItem(0);
-            if (!itemstack.isEmpty() && itemstack.isEnchantable()) {
+            if (!itemstack.isEmpty()) { // CraftBukkit - relax condition
                 this.access.execute((p_341515_, p_341516_) -> {
                     IdMap<Holder<Enchantment>> idmap = p_341515_.registryAccess().registryOrThrow(Registries.ENCHANTMENT).asHolderIdMap();
-                    int j = 0;
+                    float j = 0;
 
                     for (BlockPos blockpos : EnchantingTableBlock.BOOKSHELF_OFFSETS) {
                         if (EnchantingTableBlock.isValidBookShelf(p_341515_, p_341516_, blockpos)) {
                             j++;
+                            j += p_341515_.getBlockState(p_341516_.offset(blockpos)).getEnchantPowerBonus(p_341515_, p_341516_.offset(blockpos));
                         }
                     }
 
                     this.random.setSeed((long)this.enchantmentSeed.get());
 
                     for (int k = 0; k < 3; k++) {
-                        this.costs[k] = EnchantmentHelper.getEnchantmentCost(this.random, k, j, itemstack);
+                        this.costs[k] = EnchantmentHelper.getEnchantmentCost(this.random, k, (int)j, itemstack);
                         this.enchantClue[k] = -1;
                         this.levelClue[k] = -1;
                         if (this.costs[k] < k + 1) {
                             this.costs[k] = 0;
                         }
+                        this.costs[k] = net.minecraftforge.event.ForgeEventFactory.onEnchantmentLevelSet(p_341515_, p_341516_, k, (int)j, itemstack, costs[k]);
                     }
 
                     for (int l = 0; l < 3; l++) {
@@ -131,6 +_,41 @@
                         }
                     }
 
+                    // CraftBukkit start
+                    CraftItemStack item = CraftItemStack.asCraftMirror(itemstack);
+                    org.bukkit.enchantments.EnchantmentOffer[] offers = new EnchantmentOffer[3];
+                    for (int l = 0; l < 3; ++l) {
+                        org.bukkit.enchantments.Enchantment enchantment = (this.enchantClue[l] >= 0) ? org.bukkit.enchantments.Enchantment.getByKey(CraftNamespacedKey.fromMinecraft(BuiltInRegistries.ENCHANTMENT.getKey(BuiltInRegistries.ENCHANTMENT.byId(this.enchantClue[l])))) : null;
+                        offers[l] = (enchantment != null) ? new EnchantmentOffer(enchantment, this.levelClue[l], this.costs[l]) : null;
+                    }
+
+                    PrepareItemEnchantEvent event = new PrepareItemEnchantEvent(player, this.getBukkitView(), access.getLocation().getBlock(), item, offers, (int) j);
+                    event.setCancelled(!itemstack.isEnchantable());
+                    Bukkit.getPluginManager().callEvent(event);
+
+                    if (event.isCancelled()) {
+                        for (int l = 0; l < 3; ++l) {
+                            this.costs[l] = 0;
+                            this.enchantClue[l] = -1;
+                            this.levelClue[l] = -1;
+                        }
+                        return;
+                    }
+
+                    for (int l = 0; l < 3; l++) {
+                        EnchantmentOffer offer = event.getOffers()[l];
+                        if (offer != null) {
+                            this.costs[l] = offer.getCost();
+                            this.enchantClue[l] = BuiltInRegistries.ENCHANTMENT.getId(BuiltInRegistries.ENCHANTMENT.get(CraftNamespacedKey.toMinecraft(offer.getEnchantment().getKey())));
+                            this.levelClue[l] = offer.getEnchantmentLevel();
+                        } else {
+                            this.costs[l] = 0;
+                            this.enchantClue[l] = -1;
+                            this.levelClue[l] = -1;
+                        }
+                    }
+                    // CraftBukkit end
+
                     this.broadcastChanges();
                 });
             } else {
@@ -159,25 +_,54 @@
                 this.access.execute((p_341512_, p_341513_) -> {
                     ItemStack itemstack2 = itemstack;
                     List<EnchantmentInstance> list = this.getEnchantmentList(p_341512_.registryAccess(), itemstack, p_39466_, this.costs[p_39466_]);
-                    if (!list.isEmpty()) {
-                        p_39465_.onEnchantmentPerformed(itemstack, i);
+                    // CraftBukkit start
+                    if (true || !list.isEmpty()) {
+                        Map<org.bukkit.enchantments.Enchantment, Integer> enchants = new java.util.HashMap<org.bukkit.enchantments.Enchantment, Integer>();
+                        for (EnchantmentInstance instance : list) {
+                            enchants.put(org.bukkit.enchantments.Enchantment.getByKey(CraftNamespacedKey.fromMinecraft(BuiltInRegistries.ENCHANTMENT.getKey(instance.enchantment))), instance.level);
+                        }
+                        CraftItemStack item = CraftItemStack.asCraftMirror(itemstack2);
+
+                        org.bukkit.enchantments.Enchantment hintedEnchantment = org.bukkit.enchantments.Enchantment.getByKey(CraftNamespacedKey.fromMinecraft(BuiltInRegistries.ENCHANTMENT.getKey(net.minecraft.world.item.enchantment.Enchantment.byId(enchantClue[p_39466_]))));
+                        int hintedEnchantmentLevel = levelClue[p_39466_];
+                        EnchantItemEvent event = new EnchantItemEvent((org.bukkit.entity.Player) p_39465_.getBukkitEntity(), this.getBukkitView(), access.getLocation().getBlock(), item, this.costs[p_39466_], enchants, hintedEnchantment, hintedEnchantmentLevel, p_39466_);
+                        Bukkit.getPluginManager().callEvent(event);
+
+                        int level = event.getExpLevelCost();
+                        if (event.isCancelled() || (level > p_39465_.experienceLevel && !p_39465_.getAbilities().instabuild) || event.getEnchantsToAdd().isEmpty()) {
+                            return;
+                        }
+                        // CraftBukkit end
                         if (itemstack.is(Items.BOOK)) {
-                            itemstack2 = itemstack.transmuteCopy(Items.ENCHANTED_BOOK);
+                            itemstack2 = itemstack.transmuteCopy(Items.ENCHANTED_BOOK, 1);
                             this.enchantSlots.setItem(0, itemstack2);
                         }
 
-                        for (EnchantmentInstance enchantmentinstance : list) {
+                        // CraftBukkit start
+                        for (Map.Entry<org.bukkit.enchantments.Enchantment, Integer> entry : event.getEnchantsToAdd().entrySet()) {
+                            NamespacedKey enchantId = entry.getKey().getKey();
+                            net.minecraft.world.item.enchantment.Enchantment nms = BuiltInRegistries.ENCHANTMENT.get(CraftNamespacedKey.toMinecraft(enchantId));
+                            if (nms == null) {
+                                continue;
+                            }
+
+                            EnchantmentInstance enchantmentinstance = new EnchantmentInstance(nms, entry.getValue());
                             itemstack2.enchant(enchantmentinstance.enchantment, enchantmentinstance.level);
                         }
+                        p_39465_.onEnchantmentPerformed(itemstack, i);
+                        // CraftBukkit end
 
-                        itemstack1.consume(i, p_39465_);
-                        if (itemstack1.isEmpty()) {
-                            this.enchantSlots.setItem(1, ItemStack.EMPTY);
+                        // CraftBukkit - TODO: let plugins change this
+                        if (!p_39465_.hasInfiniteMaterials()) {
+                            itemstack1.shrink(i);
+                            if (itemstack1.isEmpty()) {
+                                this.enchantSlots.setItem(1, ItemStack.EMPTY);
+                            }
                         }
 
                         p_39465_.awardStat(Stats.ENCHANT_ITEM);
                         if (p_39465_ instanceof ServerPlayer) {
-                            CriteriaTriggers.ENCHANTED_ITEM.trigger((ServerPlayer)p_39465_, itemstack2, i);
+                            CriteriaTriggers.ENCHANTED_ITEM.trigger((ServerPlayer) p_39465_, itemstack2, i);
                         }
 
                         this.enchantSlots.setChanged();
@@ -226,6 +_,7 @@
 
     @Override
     public boolean stillValid(Player p_39463_) {
+        if (!this.checkReachable) return true; // CraftBukkit
         return stillValid(this.access, p_39463_, Blocks.ENCHANTING_TABLE);
     }
 
@@ -244,7 +_,7 @@
                 if (!this.moveItemStackTo(itemstack1, 2, 38, true)) {
                     return ItemStack.EMPTY;
                 }
-            } else if (itemstack1.is(Items.LAPIS_LAZULI)) {
+            } else if (itemstack1.is(net.minecraftforge.common.Tags.Items.ENCHANTING_FUELS)) {
                 if (!this.moveItemStackTo(itemstack1, 1, 2, true)) {
                     return ItemStack.EMPTY;
                 }
@@ -273,4 +_,17 @@
 
         return itemstack;
     }
+
+    // CraftBukkit start
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        CraftInventoryEnchanting inventory = new CraftInventoryEnchanting(this.enchantSlots);
+        bukkitEntity = new CraftInventoryView(this.player, inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
 }

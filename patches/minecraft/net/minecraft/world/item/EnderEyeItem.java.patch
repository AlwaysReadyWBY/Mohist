--- a/net/minecraft/world/item/EnderEyeItem.java
+++ b/net/minecraft/world/item/EnderEyeItem.java
@@ -26,20 +_,18 @@
 import net.minecraft.world.phys.HitResult;
 
 public class EnderEyeItem extends Item {
-    public EnderEyeItem(Item.Properties p_41180_) {
-        super(p_41180_);
-    }
+   public EnderEyeItem(Item.Properties p_41180_) {
+      super(p_41180_);
+   }
 
-    @Override
-    public InteractionResult useOn(UseOnContext p_41182_) {
-        Level level = p_41182_.getLevel();
-        BlockPos blockpos = p_41182_.getClickedPos();
-        BlockState blockstate = level.getBlockState(blockpos);
-        if (!blockstate.is(Blocks.END_PORTAL_FRAME) || blockstate.getValue(EndPortalFrameBlock.HAS_EYE)) {
-            return InteractionResult.PASS;
-        } else if (level.isClientSide) {
+   public InteractionResult useOn(UseOnContext p_41182_) {
+      Level level = p_41182_.getLevel();
+      BlockPos blockpos = p_41182_.getClickedPos();
+      BlockState blockstate = level.getBlockState(blockpos);
+      if (blockstate.is(Blocks.END_PORTAL_FRAME) && !blockstate.getValue(EndPortalFrameBlock.HAS_EYE)) {
+         if (level.isClientSide) {
             return InteractionResult.SUCCESS;
-        } else {
+         } else {
             BlockState blockstate1 = blockstate.setValue(EndPortalFrameBlock.HAS_EYE, Boolean.valueOf(true));
             Block.pushEntitiesUp(blockstate, blockstate1, level, blockpos);
             level.setBlock(blockpos, blockstate1, 2);
@@ -48,65 +_,61 @@
             level.levelEvent(1503, blockpos, 0);
             BlockPattern.BlockPatternMatch blockpattern$blockpatternmatch = EndPortalFrameBlock.getOrCreatePortalShape().find(level, blockpos);
             if (blockpattern$blockpatternmatch != null) {
-                BlockPos blockpos1 = blockpattern$blockpatternmatch.getFrontTopLeft().offset(-3, 0, -3);
-
-                for (int i = 0; i < 3; i++) {
-                    for (int j = 0; j < 3; j++) {
-                        level.setBlock(blockpos1.offset(i, 0, j), Blocks.END_PORTAL.defaultBlockState(), 2);
-                    }
-                }
-
-                level.globalLevelEvent(1038, blockpos1.offset(1, 0, 1), 0);
+               BlockPos blockpos1 = blockpattern$blockpatternmatch.getFrontTopLeft().offset(-3, 0, -3);
+
+               for(int i = 0; i < 3; ++i) {
+                  for(int j = 0; j < 3; ++j) {
+                     level.setBlock(blockpos1.offset(i, 0, j), Blocks.END_PORTAL.defaultBlockState(), 2);
+                  }
+               }
+
+               level.globalLevelEvent(1038, blockpos1.offset(1, 0, 1), 0);
             }
 
             return InteractionResult.CONSUME;
-        }
-    }
-
-    @Override
-    public int getUseDuration(ItemStack p_331297_) {
-        return 0;
-    }
-
-    @Override
-    public InteractionResultHolder<ItemStack> use(Level p_41184_, Player p_41185_, InteractionHand p_41186_) {
-        ItemStack itemstack = p_41185_.getItemInHand(p_41186_);
-        BlockHitResult blockhitresult = getPlayerPOVHitResult(p_41184_, p_41185_, ClipContext.Fluid.NONE);
-        if (blockhitresult.getType() == HitResult.Type.BLOCK && p_41184_.getBlockState(blockhitresult.getBlockPos()).is(Blocks.END_PORTAL_FRAME)) {
-            return InteractionResultHolder.pass(itemstack);
-        } else {
-            p_41185_.startUsingItem(p_41186_);
-            if (p_41184_ instanceof ServerLevel serverlevel) {
-                BlockPos blockpos = serverlevel.findNearestMapStructure(StructureTags.EYE_OF_ENDER_LOCATED, p_41185_.blockPosition(), 100, false);
-                if (blockpos != null) {
-                    EyeOfEnder eyeofender = new EyeOfEnder(p_41184_, p_41185_.getX(), p_41185_.getY(0.5), p_41185_.getZ());
-                    eyeofender.setItem(itemstack);
-                    eyeofender.signalTo(blockpos);
-                    p_41184_.gameEvent(GameEvent.PROJECTILE_SHOOT, eyeofender.position(), GameEvent.Context.of(p_41185_));
-                    p_41184_.addFreshEntity(eyeofender);
-                    if (p_41185_ instanceof ServerPlayer) {
-                        CriteriaTriggers.USED_ENDER_EYE.trigger((ServerPlayer)p_41185_, blockpos);
-                    }
-
-                    p_41184_.playSound(
-                        null,
-                        p_41185_.getX(),
-                        p_41185_.getY(),
-                        p_41185_.getZ(),
-                        SoundEvents.ENDER_EYE_LAUNCH,
-                        SoundSource.NEUTRAL,
-                        0.5F,
-                        0.4F / (p_41184_.getRandom().nextFloat() * 0.4F + 0.8F)
-                    );
-                    p_41184_.levelEvent(null, 1003, p_41185_.blockPosition(), 0);
-                    itemstack.consume(1, p_41185_);
-                    p_41185_.awardStat(Stats.ITEM_USED.get(this));
-                    p_41185_.swing(p_41186_, true);
-                    return InteractionResultHolder.success(itemstack);
-                }
+         }
+      } else {
+         return InteractionResult.PASS;
+      }
+   }
+
+   public InteractionResultHolder<ItemStack> use(Level p_41184_, Player p_41185_, InteractionHand p_41186_) {
+      ItemStack itemstack = p_41185_.getItemInHand(p_41186_);
+      BlockHitResult blockhitresult = getPlayerPOVHitResult(p_41184_, p_41185_, ClipContext.Fluid.NONE);
+      if (blockhitresult.getType() == HitResult.Type.BLOCK && p_41184_.getBlockState(blockhitresult.getBlockPos()).is(Blocks.END_PORTAL_FRAME)) {
+         return InteractionResultHolder.pass(itemstack);
+      } else {
+         p_41185_.startUsingItem(p_41186_);
+         if (p_41184_ instanceof ServerLevel) {
+            ServerLevel serverlevel = (ServerLevel)p_41184_;
+            BlockPos blockpos = serverlevel.findNearestMapStructure(StructureTags.EYE_OF_ENDER_LOCATED, p_41185_.blockPosition(), 100, false);
+            if (blockpos != null) {
+               EyeOfEnder eyeofender = new EyeOfEnder(p_41184_, p_41185_.getX(), p_41185_.getY(0.5D), p_41185_.getZ());
+               eyeofender.setItem(itemstack);
+               eyeofender.signalTo(blockpos);
+               p_41184_.gameEvent(GameEvent.PROJECTILE_SHOOT, eyeofender.position(), GameEvent.Context.of(p_41185_));
+               // CraftBukkit start
+               if (!p_41184_.addFreshEntity(eyeofender)) {
+                  return new InteractionResultHolder(InteractionResult.FAIL, itemstack);
+               }
+               // CraftBukkit end
+               if (p_41185_ instanceof ServerPlayer) {
+                  CriteriaTriggers.USED_ENDER_EYE.trigger((ServerPlayer)p_41185_, blockpos);
+               }
+
+               p_41184_.playSound((Player)null, p_41185_.getX(), p_41185_.getY(), p_41185_.getZ(), SoundEvents.ENDER_EYE_LAUNCH, SoundSource.NEUTRAL, 0.5F, 0.4F / (p_41184_.getRandom().nextFloat() * 0.4F + 0.8F));
+               p_41184_.levelEvent((Player)null, 1003, p_41185_.blockPosition(), 0);
+               if (!p_41185_.getAbilities().instabuild) {
+                  itemstack.shrink(1);
+               }
+
+               p_41185_.awardStat(Stats.ITEM_USED.get(this));
+               p_41185_.swing(p_41186_, true);
+               return InteractionResultHolder.success(itemstack);
             }
+         }
 
-            return InteractionResultHolder.consume(itemstack);
-        }
-    }
+         return InteractionResultHolder.consume(itemstack);
+      }
+   }
 }

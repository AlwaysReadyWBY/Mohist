--- a/net/minecraft/world/item/ArmorItem.java
+++ b/net/minecraft/world/item/ArmorItem.java
@@ -24,6 +_,9 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.DispenserBlock;
 import net.minecraft.world.phys.AABB;
+import org.bukkit.craftbukkit.v1_20_R2.block.CraftBlock;
+import org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseArmorEvent;
 
 public class ArmorItem extends Item implements Equipable {
    private static final EnumMap<ArmorItem.Type, UUID> ARMOR_MODIFIER_UUID_PER_TYPE = Util.make(new EnumMap<>(ArmorItem.Type.class), (p_266744_) -> {
@@ -53,7 +_,33 @@
          LivingEntity livingentity = list.get(0);
          EquipmentSlot equipmentslot = Mob.getEquipmentSlotForItem(p_40400_);
          ItemStack itemstack = p_40400_.split(1);
-         livingentity.setItemSlot(equipmentslot, itemstack);
+         // CraftBukkit start
+         Level world = p_40399_.level();
+         org.bukkit.block.Block block = CraftBlock.at(world, p_40399_.pos());
+         CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack);
+
+         BlockDispenseArmorEvent event = new BlockDispenseArmorEvent(block, craftItem.clone(), (org.bukkit.craftbukkit.v1_20_R2.entity.CraftLivingEntity) livingentity.getBukkitEntity());
+         if (!DispenserBlock.eventFired) {
+            world.getCraftServer().getPluginManager().callEvent(event);
+         }
+
+         if (event.isCancelled()) {
+            p_40400_.grow(1);
+            return false;
+         }
+
+         if (!event.getItem().equals(craftItem)) {
+            p_40400_.grow(1);
+            // Chain to handler for new item
+            ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+            DispenseItemBehavior idispensebehavior = (DispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+            if (idispensebehavior != DispenseItemBehavior.NOOP && idispensebehavior != ArmorItem.DISPENSE_ITEM_BEHAVIOR) {
+               idispensebehavior.dispense(p_40399_, eventStack);
+               return true;
+            }
+         }
+         livingentity.setItemSlot(equipmentslot, CraftItemStack.asNMSCopy(event.getItem()));
+         // CraftBukkit end
          if (livingentity instanceof Mob) {
             ((Mob)livingentity).setDropChance(equipmentslot, 2.0F);
             ((Mob)livingentity).setPersistenceRequired();
@@ -75,7 +_,7 @@
       UUID uuid = ARMOR_MODIFIER_UUID_PER_TYPE.get(p_266831_);
       builder.put(Attributes.ARMOR, new AttributeModifier(uuid, "Armor modifier", (double)this.defense, AttributeModifier.Operation.ADDITION));
       builder.put(Attributes.ARMOR_TOUGHNESS, new AttributeModifier(uuid, "Armor toughness", (double)this.toughness, AttributeModifier.Operation.ADDITION));
-      if (p_40386_ == ArmorMaterials.NETHERITE) {
+      if (this.knockbackResistance > 0) {
          builder.put(Attributes.KNOCKBACK_RESISTANCE, new AttributeModifier(uuid, "Armor knockback resistance", (double)this.knockbackResistance, AttributeModifier.Operation.ADDITION));
       }
 

--- a/net/minecraft/world/item/crafting/SmithingTransformRecipe.java
+++ b/net/minecraft/world/item/crafting/SmithingTransformRecipe.java
@@ -1,14 +_,19 @@
 package net.minecraft.world.item.crafting;
 
+import java.util.stream.Stream;
+
 import com.mojang.serialization.Codec;
 import com.mojang.serialization.codecs.RecordCodecBuilder;
-import java.util.stream.Stream;
 import net.minecraft.core.RegistryAccess;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.world.Container;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.Level;
+import org.bukkit.NamespacedKey;
+import org.bukkit.craftbukkit.v1_20_R1.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.v1_20_R1.inventory.CraftRecipe;
+import org.bukkit.craftbukkit.v1_20_R1.inventory.CraftSmithingTransformRecipe;
 
 public class SmithingTransformRecipe implements SmithingRecipe {
    final Ingredient f_265949_;
@@ -58,8 +_,19 @@
    }
 
    public boolean m_142505_() {
-      return Stream.of(this.f_265949_, this.f_265888_, this.f_265907_).anyMatch(Ingredient::m_43947_);
-   }
+      return Stream.of(this.f_265949_, this.f_265888_, this.f_265907_).anyMatch(net.minecraftforge.common.ForgeHooks::hasNoElements);
+   }
+
+   // CraftBukkit start
+   @Override
+   public org.bukkit.inventory.Recipe toBukkitRecipe(NamespacedKey id) {
+      CraftItemStack result = CraftItemStack.asCraftMirror(this.f_266098_);
+
+      CraftSmithingTransformRecipe recipe = new CraftSmithingTransformRecipe(id, result, CraftRecipe.toBukkit(this.f_265949_), CraftRecipe.toBukkit(this.f_265888_), CraftRecipe.toBukkit(this.f_265907_));
+
+      return recipe;
+   }
+   // CraftBukkit end
 
    public static class Serializer implements RecipeSerializer<SmithingTransformRecipe> {
       private static final Codec<SmithingTransformRecipe> f_291016_ = RecordCodecBuilder.create((p_301330_) -> {

--- a/net/minecraft/world/item/crafting/ShapelessRecipe.java
+++ b/net/minecraft/world/item/crafting/ShapelessRecipe.java
@@ -1,5 +_,6 @@
 package net.minecraft.world.item.crafting;
 
+import com.mohistmc.mohist.bukkit.inventory.MohistSpecialRecipe;
 import com.mojang.serialization.Codec;
 import com.mojang.serialization.DataResult;
 import com.mojang.serialization.MapCodec;
@@ -8,30 +_,56 @@
 import java.util.List;
 import net.minecraft.core.HolderLookup;
 import net.minecraft.core.NonNullList;
+import net.minecraft.core.RegistryAccess;
+import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.RegistryFriendlyByteBuf;
 import net.minecraft.network.codec.StreamCodec;
+import net.minecraft.util.ExtraCodecs;
 import net.minecraft.world.entity.player.StackedContents;
 import net.minecraft.world.inventory.CraftingContainer;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.Level;
+import org.bukkit.NamespacedKey;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.inventory.CraftRecipe;
+import org.bukkit.craftbukkit.inventory.CraftShapelessRecipe;
 
 public class ShapelessRecipe implements CraftingRecipe {
     final String group;
     final CraftingBookCategory category;
     final ItemStack result;
     final NonNullList<Ingredient> ingredients;
+    private final boolean isSimple;
 
     public ShapelessRecipe(String p_249640_, CraftingBookCategory p_249390_, ItemStack p_252071_, NonNullList<Ingredient> p_250689_) {
         this.group = p_249640_;
         this.category = p_249390_;
         this.result = p_252071_;
         this.ingredients = p_250689_;
-    }
-
-    @Override
-    public RecipeSerializer<?> getSerializer() {
-        return RecipeSerializer.SHAPELESS_RECIPE;
-    }
+        this.isSimple = p_250689_.stream().allMatch(Ingredient::isSimple);
+    }
+
+   // CraftBukkit start
+   @SuppressWarnings("unchecked")
+   public org.bukkit.inventory.Recipe toBukkitRecipe(NamespacedKey id) {
+      if (this.result.isEmpty()) {
+         return new MohistSpecialRecipe(id, this);
+      }
+      CraftItemStack result = CraftItemStack.asCraftMirror(this.result);
+      CraftShapelessRecipe recipe = new CraftShapelessRecipe(id, result, this);
+      recipe.setGroup(this.group);
+      recipe.setCategory(CraftRecipe.getCategory(this.category()));
+
+      for (Ingredient list : this.ingredients) {
+         recipe.addIngredient(CraftRecipe.toBukkit(list));
+      }
+      return recipe;
+   }
+   // CraftBukkit end
+
+   public RecipeSerializer<?> getSerializer() {
+      return RecipeSerializer.SHAPELESS_RECIPE;
+   }
 
     @Override
     public String getGroup() {
@@ -55,17 +_,20 @@
 
     public boolean matches(CraftingContainer p_44262_, Level p_44263_) {
         StackedContents stackedcontents = new StackedContents();
+        var inputs = new java.util.ArrayList<ItemStack>();
         int i = 0;
 
         for (int j = 0; j < p_44262_.getContainerSize(); j++) {
             ItemStack itemstack = p_44262_.getItem(j);
             if (!itemstack.isEmpty()) {
                 i++;
+                if (isSimple)
                 stackedcontents.accountStack(itemstack, 1);
+                else inputs.add(itemstack);
             }
         }
 
-        return i == this.ingredients.size() && stackedcontents.canCraft(this, null);
+        return i == this.ingredients.size() && (isSimple ? stackedcontents.canCraft(this, null) : net.minecraftforge.common.util.RecipeMatcher.findMatches(inputs,  this.ingredients) != null);
     }
 
     public ItemStack assemble(CraftingContainer p_44260_, HolderLookup.Provider p_334364_) {
@@ -92,7 +_,7 @@
                                     if (aingredient.length == 0) {
                                         return DataResult.error(() -> "No ingredients for shapeless recipe");
                                     } else {
-                                        return aingredient.length > 9
+                                        return aingredient.length > ShapedRecipe.MAX_WIDTH * ShapedRecipe.MAX_HEIGHT
                                             ? DataResult.error(() -> "Too many ingredients for shapeless recipe")
                                             : DataResult.success(NonNullList.of(Ingredient.EMPTY, aingredient));
                                     }

--- a/net/minecraft/world/item/MinecartItem.java
+++ b/net/minecraft/world/item/MinecartItem.java
@@ -5,10 +_,8 @@
 import net.minecraft.core.dispenser.BlockSource;
 import net.minecraft.core.dispenser.DefaultDispenseItemBehavior;
 import net.minecraft.core.dispenser.DispenseItemBehavior;
-import net.minecraft.server.level.ServerLevel;
 import net.minecraft.tags.BlockTags;
 import net.minecraft.world.InteractionResult;
-import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.vehicle.AbstractMinecart;
 import net.minecraft.world.item.context.UseOnContext;
 import net.minecraft.world.level.Level;
@@ -18,6 +_,10 @@
 import net.minecraft.world.level.block.state.properties.RailShape;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.v1_20_R3.block.CraftBlock;
+import org.bukkit.craftbukkit.v1_20_R3.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_20_R3.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
 
 public class MinecartItem extends Item {
    private static final DispenseItemBehavior DISPENSE_ITEM_BEHAVIOR = new DefaultDispenseItemBehavior() {
@@ -32,7 +_,7 @@
          double d2 = vec3.z() + (double)direction.getStepZ() * 1.125D;
          BlockPos blockpos = p_42949_.pos().relative(direction);
          BlockState blockstate = serverlevel.getBlockState(blockpos);
-         RailShape railshape = blockstate.getBlock() instanceof BaseRailBlock ? blockstate.getValue(((BaseRailBlock)blockstate.getBlock()).getShapeProperty()) : RailShape.NORTH_SOUTH;
+         RailShape railshape = blockstate.getBlock() instanceof BaseRailBlock ? ((BaseRailBlock)blockstate.getBlock()).getRailDirection(blockstate, level, blockpos, null) : RailShape.NORTH_SOUTH;
          double d3;
          if (blockstate.is(BlockTags.RAILS)) {
             if (railshape.isAscending()) {
@@ -54,9 +_,41 @@
             }
          }
 
-         AbstractMinecart abstractminecart = AbstractMinecart.createMinecart(serverlevel, d0, d1 + d3, d2, ((MinecartItem)p_42950_.getItem()).type, p_42950_, (Player)null);
-         serverlevel.addFreshEntity(abstractminecart);
-         p_42950_.shrink(1);
+         // CraftBukkit start
+         ItemStack itemstack1 = p_42950_.split(1);
+         org.bukkit.block.Block block2 = CraftBlock.at(level, p_42949_.pos());
+         CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+
+         BlockDispenseEvent event = new BlockDispenseEvent(block2, craftItem.clone(), new org.bukkit.util.Vector(d0, d1 + d3, d2));
+         if (!DispenserBlock.eventFired) {
+            level.getCraftServer().getPluginManager().callEvent(event);
+         }
+
+         if (event.isCancelled()) {
+            p_42950_.grow(1);
+            return p_42950_;
+         }
+
+         if (!event.getItem().equals(craftItem)) {
+            p_42950_.grow(1);
+            // Chain to handler for new item
+            ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+            DispenseItemBehavior idispensebehavior = (DispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+            if (idispensebehavior != DispenseItemBehavior.NOOP && idispensebehavior != this) {
+               idispensebehavior.dispense(p_42949_, eventStack);
+               return p_42950_;
+            }
+         }
+
+         itemstack1 = CraftItemStack.asNMSCopy(event.getItem());
+         AbstractMinecart abstractminecart = AbstractMinecart.createMinecart(level, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), ((MinecartItem) itemstack1.getItem()).type);
+
+
+         if (p_42950_.hasCustomHoverName()) {
+            abstractminecart.setCustomName(p_42950_.getHoverName());
+         }
+
+         if (!level.addFreshEntity(abstractminecart)) p_42950_.grow(1);
          return p_42950_;
       }
 
@@ -82,15 +_,24 @@
          ItemStack itemstack = p_42943_.getItemInHand();
          if (level instanceof ServerLevel) {
             ServerLevel serverlevel = (ServerLevel)level;
-            RailShape railshape = blockstate.getBlock() instanceof BaseRailBlock ? blockstate.getValue(((BaseRailBlock)blockstate.getBlock()).getShapeProperty()) : RailShape.NORTH_SOUTH;
+            RailShape railshape = blockstate.getBlock() instanceof BaseRailBlock ? ((BaseRailBlock)blockstate.getBlock()).getRailDirection(blockstate, level, blockpos, null) : RailShape.NORTH_SOUTH;
             double d0 = 0.0D;
             if (railshape.isAscending()) {
                d0 = 0.5D;
             }
 
-            AbstractMinecart abstractminecart = AbstractMinecart.createMinecart(serverlevel, (double)blockpos.getX() + 0.5D, (double)blockpos.getY() + 0.0625D + d0, (double)blockpos.getZ() + 0.5D, this.type, itemstack, p_42943_.getPlayer());
-            serverlevel.addFreshEntity(abstractminecart);
-            serverlevel.gameEvent(GameEvent.ENTITY_PLACE, blockpos, GameEvent.Context.of(p_42943_.getPlayer(), serverlevel.getBlockState(blockpos.below())));
+            AbstractMinecart abstractminecart = AbstractMinecart.createMinecart(serverlevel, (double)blockpos.getX() + 0.5D, (double)blockpos.getY() + 0.0625D + d0, (double)blockpos.getZ() + 0.5D, this.type);
+            if (itemstack.hasCustomHoverName()) {
+               abstractminecart.setCustomName(itemstack.getHoverName());
+            }
+
+            // CraftBukkit start
+            if (CraftEventFactory.callEntityPlaceEvent(p_42943_, abstractminecart).isCancelled()) {
+               return InteractionResult.FAIL;
+            }
+            // CraftBukkit end
+            if (!level.addFreshEntity(abstractminecart)) return InteractionResult.PASS; // CraftBukkit
+            serverlevel.gameEvent(GameEvent.ENTITY_PLACE, blockpos, GameEvent.Context.of(p_42943_.getPlayer(), level.getBlockState(blockpos.below())));
          }
 
          itemstack.shrink(1);

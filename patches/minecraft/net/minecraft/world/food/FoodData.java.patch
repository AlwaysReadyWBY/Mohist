--- a/net/minecraft/world/food/FoodData.java
+++ b/net/minecraft/world/food/FoodData.java
@@ -2,21 +_,42 @@
 
 import net.minecraft.core.component.DataComponents;
 import net.minecraft.nbt.CompoundTag;
+import net.minecraft.network.protocol.game.ClientboundSetHealthPacket;
+import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.GameRules;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRegainHealthEvent;
 
 public class FoodData {
-    public int foodLevel = 20;
-    public float saturationLevel;
-    public float exhaustionLevel;
-    public int tickTimer;
-    public int lastFoodLevel = 20;
-
-    public FoodData() {
-        this.saturationLevel = 5.0F;
-    }
+   public int foodLevel = 20;
+   public float saturationLevel;
+   public float exhaustionLevel;
+   public int tickTimer;
+   public int lastFoodLevel = 20;
+
+   // CraftBukkit start
+   private Player entityhuman;
+   public int saturatedRegenRate = 10;
+   public int unsaturatedRegenRate = 80;
+   public int starvationRate = 80;
+   // CraftBukkit end
+
+   // CraftBukkit start - added Player constructor
+   public FoodData(Player entityhuman) {
+      org.apache.commons.lang3.Validate.notNull(entityhuman);
+      this.entityhuman = entityhuman;
+      this.saturationLevel = 5.0F;
+   }
+   // CraftBukkit end
+
+   public FoodData() {
+      this.entityhuman = null;
+      this.saturationLevel = 5.0F;
+   }
 
     private void add(int p_335153_, float p_332105_) {
         this.foodLevel = Math.min(p_335153_ + this.foodLevel, 20);
@@ -34,37 +_,51 @@
         }
     }
 
-    public void tick(Player p_38711_) {
-        Difficulty difficulty = p_38711_.level().getDifficulty();
-        this.lastFoodLevel = this.foodLevel;
-        if (this.exhaustionLevel > 4.0F) {
-            this.exhaustionLevel -= 4.0F;
-            if (this.saturationLevel > 0.0F) {
-                this.saturationLevel = Math.max(this.saturationLevel - 1.0F, 0.0F);
-            } else if (difficulty != Difficulty.PEACEFUL) {
-                this.foodLevel = Math.max(this.foodLevel - 1, 0);
-            }
-        }
-
-        boolean flag = p_38711_.level().getGameRules().getBoolean(GameRules.RULE_NATURAL_REGENERATION);
-        if (flag && this.saturationLevel > 0.0F && p_38711_.isHurt() && this.foodLevel >= 20) {
-            this.tickTimer++;
-            if (this.tickTimer >= 10) {
-                float f = Math.min(this.saturationLevel, 6.0F);
-                p_38711_.heal(f / 6.0F);
-                this.addExhaustion(f);
-                this.tickTimer = 0;
-            }
-        } else if (flag && this.foodLevel >= 18 && p_38711_.isHurt()) {
-            this.tickTimer++;
-            if (this.tickTimer >= 80) {
-                p_38711_.heal(1.0F);
-                this.addExhaustion(6.0F);
-                this.tickTimer = 0;
-            }
-        } else if (this.foodLevel <= 0) {
-            this.tickTimer++;
-            if (this.tickTimer >= 80) {
+   public void tick(Player p_38711_) {
+      Difficulty difficulty = p_38711_.level().getDifficulty();
+      if (entityhuman == null) entityhuman = p_38711_;
+      this.lastFoodLevel = this.foodLevel;
+      if (this.exhaustionLevel > 4.0F) {
+         this.exhaustionLevel -= 4.0F;
+         if (this.saturationLevel > 0.0F) {
+            this.saturationLevel = Math.max(this.saturationLevel - 1.0F, 0.0F);
+         } else if (difficulty != Difficulty.PEACEFUL) {
+            this.foodLevel = Math.max(this.foodLevel - 1, 0);
+            // CraftBukkit start
+            org.bukkit.event.entity.FoodLevelChangeEvent event = CraftEventFactory.callFoodLevelChangeEvent(entityhuman, Math.max(this.foodLevel - 1, 0));
+
+            if (!event.isCancelled()) {
+               this.foodLevel = event.getFoodLevel();
+            }
+
+            ((ServerPlayer) entityhuman).connection.send(new ClientboundSetHealthPacket(((ServerPlayer) entityhuman).getBukkitEntity().getScaledHealth(), this.foodLevel, this.saturationLevel));
+            // CraftBukkit end
+         }
+      }
+
+      boolean flag = p_38711_.level().getGameRules().getBoolean(GameRules.RULE_NATURAL_REGENERATION);
+      if (flag && this.saturationLevel > 0.0F && p_38711_.isHurt() && this.foodLevel >= 20) {
+         ++this.tickTimer;
+         if (this.tickTimer >= this.saturatedRegenRate) { // CraftBukkit
+            float f = Math.min(this.saturationLevel, 6.0F);
+            p_38711_.regainReason0(EntityRegainHealthEvent.RegainReason.SATIATED);
+            p_38711_.heal(f / 6.0F);
+            p_38711_.exhaustionReason(org.bukkit.event.entity.EntityExhaustionEvent.ExhaustionReason.REGEN);
+            p_38711_.causeFoodExhaustion(f);
+            this.tickTimer = 0;
+         }
+      } else if (flag && this.foodLevel >= 18 && p_38711_.isHurt()) {
+         ++this.tickTimer;
+         if (this.tickTimer >= this.unsaturatedRegenRate) { // CraftBukkit - add regen rate manipulation
+            p_38711_.regainReason0(EntityRegainHealthEvent.RegainReason.SATIATED);
+            p_38711_.heal(1.0F);
+            p_38711_.exhaustionReason(org.bukkit.event.entity.EntityExhaustionEvent.ExhaustionReason.REGEN); // CraftBukkit - EntityExhaustionEvent
+            p_38711_.causeFoodExhaustion(6.0f);
+            this.tickTimer = 0;
+         }
+      } else if (this.foodLevel <= 0) {
+         ++this.tickTimer;
+         if (this.tickTimer >= this.starvationRate) { // CraftBukkit - add regen rate manipulation
                 if (p_38711_.getHealth() > 10.0F || difficulty == Difficulty.HARD || p_38711_.getHealth() > 1.0F && difficulty == Difficulty.NORMAL) {
                     p_38711_.hurt(p_38711_.damageSources().starve(), 1.0F);
                 }

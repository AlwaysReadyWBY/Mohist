--- a/net/minecraft/world/Container.java
+++ b/net/minecraft/world/Container.java
@@ -1,14 +_,22 @@
 package net.minecraft.world;
 
+import java.util.Collections;
 import java.util.Set;
 import java.util.function.Predicate;
+
+import com.mohistmc.bukkit.inventory.InventoryOwner;
 import net.minecraft.core.BlockPos;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.item.crafting.RecipeHolder;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.entity.BlockEntity;
 
+import net.minecraft.world.item.crafting.Recipe;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_20_R2.entity.CraftHumanEntity;
+
 public interface Container extends Clearable {
    int LARGE_MAX_STACK_SIZE = 64;
    int DEFAULT_DISTANCE_LIMIT = 8;
@@ -92,4 +_,47 @@
          return p_272670_.distanceToSqr((double)blockpos.getX() + 0.5D, (double)blockpos.getY() + 0.5D, (double)blockpos.getZ() + 0.5D) <= (double)(p_273411_ * p_273411_);
       }
    }
+
+   // CraftBukkit start
+   default java.util.List<ItemStack> getContents() {
+      return Collections.emptyList();
+   }
+
+   default void onOpen(CraftHumanEntity who) {
+   }
+
+   default void onClose(CraftHumanEntity who) {
+   }
+
+   // Mohist start - fix exoticbirds mod
+   default java.util.List<org.bukkit.entity.HumanEntity> getViewers() {
+      return Collections.emptyList();
+   }
+   // Mohist end
+
+   default org.bukkit.inventory.InventoryHolder getOwner() {
+      return this instanceof BlockEntity blockEntity ? InventoryOwner.get(blockEntity) : null;
+   }
+
+   default void setMaxStackSize(int size) {
+   }
+
+   default org.bukkit.Location getLocation(){
+      if (this instanceof BlockEntity entity) {
+         BlockPos blockPos = entity.getBlockPos();
+         return new Location(entity.getLevel().getWorld(), blockPos.getX(), blockPos.getY(), blockPos.getZ());
+      } else {
+         return null;
+      }
+   }
+
+   default RecipeHolder<?> getCurrentRecipe() {
+      return null;
+   }
+
+   default void setCurrentRecipe(RecipeHolder<?> recipe) {
+   }
+
+   int MAX_STACK = 64;
+   // CraftBukkit end
 }

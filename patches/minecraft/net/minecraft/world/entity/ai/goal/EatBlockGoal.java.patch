--- a/net/minecraft/world/entity/ai/goal/EatBlockGoal.java
+++ b/net/minecraft/world/entity/ai/goal/EatBlockGoal.java
@@ -10,73 +_,80 @@
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.predicate.BlockStatePredicate;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EatBlockGoal extends Goal {
-    private static final int EAT_ANIMATION_TICKS = 40;
-    private static final Predicate<BlockState> IS_TALL_GRASS = BlockStatePredicate.forBlock(Blocks.SHORT_GRASS);
-    private final Mob mob;
-    private final Level level;
-    private int eatAnimationTick;
-
-    public EatBlockGoal(Mob p_25207_) {
-        this.mob = p_25207_;
-        this.level = p_25207_.level();
-        this.setFlags(EnumSet.of(Goal.Flag.MOVE, Goal.Flag.LOOK, Goal.Flag.JUMP));
-    }
-
-    @Override
-    public boolean canUse() {
-        if (this.mob.getRandom().nextInt(this.mob.isBaby() ? 50 : 1000) != 0) {
-            return false;
-        } else {
-            BlockPos blockpos = this.mob.blockPosition();
-            return IS_TALL_GRASS.test(this.level.getBlockState(blockpos)) ? true : this.level.getBlockState(blockpos.below()).is(Blocks.GRASS_BLOCK);
-        }
-    }
-
-    @Override
-    public void start() {
-        this.eatAnimationTick = this.adjustedTickDelay(40);
-        this.level.broadcastEntityEvent(this.mob, (byte)10);
-        this.mob.getNavigation().stop();
-    }
-
-    @Override
-    public void stop() {
-        this.eatAnimationTick = 0;
-    }
-
-    @Override
-    public boolean canContinueToUse() {
-        return this.eatAnimationTick > 0;
-    }
-
-    public int getEatAnimationTick() {
-        return this.eatAnimationTick;
-    }
-
-    @Override
-    public void tick() {
-        this.eatAnimationTick = Math.max(0, this.eatAnimationTick - 1);
-        if (this.eatAnimationTick == this.adjustedTickDelay(4)) {
-            BlockPos blockpos = this.mob.blockPosition();
-            if (IS_TALL_GRASS.test(this.level.getBlockState(blockpos))) {
-                if (this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
-                    this.level.destroyBlock(blockpos, false);
-                }
-
-                this.mob.ate();
-            } else {
-                BlockPos blockpos1 = blockpos.below();
-                if (this.level.getBlockState(blockpos1).is(Blocks.GRASS_BLOCK)) {
-                    if (this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
-                        this.level.levelEvent(2001, blockpos1, Block.getId(Blocks.GRASS_BLOCK.defaultBlockState()));
-                        this.level.setBlock(blockpos1, Blocks.DIRT.defaultBlockState(), 2);
-                    }
-
-                    this.mob.ate();
-                }
-            }
-        }
-    }
+   private static final int EAT_ANIMATION_TICKS = 40;
+   private static final Predicate<BlockState> IS_TALL_GRASS = BlockStatePredicate.forBlock(Blocks.SHORT_GRASS);
+   private final Mob mob;
+   private final Level level;
+   private int eatAnimationTick;
+
+   public EatBlockGoal(Mob p_25207_) {
+      this.mob = p_25207_;
+      this.level = p_25207_.level();
+      this.setFlags(EnumSet.of(Goal.Flag.MOVE, Goal.Flag.LOOK, Goal.Flag.JUMP));
+   }
+
+   public boolean canUse() {
+      // Purpur start
+      net.minecraft.world.level.chunk.LevelChunk chunk = this.mob.level.getChunkAt(this.mob.blockPosition());
+      if (chunk == null || !((net.minecraft.server.level.ServerLevel) this.mob.level).getChunkSource().chunkMap.anyPlayerCloseEnoughForSpawning(this.mob.chunkPosition(), false)) {
+         return false;
+      }
+      // Purpur end
+      if (this.mob.getRandom().nextInt(this.mob.isBaby() ? 50 : 1000) != 0) {
+         return false;
+      } else {
+         BlockPos blockpos = this.mob.blockPosition();
+         if (IS_TALL_GRASS.test(this.level.getBlockState(blockpos))) {
+            return true;
+         } else {
+            return this.level.getBlockState(blockpos.below()).is(Blocks.GRASS_BLOCK);
+         }
+      }
+   }
+
+   public void start() {
+      this.eatAnimationTick = this.adjustedTickDelay(40);
+      this.level.broadcastEntityEvent(this.mob, (byte)10);
+      this.mob.getNavigation().stop();
+   }
+
+   public void stop() {
+      this.eatAnimationTick = 0;
+   }
+
+   public boolean canContinueToUse() {
+      return this.eatAnimationTick > 0;
+   }
+
+   public int getEatAnimationTick() {
+      return this.eatAnimationTick;
+   }
+
+   public void tick() {
+      this.eatAnimationTick = Math.max(0, this.eatAnimationTick - 1);
+      if (this.eatAnimationTick == this.adjustedTickDelay(4)) {
+         BlockPos blockpos = this.mob.blockPosition();
+         if (IS_TALL_GRASS.test(this.level.getBlockState(blockpos))) {
+            if (net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.level, this.mob) ||CraftEventFactory.callEntityChangeBlockEvent(this.mob, blockpos, Blocks.AIR.defaultBlockState(), !this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING))) {
+               this.level.destroyBlock(blockpos, false);
+            }
+
+            this.mob.ate();
+         } else {
+            BlockPos blockpos1 = blockpos.below();
+            if (this.level.getBlockState(blockpos1).is(Blocks.GRASS_BLOCK)) {
+               if (net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.level, this.mob) || CraftEventFactory.callEntityChangeBlockEvent(this.mob, blockpos1, Blocks.AIR.defaultBlockState(), !this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING))) {
+                  this.level.levelEvent(2001, blockpos1, Block.getId(Blocks.GRASS_BLOCK.defaultBlockState()));
+                  this.level.setBlock(blockpos1, Blocks.DIRT.defaultBlockState(), 2);
+               }
+
+               this.mob.ate();
+            }
+         }
+
+      }
+   }
 }

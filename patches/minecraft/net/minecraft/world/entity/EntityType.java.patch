--- a/net/minecraft/world/entity/EntityType.java
+++ b/net/minecraft/world/entity/EntityType.java
@@ -6,6 +_,7 @@
 import java.util.Optional;
 import java.util.Spliterator;
 import java.util.UUID;
+import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.Consumer;
 import java.util.function.Function;
 import java.util.stream.Stream;
@@ -160,6 +_,7 @@
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.event.entity.CreatureSpawnEvent;
 import org.slf4j.Logger;
 
 public class EntityType<T extends Entity> implements FeatureElement, EntityTypeTest<Entity, T> {
@@ -312,6 +_,11 @@
    private final EntityDimensions dimensions;
    private final FeatureFlagSet requiredFeatures;
 
+   private final java.util.function.Predicate<EntityType<?>> velocityUpdateSupplier;
+   private final java.util.function.ToIntFunction<EntityType<?>> trackingRangeSupplier;
+   private final java.util.function.ToIntFunction<EntityType<?>> updateIntervalSupplier;
+   private final java.util.function.BiFunction<net.minecraftforge.network.packets.SpawnEntity, Level, T> customClientFactory;
+
    private static <T extends Entity> EntityType<T> register(String p_20635_, EntityType.Builder<T> p_20636_) {
       return Registry.register(BuiltInRegistries.ENTITY_TYPE, p_20635_, p_20636_.build(p_20635_));
    }
@@ -325,33 +_,47 @@
    }
 
    public EntityType(EntityType.EntityFactory<T> p_273268_, MobCategory p_272918_, boolean p_273417_, boolean p_273389_, boolean p_273556_, boolean p_272654_, ImmutableSet<Block> p_273631_, EntityDimensions p_272946_, int p_272895_, int p_273451_, FeatureFlagSet p_273518_) {
-      this.factory = p_273268_;
-      this.category = p_272918_;
-      this.canSpawnFarFromPlayer = p_272654_;
-      this.serialize = p_273417_;
-      this.summon = p_273389_;
-      this.fireImmune = p_273556_;
-      this.immuneTo = p_273631_;
-      this.dimensions = p_272946_;
-      this.clientTrackingRange = p_272895_;
-      this.updateInterval = p_273451_;
-      this.requiredFeatures = p_273518_;
+       this(p_273268_, p_272918_, p_273417_, p_273389_, p_273556_, p_272654_, p_273631_, p_272946_, p_272895_, p_273451_, p_273518_, EntityType::defaultVelocitySupplier, EntityType::defaultTrackingRangeSupplier, EntityType::defaultUpdateIntervalSupplier, null);
+   }
+   public EntityType(EntityType.EntityFactory<T> p_251402_, MobCategory p_251431_, boolean p_251439_, boolean p_251973_, boolean p_252007_, boolean p_250908_, ImmutableSet<Block> p_250201_, EntityDimensions p_251742_, int p_250479_, int p_249249_, FeatureFlagSet p_250427_, final java.util.function.Predicate<EntityType<?>> velocityUpdateSupplier, final java.util.function.ToIntFunction<EntityType<?>> trackingRangeSupplier, final java.util.function.ToIntFunction<EntityType<?>> updateIntervalSupplier, final java.util.function.BiFunction<net.minecraftforge.network.packets.SpawnEntity, Level, T> customClientFactory) {
+      this.factory = p_251402_;
+      this.category = p_251431_;
+      this.canSpawnFarFromPlayer = p_250908_;
+      this.serialize = p_251439_;
+      this.summon = p_251973_;
+      this.fireImmune = p_252007_;
+      this.immuneTo = p_250201_;
+      this.dimensions = p_251742_;
+      this.clientTrackingRange = p_250479_;
+      this.updateInterval = p_249249_;
+      this.requiredFeatures = p_250427_;
+      this.velocityUpdateSupplier = velocityUpdateSupplier;
+      this.trackingRangeSupplier = trackingRangeSupplier;
+      this.updateIntervalSupplier = updateIntervalSupplier;
+      this.customClientFactory = customClientFactory;
    }
 
    @Nullable
    public T spawn(ServerLevel p_20593_, @Nullable ItemStack p_20594_, @Nullable Player p_20595_, BlockPos p_20596_, MobSpawnType p_20597_, boolean p_20598_, boolean p_20599_) {
+      // CraftBukkit start
+      return this.spawn(p_20593_, p_20594_, p_20595_, p_20596_, p_20597_, p_20598_, p_20599_, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SPAWNER_EGG);
+   }
+
+   @Nullable
+   public T spawn(ServerLevel pServerLevel, @Nullable ItemStack pStack, @Nullable Player pPlayer, BlockPos pPos, MobSpawnType pSpawnType, boolean pShouldOffsetY, boolean pShouldOffsetYMore, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason spawnReason) {
+      // CraftBukkit end
       Consumer<T> consumer;
       CompoundTag compoundtag;
-      if (p_20594_ != null) {
-         compoundtag = p_20594_.getTag();
-         consumer = createDefaultStackConfig(p_20593_, p_20594_, p_20595_);
+      if (pStack != null) {
+         compoundtag = pStack.getTag();
+         consumer = createDefaultStackConfig(pServerLevel, pStack, pPlayer);
       } else {
          consumer = (p_263563_) -> {
          };
          compoundtag = null;
       }
 
-      return this.spawn(p_20593_, compoundtag, consumer, p_20596_, p_20597_, p_20598_, p_20599_);
+      return this.spawn(pServerLevel, compoundtag, consumer, pPos, pSpawnType, pShouldOffsetY, pShouldOffsetYMore, spawnReason); // CraftBukkit
    }
 
    public static <T extends Entity> Consumer<T> createDefaultStackConfig(ServerLevel p_263583_, ItemStack p_263568_, @Nullable Player p_263575_) {
@@ -376,22 +_,40 @@
       }) : p_263579_;
    }
 
+   // Mohist start
+   public AtomicReference<CreatureSpawnEvent.SpawnReason> spawnReasonAtomicReference = new AtomicReference<>(CreatureSpawnEvent.SpawnReason.DEFAULT);
    @Nullable
    public T spawn(ServerLevel p_262634_, BlockPos p_262707_, MobSpawnType p_262597_) {
+      spawnReasonAtomicReference.set(CreatureSpawnEvent.SpawnReason.DEFAULT);
       return this.spawn(p_262634_, (CompoundTag)null, (Consumer<T>)null, p_262707_, p_262597_, false, false);
    }
 
    @Nullable
+   public T spawn(ServerLevel pLevel, BlockPos pPos, MobSpawnType pSpawnType, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason spawnReason) {
+      return this.spawn(pLevel,(CompoundTag)null, (Consumer<T>)null, pPos, pSpawnType, false, false, spawnReason);
+   }
+
+   @Nullable
    public T spawn(ServerLevel p_262704_, @Nullable CompoundTag p_262603_, @Nullable Consumer<T> p_262621_, BlockPos p_262672_, MobSpawnType p_262644_, boolean p_262690_, boolean p_262590_) {
+      // CraftBukkit start
       T t = this.create(p_262704_, p_262603_, p_262621_, p_262672_, p_262644_, p_262690_, p_262590_);
       if (t != null) {
-         p_262704_.addFreshEntityWithPassengers(t);
+         p_262704_.addFreshEntityWithPassengers(t, spawnReasonAtomicReference.getAndSet(CreatureSpawnEvent.SpawnReason.DEFAULT));
+         return !t.isRemoved() ? t : null; // Don't return an entity when CreatureSpawnEvent is canceled
+         // CraftBukkit end
       }
 
       return t;
    }
 
    @Nullable
+   public T spawn(ServerLevel pLevel, @Nullable CompoundTag pCompound, @Nullable Consumer<T> pConsumer, BlockPos pPos, MobSpawnType pSpawnType, boolean pShouldOffsetY, boolean pShouldOffsetYMore, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason spawnReason) {
+      spawnReasonAtomicReference.set(spawnReason);
+      return spawn(pLevel, pCompound, pConsumer, pPos, pSpawnType, pShouldOffsetY, pShouldOffsetYMore);
+   }
+   // Mohist end
+
+   @Nullable
    public T create(ServerLevel p_262637_, @Nullable CompoundTag p_262687_, @Nullable Consumer<T> p_262629_, BlockPos p_262595_, MobSpawnType p_262666_, boolean p_262685_, boolean p_262588_) {
       T t = this.create(p_262637_);
       if (t == null) {
@@ -605,14 +_,23 @@
    }
 
    public int clientTrackingRange() {
+      return trackingRangeSupplier.applyAsInt(this);
+   }
+   private int defaultTrackingRangeSupplier() {
       return this.clientTrackingRange;
    }
 
    public int updateInterval() {
+      return updateIntervalSupplier.applyAsInt(this);
+   }
+   private int defaultUpdateIntervalSupplier() {
       return this.updateInterval;
    }
 
    public boolean trackDeltas() {
+      return velocityUpdateSupplier.test(this);
+   }
+   private boolean defaultVelocitySupplier() {
       return this != PLAYER && this != LLAMA_SPIT && this != WITHER && this != BAT && this != ITEM_FRAME && this != GLOW_ITEM_FRAME && this != LEASH_KNOT && this != PAINTING && this != END_CRYSTAL && this != EVOKER_FANGS;
    }
 
@@ -639,6 +_,12 @@
       return this.builtInRegistryHolder;
    }
 
+   public T customClientSpawn(net.minecraftforge.network.packets.SpawnEntity packet, Level world) {
+       if (customClientFactory == null) return this.create(world);
+       return customClientFactory.apply(packet, world);
+   }
+   public Stream<TagKey<EntityType<?>>> getTags() {return this.builtInRegistryHolder().tags();}
+
    public static class Builder<T extends Entity> {
       private final EntityType.EntityFactory<T> factory;
       private final MobCategory category;
@@ -652,6 +_,11 @@
       private EntityDimensions dimensions = EntityDimensions.scalable(0.6F, 1.8F);
       private FeatureFlagSet requiredFeatures = FeatureFlags.VANILLA_SET;
 
+      private java.util.function.Predicate<EntityType<?>> velocityUpdateSupplier = EntityType::defaultVelocitySupplier;
+      private java.util.function.ToIntFunction<EntityType<?>> trackingRangeSupplier = EntityType::defaultTrackingRangeSupplier;
+      private java.util.function.ToIntFunction<EntityType<?>> updateIntervalSupplier = EntityType::defaultUpdateIntervalSupplier;
+      private java.util.function.BiFunction<net.minecraftforge.network.packets.SpawnEntity, Level, T> customClientFactory;
+
       private Builder(EntityType.EntityFactory<T> p_20696_, MobCategory p_20697_) {
          this.factory = p_20696_;
          this.category = p_20697_;
@@ -713,12 +_,36 @@
          return this;
       }
 
+      public EntityType.Builder<T> setUpdateInterval(int interval) {
+          this.updateIntervalSupplier = t->interval;
+          return this;
+      }
+
+      public EntityType.Builder<T> setTrackingRange(int range) {
+          this.trackingRangeSupplier = t->range;
+          return this;
+      }
+
+      public EntityType.Builder<T> setShouldReceiveVelocityUpdates(boolean value) {
+          this.velocityUpdateSupplier = t->value;
+          return this;
+      }
+
+      /**
+       * By default, entities are spawned clientside via {@link EntityType#create(Level)}}.
+       * If you need finer control over the spawning process, use this to get read access to the spawn packet.
+       */
+      public EntityType.Builder<T> setCustomClientFactory(java.util.function.BiFunction<net.minecraftforge.network.packets.SpawnEntity, Level, T> customClientFactory) {
+          this.customClientFactory = customClientFactory;
+          return this;
+      }
+
       public EntityType<T> build(String p_20713_) {
          if (this.serialize) {
             Util.fetchChoiceType(References.ENTITY_TREE, p_20713_);
          }
 
-         return new EntityType<>(this.factory, this.category, this.serialize, this.summon, this.fireImmune, this.canSpawnFarFromPlayer, this.immuneTo, this.dimensions, this.clientTrackingRange, this.updateInterval, this.requiredFeatures);
+         return new EntityType<>(this.factory, this.category, this.serialize, this.summon, this.fireImmune, this.canSpawnFarFromPlayer, this.immuneTo, this.dimensions, this.clientTrackingRange, this.updateInterval, this.requiredFeatures, velocityUpdateSupplier, trackingRangeSupplier, updateIntervalSupplier, customClientFactory);
       }
    }
 

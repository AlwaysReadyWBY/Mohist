--- a/net/minecraft/world/entity/LivingEntity.java
+++ b/net/minecraft/world/entity/LivingEntity.java
@@ -9,13 +_,18 @@
 import com.mojang.logging.LogUtils;
 import com.mojang.serialization.DataResult;
 import com.mojang.serialization.Dynamic;
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.ConcurrentModificationException;
+import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Optional;
+import java.util.Set;
 import java.util.UUID;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.BlockUtil;
@@ -29,6 +_,8 @@
 import net.minecraft.core.particles.ItemParticleOption;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
+import net.minecraft.nbt.FloatTag;
+import net.minecraft.nbt.IntTag;
 import net.minecraft.nbt.ListTag;
 import net.minecraft.nbt.NbtOps;
 import net.minecraft.nbt.Tag;
@@ -75,13 +_,14 @@
 import net.minecraft.world.entity.ai.attributes.DefaultAttributes;
 import net.minecraft.world.entity.ai.targeting.TargetingConditions;
 import net.minecraft.world.entity.animal.FlyingAnimal;
-import net.minecraft.world.entity.animal.Wolf;
 import net.minecraft.world.entity.boss.wither.WitherBoss;
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.AbstractArrow;
 import net.minecraft.world.food.FoodProperties;
+import net.minecraft.world.item.ArmorItem;
 import net.minecraft.world.item.AxeItem;
+import net.minecraft.world.item.BlockItem;
 import net.minecraft.world.item.ElytraItem;
 import net.minecraft.world.item.Equipable;
 import net.minecraft.world.item.Item;
@@ -95,6 +_,7 @@
 import net.minecraft.world.level.ClipContext;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.Level;
+import net.minecraft.world.level.block.AbstractSkullBlock;
 import net.minecraft.world.level.block.BedBlock;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.HoneyBlock;
@@ -115,14 +_,22 @@
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.scores.PlayerTeam;
+import org.bukkit.craftbukkit.v1_19_R3.attribute.CraftAttributeMap;
+import org.bukkit.craftbukkit.v1_19_R3.event.CraftEventFactory;
+import org.bukkit.event.entity.ArrowBodyCountChangeEvent;
+import org.bukkit.event.entity.EntityPotionEffectEvent;
+import org.bukkit.event.entity.EntityRegainHealthEvent;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
 import org.slf4j.Logger;
 
-public abstract class LivingEntity extends Entity implements Attackable {
+public abstract class LivingEntity extends Entity implements Attackable, net.minecraftforge.common.extensions.IForgeLivingEntity {
    private static final Logger f_201943_ = LogUtils.getLogger();
    private static final UUID f_20929_ = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
    private static final UUID f_20959_ = UUID.fromString("87f46a96-686f-4796-b035-22e16ee9e038");
    private static final UUID f_147184_ = UUID.fromString("1eaf83ff-7207-4596-b37a-d7a07b3ec4ce");
+   private static final UUID SLOW_FALLING_ID = UUID.fromString("A5B6CF2A-2F7C-31EF-9022-7C3E7D5E6ABA");
    private static final AttributeModifier f_20960_ = new AttributeModifier(f_20929_, "Sprinting speed boost", (double)0.3F, AttributeModifier.Operation.MULTIPLY_TOTAL);
+   private static final AttributeModifier SLOW_FALLING = new AttributeModifier(SLOW_FALLING_ID, "Slow falling acceleration reduction", -0.07, AttributeModifier.Operation.ADDITION); // Add -0.07 to 0.08 so we get the vanilla default of 0.01
    public static final int f_147166_ = 2;
    public static final int f_147167_ = 4;
    public static final int f_147168_ = 98;
@@ -165,6 +_,7 @@
    public int f_20915_;
    public int f_20916_;
    public int f_20917_;
+   public float hurtDir;
    public int f_20919_;
    public float f_20920_;
    public float f_20921_;
@@ -204,7 +_,7 @@
    public boolean f_20948_ = true;
    @Nullable
    public LivingEntity f_20949_;
-   private int f_20950_;
+   public int f_20950_;
    private LivingEntity f_20951_;
    private int f_20952_;
    private float f_20953_;
@@ -223,11 +_,34 @@
    private float f_20932_;
    protected Brain<?> f_20939_;
    private boolean f_217034_;
+   // CraftBukkit start
+   public int expToDrop;
+   public boolean forceDrops;
+   public ArrayList<org.bukkit.inventory.ItemStack> drops = new ArrayList<org.bukkit.inventory.ItemStack>();
+   public CraftAttributeMap craftAttributes;
+   public boolean collides = true;
+   public Set<UUID> collidableExemptions = new HashSet<>();
+   public boolean bukkitPickUpLoot;
+
+   @Override
+   public float getBukkitYaw() {
+      return m_6080_();
+   }
+   // CraftBukkit end
+   // Spigot start
+   public void inactiveTick()
+   {
+      super.inactiveTick();
+      ++this.f_20891_; // Above all the floats
+   }
+   // Spigot end
 
    protected LivingEntity(EntityType<? extends LivingEntity> p_20966_, Level p_20967_) {
       super(p_20966_, p_20967_);
       this.f_20943_ = new AttributeMap(DefaultAttributes.m_22297_(p_20966_));
-      this.m_21153_(this.m_21233_());
+      this.craftAttributes = new CraftAttributeMap(f_20943_); // CraftBukkit
+      // CraftBukkit - setHealth(getMaxHealth()) inlined and simplified to skip the instanceof check for EntityPlayer, as getBukkitEntity() is not initialized in constructor
+      this.f_19804_.m_135381_(LivingEntity.f_20961_, (float) this.m_21051_(Attributes.f_22276_).m_22135_());
       this.f_19850_ = true;
       this.f_20928_ = (float)((Math.random() + 1.0D) * (double)0.01F);
       this.m_20090_();
@@ -270,7 +_,7 @@
    }
 
    public static AttributeSupplier.Builder m_21183_() {
-      return AttributeSupplier.m_22244_().m_22266_(Attributes.f_22276_).m_22266_(Attributes.f_22278_).m_22266_(Attributes.f_22279_).m_22266_(Attributes.f_22284_).m_22266_(Attributes.f_22285_);
+      return AttributeSupplier.m_22244_().m_22266_(Attributes.f_22276_).m_22266_(Attributes.f_22278_).m_22266_(Attributes.f_22279_).m_22266_(Attributes.f_22284_).m_22266_(Attributes.f_22285_).m_22266_(net.minecraftforge.common.ForgeMod.SWIM_SPEED.get()).m_22266_(net.minecraftforge.common.ForgeMod.NAMETAG_DISTANCE.get()).m_22266_(net.minecraftforge.common.ForgeMod.ENTITY_GRAVITY.get()).m_22266_(net.minecraftforge.common.ForgeMod.STEP_HEIGHT_ADDITION.get());
    }
 
    protected void m_7840_(double p_20990_, boolean p_20991_, BlockState p_20992_, BlockPos p_20993_) {
@@ -288,13 +_,22 @@
          if (!p_20992_.m_60795_()) {
             double d0 = Math.min((double)(0.2F + f / 15.0F), 2.5D);
             int i = (int)(150.0D * d0);
-            ((ServerLevel)this.f_19853_).m_8767_(new BlockParticleOption(ParticleTypes.f_123794_, p_20992_), this.m_20185_(), this.m_20186_(), this.m_20189_(), i, 0.0D, 0.0D, 0.0D, (double)0.15F);
+            if (!p_20992_.addLandingEffects((ServerLevel)this.f_19853_, p_20993_, p_20992_, this, i)) {
+               // CraftBukkit start - visiblity api
+               if (this instanceof ServerPlayer) {
+                  ((ServerLevel) this.f_19853_).sendParticles((ServerPlayer) this, new BlockParticleOption(ParticleTypes.f_123794_, p_20992_).setPos(p_20993_), this.m_20185_(), this.m_20186_(), this.m_20189_(), i, 0.0D, 0.0D, 0.0D, (double) 0.15F, false);
+               } else {
+                  ((ServerLevel) this.f_19853_).m_8767_(new BlockParticleOption(ParticleTypes.f_123794_, p_20992_).setPos(p_20993_), this.m_20185_(), this.m_20186_(), this.m_20189_(), i, 0.0D, 0.0D, 0.0D, (double) 0.15F);
+               }
+               // CraftBukkit end
+            }
          }
       }
 
       super.m_7840_(p_20990_, p_20991_, p_20992_, p_20993_);
    }
 
+   @Deprecated //FORGE: Use canDrownInFluidType instead
    public boolean m_6040_() {
       return this.m_6336_() == MobType.f_21641_;
    }
@@ -335,8 +_,8 @@
             }
          }
 
-         if (this.m_204029_(FluidTags.f_13131_) && !this.f_19853_.m_8055_(BlockPos.m_274561_(this.m_20185_(), this.m_20188_(), this.m_20189_())).m_60713_(Blocks.f_50628_)) {
-            boolean flag1 = !this.m_6040_() && !MobEffectUtil.m_19588_(this) && (!flag || !((Player)this).m_150110_().f_35934_);
+         if (!this.getEyeInFluidType().isAir() && !this.f_19853_.m_8055_(BlockPos.m_274561_(this.m_20185_(), this.m_20188_(), this.m_20189_())).m_60713_(Blocks.f_50628_)) {
+            boolean flag1 = this.canDrownInFluidType(this.getEyeInFluidType()) && !MobEffectUtil.m_19588_(this) && (!flag || !((Player)this).m_150110_().f_35934_);
             if (flag1) {
                this.m_20301_(this.m_7302_(this.m_20146_()));
                if (this.m_20146_() == -20) {
@@ -354,10 +_,11 @@
                }
             }
 
-            if (!this.f_19853_.f_46443_ && this.m_20159_() && this.m_20202_() != null && this.m_20202_().m_275843_()) {
+            if (!this.f_19853_.f_46443_ && this.m_20159_() && this.m_20202_() != null && !this.m_20202_().canBeRiddenUnderFluidType(this.getEyeInFluidType(), this)) {
                this.m_8127_();
             }
-         } else if (this.m_20146_() < this.m_6062_()) {
+         } // Forge: Move to if statement since we need to increase the air supply if in bubble column or can't drown
+         if (this.m_20146_() < this.m_6062_() && (!this.canDrownInFluidType(this.getEyeInFluidType()) || this.f_19853_.m_8055_(BlockPos.m_274561_(this.m_20185_(), this.m_20188_(), this.m_20189_())).m_60713_(Blocks.f_50628_))) {
             this.m_20301_(this.m_7305_(this.m_20146_()));
          }
 
@@ -370,7 +_,7 @@
          }
       }
 
-      if (this.m_6084_() && (this.m_20071_() || this.f_146808_)) {
+      if (this.m_6084_() && (this.m_20071_() || this.f_146808_ || this.isInFluidType((fluidType, height) -> this.canFluidExtinguish(fluidType)))) {
          this.m_252836_();
       }
 
@@ -618,23 +_,27 @@
       return true;
    }
 
+   // Mohist start
+   public AtomicBoolean silent0 = new AtomicBoolean(false);
    public void m_238392_(EquipmentSlot p_238393_, ItemStack p_238394_, ItemStack p_238395_) {
       boolean flag = p_238395_.m_41619_() && p_238394_.m_41619_();
-      if (!flag && !ItemStack.m_150942_(p_238394_, p_238395_) && !this.f_19803_) {
-         Equipable equipable = Equipable.m_269088_(p_238395_);
-         if (equipable != null && !this.m_5833_() && equipable.m_40402_() == p_238393_) {
-            if (!this.f_19853_.m_5776_() && !this.m_20067_()) {
-               this.f_19853_.m_6263_((Player)null, this.m_20185_(), this.m_20186_(), this.m_20189_(), equipable.m_150681_(), this.m_5720_(), 1.0F, 1.0F);
-            }
-
-            if (this.m_213772_(p_238393_)) {
-               this.m_146850_(GameEvent.f_157811_);
-            }
+      if (!flag && !ItemStack.m_41746_(p_238394_, p_238395_) && !this.f_19803_) {
+         if (this.m_213772_(p_238393_)) {
+            this.m_146850_(GameEvent.f_157811_);
          }
 
       }
    }
 
+   // CraftBukkit start
+   // Mohist start
+   public void onEquipItem(EquipmentSlot p_238393_, ItemStack p_238394_, ItemStack p_238395_, boolean silent) {
+      silent0.set(silent);
+      m_238392_(p_238393_, p_238394_, p_238395_);
+   }
+   // CraftBukkit end
+   // Mohist end
+   
    public void m_142687_(Entity.RemovalReason p_276115_) {
       super.m_142687_(p_276115_);
       this.f_20939_.m_276084_();
@@ -687,6 +_,18 @@
          }
       }
 
+      // CraftBukkit start
+      if (p_21096_.m_128441_("Bukkit.MaxHealth")) {
+         Tag nbtbase = p_21096_.m_128423_("Bukkit.MaxHealth");
+         if (nbtbase.m_7060_() == 5) {
+            this.m_21051_(Attributes.f_22276_).m_22100_(((FloatTag) nbtbase).m_7061_());
+         } else if (nbtbase.m_7060_() == 3) {
+            this.m_21051_(Attributes.f_22276_).m_22100_(((IntTag) nbtbase).m_7061_());
+         }
+      }
+      // CraftBukkit end
+
+
       if (p_21096_.m_128425_("Health", 99)) {
          this.m_21153_(p_21096_.m_128457_("Health"));
       }
@@ -722,9 +_,31 @@
 
    }
 
+   // CraftBukkit start
+   private boolean isTickingEffects = false;
+   private List<ProcessableEffect> effectsToProcess = Lists.newArrayList();
+
+   private static class ProcessableEffect {
+
+      private MobEffect type;
+      private MobEffectInstance effect;
+      private final EntityPotionEffectEvent.Cause cause;
+
+      private ProcessableEffect(MobEffectInstance effect, EntityPotionEffectEvent.Cause cause) {
+         this.effect = effect;
+         this.cause = cause;
+      }
+
+      private ProcessableEffect(MobEffect type, EntityPotionEffectEvent.Cause cause) {
+         this.type = type;
+         this.cause = cause;
+      }
+   }
+    // CraftBukkit end
+
    protected void m_21217_() {
       Iterator<MobEffect> iterator = this.f_20945_.keySet().iterator();
-
+      isTickingEffects = true; // CraftBukkit
       try {
          while(iterator.hasNext()) {
             MobEffect mobeffect = iterator.next();
@@ -732,7 +_,8 @@
             if (!mobeffectinstance.m_19552_(this, () -> {
                this.m_141973_(mobeffectinstance, true, (Entity)null);
             })) {
-               if (!this.f_19853_.f_46443_) {
+               EntityPotionEffectEvent event = CraftEventFactory.callEntityPotionEffectChangeEvent(this, mobeffectinstance, null, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.EXPIRATION);
+               if (!this.f_19853_.f_46443_ && !net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.MobEffectEvent.Expired(this, mobeffectinstance)) && !event.isCancelled()) {
                   iterator.remove();
                   this.m_7285_(mobeffectinstance);
                }
@@ -743,6 +_,18 @@
       } catch (ConcurrentModificationException concurrentmodificationexception) {
       }
 
+      // CraftBukkit start
+      isTickingEffects = false;
+      for (ProcessableEffect e : effectsToProcess) {
+         if (e.effect != null) {
+            addEffect(e.effect, e.cause);
+         } else {
+            removeEffect(e.type, e.cause);
+         }
+      }
+      effectsToProcess.clear();
+      // CraftBukkit end
+
       if (this.f_20948_) {
          if (!this.f_19853_.f_46443_) {
             this.m_8034_();
@@ -782,8 +_,10 @@
          this.m_6842_(false);
       } else {
          Collection<MobEffectInstance> collection = this.f_20945_.values();
-         this.f_19804_.m_135381_(f_20963_, m_21179_(collection));
-         this.f_19804_.m_135381_(f_20962_, PotionUtils.m_43564_(collection));
+         net.minecraftforge.event.entity.living.PotionColorCalculationEvent event = new net.minecraftforge.event.entity.living.PotionColorCalculationEvent(this, PotionUtils.m_43564_(collection), m_21179_(collection), collection);
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event);
+         this.f_19804_.m_135381_(f_20963_, event.areParticlesHidden());
+         this.f_19804_.m_135381_(f_20962_, event.getColor());
          this.m_6842_(this.m_21023_(MobEffects.f_19609_));
       }
 
@@ -819,7 +_,7 @@
             d0 *= 0.5D;
          }
       }
-
+      d0 = net.minecraftforge.common.ForgeHooks.getEntityVisibilityMultiplier(this, p_20969_, d0);
       return d0;
    }
 
@@ -854,6 +_,8 @@
       this.f_19804_.m_135381_(f_20962_, 0);
    }
 
+   //Mohist start
+   public AtomicReference<EntityPotionEffectEvent.Cause> removeAllEffectsCause = new AtomicReference<>(EntityPotionEffectEvent.Cause.UNKNOWN);
    public boolean m_21219_() {
       if (this.f_19853_.f_46443_) {
          return false;
@@ -862,7 +_,15 @@
 
          boolean flag;
          for(flag = false; iterator.hasNext(); flag = true) {
-            this.m_7285_(iterator.next());
+            // CraftBukkit start
+            MobEffectInstance effect = iterator.next();
+            if(net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.MobEffectEvent.Remove(this, effect))) continue;
+            EntityPotionEffectEvent event = CraftEventFactory.callEntityPotionEffectChangeEvent(this, effect, null, removeAllEffectsCause.getAndSet(EntityPotionEffectEvent.Cause.UNKNOWN), EntityPotionEffectEvent.Action.CLEARED);
+            if (event.isCancelled()) {
+               continue;
+            }
+            this.m_7285_(effect);
+            // CraftBukkit end
             iterator.remove();
          }
 
@@ -870,6 +_,12 @@
       }
    }
 
+   public boolean removeAllEffects(EntityPotionEffectEvent.Cause cause) {
+      removeAllEffectsCause.set(cause);
+      return m_21219_();
+   }
+   // Mohist end
+
    public Collection<MobEffectInstance> m_21220_() {
       return this.f_20945_.values();
    }
@@ -891,25 +_,63 @@
       return this.m_147207_(p_21165_, (Entity)null);
    }
 
+   // CraftBukkit start
+   public boolean addEffect(MobEffectInstance p_147208_, EntityPotionEffectEvent.Cause cause) {
+      return addEffect(p_147208_, (Entity) null, cause);
+   }
+
+   // Mohist start
+   public static AtomicReference<EntityPotionEffectEvent.Cause> addEffectCause = new AtomicReference<>(EntityPotionEffectEvent.Cause.UNKNOWN);
    public boolean m_147207_(MobEffectInstance p_147208_, @Nullable Entity p_147209_) {
+      if (isTickingEffects) {
+         effectsToProcess.add(new ProcessableEffect(p_147208_, addEffectCause.getAndSet(EntityPotionEffectEvent.Cause.UNKNOWN)));
+         return true;
+      }
+      // CraftBukkit end
       if (!this.m_7301_(p_147208_)) {
          return false;
       } else {
          MobEffectInstance mobeffectinstance = this.f_20945_.get(p_147208_.m_19544_());
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.MobEffectEvent.Added(this, mobeffectinstance, p_147208_, p_147209_));
+         // CraftBukkit start
+         boolean override = false;
+         if (mobeffectinstance != null) {
+            override = new MobEffectInstance(mobeffectinstance).m_19558_(p_147208_);
+         }
+
+         EntityPotionEffectEvent event = CraftEventFactory.callEntityPotionEffectChangeEvent(this, mobeffectinstance, p_147208_, addEffectCause.getAndSet(EntityPotionEffectEvent.Cause.UNKNOWN), override);
+         if (event.isCancelled()) {
+            return false;
+         }
+         // CraftBukkit end
          if (mobeffectinstance == null) {
             this.f_20945_.put(p_147208_.m_19544_(), p_147208_);
             this.m_142540_(p_147208_, p_147209_);
             return true;
          } else if (mobeffectinstance.m_19558_(p_147208_)) {
+            // CraftBukkit start
+         } else if (event.isOverride()) {
+            mobeffectinstance.m_19558_(p_147208_);
             this.m_141973_(mobeffectinstance, true, p_147209_);
+            // CraftBukkit end
             return true;
          } else {
             return false;
          }
       }
-   }
+      return false;
+   }
+
+   public boolean addEffect(MobEffectInstance p_147208_, @Nullable Entity p_147209_, EntityPotionEffectEvent.Cause cause) {
+      addEffectCause.set(cause);
+      return m_147207_(p_147208_, p_147209_);
+   }
+   // Mohist end
 
    public boolean m_7301_(MobEffectInstance p_21197_) {
+      net.minecraftforge.event.entity.living.MobEffectEvent.Applicable event = new net.minecraftforge.event.entity.living.MobEffectEvent.Applicable(this, p_21197_);
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event);
+      if (event.getResult() != net.minecraftforge.eventbus.api.Event.Result.DEFAULT) return event.getResult() == net.minecraftforge.eventbus.api.Event.Result.ALLOW;
       if (this.m_6336_() == MobType.f_21641_) {
          MobEffect mobeffect = p_21197_.m_19544_();
          if (mobeffect == MobEffects.f_19605_ || mobeffect == MobEffects.f_19614_) {
@@ -936,12 +_,35 @@
       return this.m_6336_() == MobType.f_21641_;
    }
 
+   // Mohist start
+   public AtomicReference<EntityPotionEffectEvent.Cause> removeEffectNoUpdateCause = new AtomicReference<>(EntityPotionEffectEvent.Cause.UNKNOWN);
    @Nullable
    public MobEffectInstance m_6234_(@Nullable MobEffect p_21164_) {
+      if (isTickingEffects) {
+         effectsToProcess.add(new ProcessableEffect(p_21164_, removeEffectNoUpdateCause.getAndSet(EntityPotionEffectEvent.Cause.UNKNOWN)));
+         return null;
+      }
+
+      MobEffectInstance effect = this.f_20945_.get(p_21164_);
+      if (effect == null) {
+         return null;
+      }
+
+      EntityPotionEffectEvent event = CraftEventFactory.callEntityPotionEffectChangeEvent(this, effect, null, removeEffectNoUpdateCause.getAndSet(EntityPotionEffectEvent.Cause.UNKNOWN));
+      if (event.isCancelled()) {
+         return null;
+      }
       return this.f_20945_.remove(p_21164_);
    }
 
+   @Nullable
+   public MobEffectInstance c(@Nullable MobEffect p_21164_, EntityPotionEffectEvent.Cause cause) {
+      removeEffectNoUpdateCause.set(cause);
+      return m_6234_(p_21164_);
+   }
+
    public boolean m_21195_(MobEffect p_21196_) {
+      if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.MobEffectEvent.Remove(this, p_21196_))) return false;
       MobEffectInstance mobeffectinstance = this.m_6234_(p_21196_);
       if (mobeffectinstance != null) {
          this.m_7285_(mobeffectinstance);
@@ -951,6 +_,12 @@
       }
    }
 
+   public boolean removeEffect(MobEffect p_21196_, EntityPotionEffectEvent.Cause cause) {
+      removeEffectNoUpdateCause.set(cause);
+      return m_21195_(p_21196_);
+   }
+   // Mohist end
+
    protected void m_142540_(MobEffectInstance p_147190_, @Nullable Entity p_147191_) {
       this.f_20948_ = true;
       if (!this.f_19853_.f_46443_) {
@@ -977,19 +_,56 @@
 
    }
 
+   public AtomicReference<RegainReason> regainReason0 = new AtomicReference<>(RegainReason.CUSTOM);
    public void m_5634_(float p_21116_) {
+      p_21116_ = net.minecraftforge.event.ForgeEventFactory.onLivingHeal(this, p_21116_);
+      if (p_21116_ <= 0) return;
       float f = this.m_21223_();
       if (f > 0.0F) {
-         this.m_21153_(f + p_21116_);
+         EntityRegainHealthEvent event = new EntityRegainHealthEvent(this.getBukkitEntity(), f, regainReason0.getAndSet(RegainReason.CUSTOM));
+         // Suppress during worldgen
+         if (this.valid) {
+            this.f_19853_.getCraftServer().getPluginManager().callEvent(event);
+         }
+
+         if (!event.isCancelled()) {
+            this.m_21153_((float) (this.m_21223_() + event.getAmount()));
+         }
+         // CraftBukkit end
       }
+   }
 
+   public void heal(float p_21116_, EntityRegainHealthEvent.RegainReason regainReason) {
+      this.regainReason0.set(regainReason);
+      this.m_5634_(p_21116_);
    }
 
    public float m_21223_() {
+      // CraftBukkit start - Use unscaled health
+      if (this instanceof ServerPlayer) {
+         return (float) ((ServerPlayer) this).getBukkitEntity().getHealth();
+      }
+      // CraftBukkit end
       return this.f_19804_.m_135370_(f_20961_);
    }
 
    public void m_21153_(float p_21154_) {
+      // CraftBukkit start - Handle scaled health
+      if (this instanceof ServerPlayer) {
+         org.bukkit.craftbukkit.v1_19_R3.entity.CraftPlayer player = ((ServerPlayer) this).getBukkitEntity();
+         // Squeeze
+         if (p_21154_ < 0.0F) {
+            player.setRealHealth(0.0D);
+         } else if (p_21154_ > player.getMaxHealth()) {
+            player.setRealHealth(player.getMaxHealth());
+         } else {
+            player.setRealHealth(p_21154_);
+         }
+
+         player.updateScaledHealth(false);
+         return;
+      }
+      // CraftBukkit end
       this.f_19804_.m_135381_(f_20961_, Mth.m_14036_(p_21154_, 0.0F, this.m_21233_()));
    }
 
@@ -998,11 +_,12 @@
    }
 
    public boolean m_6469_(DamageSource p_21016_, float p_21017_) {
+      if (!net.minecraftforge.common.ForgeHooks.onLivingAttack(this, p_21016_, p_21017_)) return false;
       if (this.m_6673_(p_21016_)) {
          return false;
       } else if (this.f_19853_.f_46443_) {
          return false;
-      } else if (this.m_21224_()) {
+      } else if (this.m_213877_() || this.f_20890_ || this.m_21223_() <= 0.0F) { // CraftBukkit - Don't allow entities that got set to dead/killed elsewhere to get damaged and die
          return false;
       } else if (p_21016_.m_269533_(DamageTypeTags.f_268745_) && this.m_21023_(MobEffects.f_19607_)) {
          return false;
@@ -1016,9 +_,11 @@
          boolean flag = false;
          float f1 = 0.0F;
          if (p_21017_ > 0.0F && this.m_21275_(p_21016_)) {
-            this.m_7909_(p_21017_);
-            f1 = p_21017_;
-            p_21017_ = 0.0F;
+            net.minecraftforge.event.entity.living.ShieldBlockEvent ev = net.minecraftforge.common.ForgeHooks.onShieldBlock(this, p_21016_, p_21017_);
+            if(!ev.isCanceled()) {
+            if(ev.shieldTakesDamage()) this.m_7909_(p_21017_);
+            f1 = ev.getBlockedDamage();
+            p_21017_ -= ev.getBlockedDamage();
             if (!p_21016_.m_269533_(DamageTypeTags.f_268524_)) {
                Entity entity = p_21016_.m_7640_();
                if (entity instanceof LivingEntity) {
@@ -1033,6 +_,7 @@
          if (p_21016_.m_269533_(DamageTypeTags.f_268419_) && this.m_6095_().m_204039_(EntityTypeTags.f_144295_)) {
             p_21017_ *= 5.0F;
          }
+         }
 
          this.f_267362_.m_267771_(1.5F);
          boolean flag1 = true;
@@ -1070,11 +_,10 @@
                Player player1 = (Player)entity1;
                this.f_20889_ = 100;
                this.f_20888_ = player1;
-            } else if (entity1 instanceof Wolf) {
-               Wolf wolf = (Wolf)entity1;
-               if (wolf.m_21824_()) {
+            } else if (entity1 instanceof net.minecraft.world.entity.TamableAnimal tamableEntity) {
+               if (tamableEntity.m_21824_()) {
                   this.f_20889_ = 100;
-                  LivingEntity livingentity2 = wolf.m_269323_();
+                  LivingEntity livingentity2 = tamableEntity.m_269323_();
                   if (livingentity2 instanceof Player) {
                      Player player = (Player)livingentity2;
                      this.f_20888_ = player;
@@ -1133,7 +_,7 @@
          if (this instanceof ServerPlayer) {
             CriteriaTriggers.f_10574_.m_35174_((ServerPlayer)this, p_21016_, f, p_21017_, flag);
             if (f1 > 0.0F && f1 < 3.4028235E37F) {
-               ((ServerPlayer)this).m_36222_(Stats.f_12932_, Math.round(f1 * 10.0F));
+               ((ServerPlayer)this).m_6278_(Stats.f_12988_.m_12902_(Stats.f_12932_), Math.round(f1 * 10.0F));
             }
          }
 
@@ -1161,7 +_,7 @@
 
          for(InteractionHand interactionhand : InteractionHand.values()) {
             ItemStack itemstack1 = this.m_21120_(interactionhand);
-            if (itemstack1.m_150930_(Items.f_42747_)) {
+            if (itemstack1.m_150930_(Items.f_42747_) && net.minecraftforge.common.ForgeHooks.onLivingUseTotem(this, p_21263_, itemstack1, interactionhand)) {
                itemstack = itemstack1.m_41777_();
                itemstack1.m_41774_(1);
                break;
@@ -1171,14 +_,18 @@
          if (itemstack != null) {
             if (this instanceof ServerPlayer) {
                ServerPlayer serverplayer = (ServerPlayer)this;
-               serverplayer.m_36246_(Stats.f_12982_.m_12902_(Items.f_42747_));
+               serverplayer.m_6278_(Stats.f_12982_.m_12902_(Items.f_42747_), 1);
                CriteriaTriggers.f_10551_.m_74431_(serverplayer, itemstack);
             }
 
             this.m_21153_(1.0F);
+            removeAllEffectsCause.set(EntityPotionEffectEvent.Cause.TOTEM);
             this.m_21219_();
+            addEffectCause.set(EntityPotionEffectEvent.Cause.TOTEM);
             this.m_7292_(new MobEffectInstance(MobEffects.f_19605_, 900, 1));
+            addEffectCause.set(EntityPotionEffectEvent.Cause.TOTEM);
             this.m_7292_(new MobEffectInstance(MobEffects.f_19617_, 100, 1));
+            addEffectCause.set(EntityPotionEffectEvent.Cause.TOTEM);
             this.m_7292_(new MobEffectInstance(MobEffects.f_19607_, 800, 0));
             this.f_19853_.m_7605_(this, (byte)35);
          }
@@ -1240,6 +_,7 @@
    }
 
    public void m_6667_(DamageSource p_21014_) {
+      if (net.minecraftforge.common.ForgeHooks.onLivingDeath(this, p_21014_)) return;
       if (!this.m_213877_() && !this.f_20890_) {
          Entity entity = p_21014_.m_7639_();
          LivingEntity livingentity = this.m_21232_();
@@ -1252,7 +_,7 @@
          }
 
          if (!this.f_19853_.f_46443_ && this.m_8077_()) {
-            f_201943_.info("Named entity {} died: {}", this, this.m_21231_().m_19293_().getString());
+            if (org.spigotmc.SpigotConfig.logNamedDeaths) f_201943_.info("Named entity {} died: {}", this, this.m_21231_().m_19293_().getString());
          }
 
          this.f_20890_ = true;
@@ -1275,10 +_,10 @@
       if (!this.f_19853_.f_46443_) {
          boolean flag = false;
          if (p_21269_ instanceof WitherBoss) {
-            if (this.f_19853_.m_46469_().m_46207_(GameRules.f_46132_)) {
+            if (net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.f_19853_, p_21269_)) {
                BlockPos blockpos = this.m_20183_();
                BlockState blockstate = Blocks.f_50070_.m_49966_();
-               if (this.f_19853_.m_8055_(blockpos).m_60795_() && blockstate.m_60710_(this.f_19853_, blockpos)) {
+               if (this.f_19853_.m_46859_(blockpos) && blockstate.m_60710_(this.f_19853_, blockpos)) {
                   this.f_19853_.m_7731_(blockpos, blockstate, 3);
                   flag = true;
                }
@@ -1295,12 +_,9 @@
 
    protected void m_6668_(DamageSource p_21192_) {
       Entity entity = p_21192_.m_7639_();
-      int i;
-      if (entity instanceof Player) {
-         i = EnchantmentHelper.m_44930_((LivingEntity)entity);
-      } else {
-         i = 0;
-      }
+
+      int i = net.minecraftforge.common.ForgeHooks.getLootingLevel(this, entity, p_21192_);
+      this.captureDrops(new java.util.ArrayList<>());
 
       boolean flag = this.f_20889_ > 0;
       if (this.m_6125_() && this.f_19853_.m_46469_().m_46207_(GameRules.f_46135_)) {
@@ -1310,6 +_,10 @@
 
       this.m_5907_();
       this.m_21226_();
+
+      Collection<ItemEntity> drops = captureDrops(null);
+      if (!net.minecraftforge.common.ForgeHooks.onLivingDrops(this, p_21192_, drops, i, f_20889_ > 0))
+         drops.forEach(e -> f_19853_.m_7967_(e));
    }
 
    protected void m_5907_() {
@@ -1317,7 +_,8 @@
 
    protected void m_21226_() {
       if (this.f_19853_ instanceof ServerLevel && !this.m_217046_() && (this.m_6124_() || this.f_20889_ > 0 && this.m_6149_() && this.f_19853_.m_46469_().m_46207_(GameRules.f_46135_))) {
-         ExperienceOrb.m_147082_((ServerLevel)this.f_19853_, this.m_20182_(), this.m_213860_());
+         int reward = net.minecraftforge.event.ForgeEventFactory.getExperienceDrop(this, this.f_20888_, this.m_213860_());
+         ExperienceOrb.m_147082_((ServerLevel)this.f_19853_, this.m_20182_(), reward);
       }
 
    }
@@ -1333,7 +_,8 @@
       ResourceLocation resourcelocation = this.m_5743_();
       LootTable loottable = this.f_19853_.m_7654_().m_129898_().m_79217_(resourcelocation);
       LootContext.Builder lootcontext$builder = this.m_7771_(p_21022_, p_21021_);
-      loottable.m_79148_(lootcontext$builder.m_78975_(LootContextParamSets.f_81415_), this::m_19983_);
+      LootContext ctx = lootcontext$builder.m_78975_(LootContextParamSets.f_81415_);
+      loottable.m_230922_(ctx).forEach(this::m_19983_);
    }
 
    protected LootContext.Builder m_7771_(boolean p_21105_, DamageSource p_21106_) {
@@ -1346,6 +_,11 @@
    }
 
    public void m_147240_(double p_147241_, double p_147242_, double p_147243_) {
+      net.minecraftforge.event.entity.living.LivingKnockBackEvent event = net.minecraftforge.common.ForgeHooks.onLivingKnockBack(this, (float) p_147241_, p_147242_, p_147243_);
+      if(event.isCanceled()) return;
+      p_147241_ = event.getStrength();
+      p_147242_ = event.getRatioX();
+      p_147243_ = event.getRatioZ();
       p_147241_ *= 1.0D - this.m_21133_(Attributes.f_22278_);
       if (!(p_147241_ <= 0.0D)) {
          this.f_19812_ = true;
@@ -1405,6 +_,28 @@
       return p_21202_.m_41616_();
    }
 
+   // CraftBukkit start - Add delegate methods
+   public SoundEvent getHurtSound0(DamageSource damagesource) {
+      return m_7975_(damagesource);
+   }
+
+   public SoundEvent getDeathSound0() {
+      return m_5592_();
+   }
+
+   public SoundEvent getFallDamageSound0(int fallHeight) {
+      return m_5896_(fallHeight);
+   }
+
+   public SoundEvent getDrinkingSound0(ItemStack itemstack) {
+      return m_7838_(itemstack);
+   }
+
+   public SoundEvent getEatingSound0(ItemStack itemstack) {
+      return m_7866_(itemstack);
+   }
+   // CraftBukkit end
+
    public void m_6853_(boolean p_21182_) {
       super.m_6853_(p_21182_);
       if (p_21182_) {
@@ -1423,15 +_,9 @@
       } else {
          BlockPos blockpos = this.m_20183_();
          BlockState blockstate = this.m_146900_();
-         if (blockstate.m_204336_(BlockTags.f_13082_)) {
-            this.f_20957_ = Optional.of(blockpos);
-            return true;
-         } else if (blockstate.m_60734_() instanceof TrapDoorBlock && this.m_21176_(blockpos, blockstate)) {
-            this.f_20957_ = Optional.of(blockpos);
-            return true;
-         } else {
-            return false;
-         }
+         Optional<BlockPos> ladderPos = net.minecraftforge.common.ForgeHooks.isLivingOnLadder(blockstate, f_19853_, blockpos, this);
+         if (ladderPos.isPresent()) this.f_20957_ = ladderPos;
+         return ladderPos.isPresent();
       }
    }
 
@@ -1451,6 +_,11 @@
    }
 
    public boolean m_142535_(float p_147187_, float p_147188_, DamageSource p_147189_) {
+      float[] ret = net.minecraftforge.common.ForgeHooks.onLivingFall(this, p_147187_, p_147188_);
+      if (ret == null) return false;
+      p_147187_ = ret[0];
+      p_147188_ = ret[1];
+
       boolean flag = super.m_142535_(p_147187_, p_147188_, p_147189_);
       int i = this.m_5639_(p_147187_, p_147188_);
       if (i > 0) {
@@ -1478,9 +_,10 @@
          int i = Mth.m_14107_(this.m_20185_());
          int j = Mth.m_14107_(this.m_20186_() - (double)0.2F);
          int k = Mth.m_14107_(this.m_20189_());
-         BlockState blockstate = this.f_19853_.m_8055_(new BlockPos(i, j, k));
+         BlockPos pos = new BlockPos(i, j, k);
+         BlockState blockstate = this.f_19853_.m_8055_(pos);
          if (!blockstate.m_60795_()) {
-            SoundType soundtype = blockstate.m_60827_();
+            SoundType soundtype = blockstate.getSoundType(f_19853_, pos, this);
             this.m_5496_(soundtype.m_56779_(), soundtype.m_56773_() * 0.5F, soundtype.m_56774_() * 0.75F);
          }
 
@@ -1527,9 +_,9 @@
             float f2 = f1 - p_21194_;
             if (f2 > 0.0F && f2 < 3.4028235E37F) {
                if (this instanceof ServerPlayer) {
-                  ((ServerPlayer)this).m_36222_(Stats.f_12934_, Math.round(f2 * 10.0F));
+                  ((ServerPlayer)this).m_6278_(Stats.f_12988_.m_12902_(Stats.f_12934_), Math.round(f2 * 10.0F));
                } else if (p_21193_.m_7639_() instanceof ServerPlayer) {
-                  ((ServerPlayer)p_21193_.m_7639_()).m_36222_(Stats.f_12930_, Math.round(f2 * 10.0F));
+                  ((ServerPlayer)p_21193_.m_7639_()).m_6278_(Stats.f_12988_.m_12902_(Stats.f_12930_), Math.round(f2 * 10.0F));
                }
             }
          }
@@ -1551,6 +_,8 @@
 
    protected void m_6475_(DamageSource p_21240_, float p_21241_) {
       if (!this.m_6673_(p_21240_)) {
+         p_21241_ = net.minecraftforge.common.ForgeHooks.onLivingHurt(this, p_21240_, p_21241_);
+         if (p_21241_ <= 0) return;
          p_21241_ = this.m_21161_(p_21240_, p_21241_);
          p_21241_ = this.m_6515_(p_21240_, p_21241_);
          float f1 = Math.max(p_21241_ - this.m_6103_(), 0.0F);
@@ -1560,10 +_,11 @@
             Entity entity = p_21240_.m_7639_();
             if (entity instanceof ServerPlayer) {
                ServerPlayer serverplayer = (ServerPlayer)entity;
-               serverplayer.m_36222_(Stats.f_12929_, Math.round(f * 10.0F));
+               serverplayer.m_6278_(Stats.f_12988_.m_12902_(Stats.f_12929_), Math.round(f * 10.0F));
             }
          }
 
+         f1 = net.minecraftforge.common.ForgeHooks.onLivingDamage(this, p_21240_, f1);
          if (f1 != 0.0F) {
             float f2 = this.m_21223_();
             this.m_21231_().m_19289_(p_21240_, f2, f1);
@@ -1598,9 +_,25 @@
    }
 
    public final void m_21317_(int p_21318_) {
+         ArrowBodyCountChangeEvent event = CraftEventFactory.callArrowBodyCountChangeEvent( this, m_21234_(), p_21318_, false);
+         if(event.isCancelled()){
+            return;
+         }
+
+      // CraftBukkit end
       this.f_19804_.m_135381_(f_20940_, p_21318_);
    }
 
+   public final void setArrowCount(int p_21318_, boolean flag){
+      ArrowBodyCountChangeEvent event = CraftEventFactory.callArrowBodyCountChangeEvent( this, m_21234_(), p_21318_, flag );
+      if(event.isCancelled()){
+         return;
+      }
+
+      this.f_19804_.m_135381_(f_20940_, event.getNewAmount());
+   }
+   // CraftBukkit end
+
    public final int m_21235_() {
       return this.f_19804_.m_135370_(f_20941_);
    }
@@ -1622,6 +_,8 @@
    }
 
    public void m_21011_(InteractionHand p_21012_, boolean p_21013_) {
+      ItemStack stack = this.m_21120_(p_21012_);
+      if (!stack.m_41619_() && stack.onEntitySwing(this)) return;
       if (!this.f_20911_ || this.f_20913_ >= this.m_21304_() / 2 || this.f_20913_ < 0) {
          this.f_20913_ = -1;
          this.f_20911_ = true;
@@ -1927,14 +_,17 @@
       }
 
       this.f_19812_ = true;
+      net.minecraftforge.common.ForgeHooks.onLivingJump(this);
    }
 
+   @Deprecated // FORGE: use sinkInFluid instead
    protected void m_21208_() {
-      this.m_20256_(this.m_20184_().m_82520_(0.0D, (double)-0.04F, 0.0D));
+      this.sinkInFluid(net.minecraftforge.common.ForgeMod.WATER_TYPE.get());
    }
 
+   @Deprecated // FORGE: use jumpInFluid instead
    protected void m_203347_(TagKey<Fluid> p_204043_) {
-      this.m_20256_(this.m_20184_().m_82520_(0.0D, (double)0.04F, 0.0D));
+      this.m_20256_(this.m_20184_().m_82520_(0.0D, (double)0.04F * this.m_21051_(net.minecraftforge.common.ForgeMod.SWIM_SPEED.get()).m_22135_(), 0.0D));
    }
 
    protected float m_6108_() {
@@ -1948,14 +_,19 @@
    public void m_7023_(Vec3 p_21280_) {
       if (this.m_6109_()) {
          double d0 = 0.08D;
+         AttributeInstance gravity = this.m_21051_(net.minecraftforge.common.ForgeMod.ENTITY_GRAVITY.get());
          boolean flag = this.m_20184_().f_82480_ <= 0.0D;
          if (flag && this.m_21023_(MobEffects.f_19591_)) {
-            d0 = 0.01D;
+            if (!gravity.m_22109_(SLOW_FALLING)) gravity.m_22118_(SLOW_FALLING);
             this.m_183634_();
+         } else if (gravity.m_22109_(SLOW_FALLING)) {
+            gravity.m_22130_(SLOW_FALLING);
          }
+         d0 = gravity.m_22135_();
 
          FluidState fluidstate = this.f_19853_.m_6425_(this.m_20183_());
-         if (this.m_20069_() && this.m_6129_() && !this.m_203441_(fluidstate)) {
+         if ((this.m_20069_() || (this.isInFluidType(fluidstate) && fluidstate.getFluidType() != net.minecraftforge.common.ForgeMod.LAVA_TYPE.get())) && this.m_6129_() && !this.m_203441_(fluidstate)) {
+            if (this.m_20069_() || (this.isInFluidType(fluidstate) && !this.moveInFluid(fluidstate, p_21280_, d0))) {
             double d9 = this.m_20186_();
             float f4 = this.m_20142_() ? 0.9F : this.m_6108_();
             float f5 = 0.02F;
@@ -1977,6 +_,7 @@
                f4 = 0.96F;
             }
 
+            f5 *= (float)this.m_21051_(net.minecraftforge.common.ForgeMod.SWIM_SPEED.get()).m_22135_();
             this.m_19920_(f5, p_21280_);
             this.m_6478_(MoverType.SELF, this.m_20184_());
             Vec3 vec36 = this.m_20184_();
@@ -1990,6 +_,7 @@
             if (this.f_19862_ && this.m_20229_(vec32.f_82479_, vec32.f_82480_ + (double)0.6F - this.m_20186_() + d9, vec32.f_82481_)) {
                this.m_20334_(vec32.f_82479_, (double)0.3F, vec32.f_82481_);
             }
+            }
          } else if (this.m_20077_() && this.m_6129_() && !this.m_203441_(fluidstate)) {
             double d8 = this.m_20186_();
             this.m_19920_(0.02F, p_21280_);
@@ -2052,7 +_,7 @@
             }
          } else {
             BlockPos blockpos = this.m_20099_();
-            float f2 = this.f_19853_.m_8055_(blockpos).m_60734_().m_49958_();
+            float f2 = this.f_19853_.m_8055_(this.m_20099_()).getFriction(f_19853_, this.m_20099_(), this);
             float f3 = this.f_19861_ ? f2 * 0.91F : 0.91F;
             Vec3 vec35 = this.m_21074_(p_21280_, f2);
             double d2 = vec35.f_82480_;
@@ -2149,7 +_,7 @@
          double d0 = Mth.m_14008_(p_21298_.f_82479_, (double)-0.15F, (double)0.15F);
          double d1 = Mth.m_14008_(p_21298_.f_82481_, (double)-0.15F, (double)0.15F);
          double d2 = Math.max(p_21298_.f_82480_, (double)-0.15F);
-         if (d2 < 0.0D && !this.m_146900_().m_60713_(Blocks.f_50616_) && this.m_5791_() && this instanceof Player) {
+         if (d2 < 0.0D && !this.m_146900_().isScaffolding(this) && this.m_5791_() && this instanceof Player) {
             d2 = 0.0D;
          }
 
@@ -2181,6 +_,7 @@
    }
 
    public void m_8119_() {
+      if (net.minecraftforge.common.ForgeHooks.onLivingTick(this)) return;
       super.m_8119_();
       this.m_21329_();
       this.m_21333_();
@@ -2332,6 +_,7 @@
 
          ItemStack itemstack1 = this.m_6844_(equipmentslot);
          if (this.m_246525_(itemstack, itemstack1)) {
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.LivingEquipmentChangeEvent(this, equipmentslot, itemstack, itemstack1));
             if (map == null) {
                map = Maps.newEnumMap(EquipmentSlot.class);
             }
@@ -2477,6 +_,9 @@
       this.f_19853_.m_46473_().m_6180_("jump");
       if (this.f_20899_ && this.m_6129_()) {
          double d7;
+         net.minecraftforge.fluids.FluidType fluidType = this.getMaxHeightFluidType();
+         if (!fluidType.isAir()) d7 = this.getFluidTypeHeight(fluidType);
+         else
          if (this.m_20077_()) {
             d7 = this.m_204036_(FluidTags.f_13132_);
          } else {
@@ -2487,15 +_,17 @@
          double d8 = this.m_20204_();
          if (!flag || this.f_19861_ && !(d7 > d8)) {
             if (!this.m_20077_() || this.f_19861_ && !(d7 > d8)) {
+               if (fluidType.isAir() || this.f_19861_ && !(d7 > d8)) {
                if ((this.f_19861_ || flag && d7 <= d8) && this.f_20954_ == 0) {
                   this.m_6135_();
                   this.f_20954_ = 10;
                }
+               } else this.jumpInFluid(fluidType);
             } else {
-               this.m_203347_(FluidTags.f_13132_);
+               this.jumpInFluid(net.minecraftforge.common.ForgeMod.LAVA_TYPE.get());
             }
          } else {
-            this.m_203347_(FluidTags.f_13131_);
+            this.jumpInFluid(net.minecraftforge.common.ForgeMod.WATER_TYPE.get());
          }
       } else {
          this.f_20954_ = 0;
@@ -2555,6 +_,8 @@
       boolean flag = this.m_20291_(7);
       if (flag && !this.f_19861_ && !this.m_20159_() && !this.m_21023_(MobEffects.f_19620_)) {
          ItemStack itemstack = this.m_6844_(EquipmentSlot.CHEST);
+         flag = itemstack.canElytraFly(this) && itemstack.elytraFlightTick(this, this.f_20937_);
+         if (false) //Forge: Moved to ElytraItem
          if (itemstack.m_150930_(Items.f_42741_) && ElytraItem.m_41140_(itemstack)) {
             flag = true;
             int i = this.f_20937_ + 1;
@@ -2786,23 +_,28 @@
 
    private void m_21329_() {
       if (this.m_6117_()) {
-         if (ItemStack.m_41746_(this.m_21120_(this.m_7655_()), this.f_20935_)) {
-            this.f_20935_ = this.m_21120_(this.m_7655_());
+         ItemStack itemStack = this.m_21120_(this.m_7655_());
+         if (net.minecraftforge.common.ForgeHooks.canContinueUsing(this.f_20935_, itemStack)) {
+            this.f_20935_ = itemStack;
+         }
+         if (itemStack == this.f_20935_) {
             this.m_142106_(this.f_20935_);
          } else {
             this.m_5810_();
          }
       }
-
    }
 
    protected void m_142106_(ItemStack p_147201_) {
-      p_147201_.m_41731_(this.f_19853_, this, this.m_21212_());
+      if (!p_147201_.m_41619_())
+         this.f_20936_ = net.minecraftforge.event.ForgeEventFactory.onItemUseTick(this, p_147201_, this.m_21212_());
+      if (this.m_21212_() > 0)
+         p_147201_.m_41731_(this.f_19853_, this, this.m_21212_());
       if (this.m_21332_()) {
          this.m_21137_(p_147201_, 5);
       }
 
-      if (--this.f_20936_ == 0 && !this.f_19853_.f_46443_ && !p_147201_.m_41781_()) {
+      if (--this.f_20936_ <= 0 && !this.f_19853_.f_46443_ && !p_147201_.m_41781_()) {
          this.m_8095_();
       }
 
@@ -2810,7 +_,7 @@
 
    private boolean m_21332_() {
       int i = this.m_21212_();
-      FoodProperties foodproperties = this.f_20935_.m_41720_().m_41473_();
+      FoodProperties foodproperties = this.f_20935_.getFoodProperties(this);
       boolean flag = foodproperties != null && foodproperties.m_38748_();
       flag |= i <= this.f_20935_.m_41779_() - 7;
       return flag && i % 4 == 0;
@@ -2840,8 +_,10 @@
    public void m_6672_(InteractionHand p_21159_) {
       ItemStack itemstack = this.m_21120_(p_21159_);
       if (!itemstack.m_41619_() && !this.m_6117_()) {
+         int duration = net.minecraftforge.event.ForgeEventFactory.onItemUseStart(this, itemstack, itemstack.m_41779_());
+         if (duration <= 0) return;
          this.f_20935_ = itemstack;
-         this.f_20936_ = itemstack.m_41779_();
+         this.f_20936_ = duration;
          if (!this.f_19853_.f_46443_) {
             this.m_21155_(1, true);
             this.m_21155_(2, p_21159_ == InteractionHand.OFF_HAND);
@@ -2902,6 +_,9 @@
          vec31 = vec31.m_82496_(-this.m_146909_() * ((float)Math.PI / 180F));
          vec31 = vec31.m_82524_(-this.m_146908_() * ((float)Math.PI / 180F));
          vec31 = vec31.m_82520_(this.m_20185_(), this.m_20188_(), this.m_20189_());
+         if (this.f_19853_ instanceof ServerLevel) //Forge: Fix MC-2518 spawnParticle is nooped on server, need to use server specific variant
+             ((ServerLevel)this.f_19853_).m_8767_(new ItemParticleOption(ParticleTypes.f_123752_, p_21061_), vec31.f_82479_, vec31.f_82480_, vec31.f_82481_, 1, vec3.f_82479_, vec3.f_82480_ + 0.05D, vec3.f_82481_, 0.0D);
+         else
          this.f_19853_.m_7106_(new ItemParticleOption(ParticleTypes.f_123752_, p_21061_), vec31.f_82479_, vec31.f_82480_, vec31.f_82481_, vec3.f_82479_, vec3.f_82480_ + 0.05D, vec3.f_82481_);
       }
 
@@ -2915,7 +_,8 @@
          } else {
             if (!this.f_20935_.m_41619_() && this.m_6117_()) {
                this.m_21137_(this.f_20935_, 16);
-               ItemStack itemstack = this.f_20935_.m_41671_(this.f_19853_, this);
+               ItemStack copy = this.f_20935_.m_41777_();
+               ItemStack itemstack = net.minecraftforge.event.ForgeEventFactory.onItemUseFinish(this, copy, m_21212_(), this.f_20935_.m_41671_(this.f_19853_, this));
                if (itemstack != this.f_20935_) {
                   this.m_21008_(interactionhand, itemstack);
                }
@@ -2941,7 +_,11 @@
 
    public void m_21253_() {
       if (!this.f_20935_.m_41619_()) {
+         if (!net.minecraftforge.event.ForgeEventFactory.onUseItemStop(this, f_20935_, this.m_21212_())) {
+            ItemStack copy = this instanceof Player ? f_20935_.m_41777_() : null;
          this.f_20935_.m_41674_(this.f_19853_, this, this.m_21212_());
+           if (copy != null && f_20935_.m_41619_()) net.minecraftforge.event.ForgeEventFactory.onPlayerDestroyItem((Player)this, copy, m_7655_());
+         }
          if (this.f_20935_.m_41781_()) {
             this.m_21329_();
          }
@@ -2951,6 +_,7 @@
    }
 
    public void m_5810_() {
+      if (this.m_6117_() && !this.f_20935_.m_41619_()) this.f_20935_.onStopUsing(this, f_20936_);
       if (!this.f_19853_.f_46443_) {
          boolean flag = this.m_6117_();
          this.m_21155_(1, false);
@@ -2966,7 +_,7 @@
    public boolean m_21254_() {
       if (this.m_6117_() && !this.f_20935_.m_41619_()) {
          Item item = this.f_20935_.m_41720_();
-         if (item.m_6164_(this.f_20935_) != UseAnim.BLOCK) {
+         if (item.m_6164_(this.f_20935_) != UseAnim.BLOCK && !this.f_20935_.canPerformAction(net.minecraftforge.common.ToolActions.SHIELD_BLOCK)) { // TODO 1.20 only use the tool action
             return false;
          } else {
             return item.m_8105_(this.f_20935_) - this.f_20936_ >= 5;
@@ -2992,6 +_,11 @@
       return this.f_20937_;
    }
 
+   public Optional<Boolean> randomTeleport(double d0, double d1, double d2, boolean flag, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
+      // CraftBukkit end
+      return Optional.of(m_20984_(d0, d1, d2, flag)); // CraftBukkit
+   }
+
    public boolean m_20984_(double p_20985_, double p_20986_, double p_20987_, boolean p_20988_) {
       double d0 = this.m_20185_();
       double d1 = this.m_20186_();
@@ -3092,8 +_,8 @@
       }
 
       BlockState blockstate = this.f_19853_.m_8055_(p_21141_);
-      if (blockstate.m_60734_() instanceof BedBlock) {
-         this.f_19853_.m_7731_(p_21141_, blockstate.m_61124_(BedBlock.f_49441_, Boolean.valueOf(true)), 3);
+      if (blockstate.isBed(f_19853_, p_21141_, this)) {
+         blockstate.setBedOccupied(f_19853_, p_21141_, this, true);
       }
 
       this.m_20124_(Pose.SLEEPING);
@@ -3109,16 +_,16 @@
 
    private boolean m_21334_() {
       return this.m_21257_().map((p_269792_) -> {
-         return this.f_19853_.m_8055_(p_269792_).m_60734_() instanceof BedBlock;
+         return net.minecraftforge.event.ForgeEventFactory.fireSleepingLocationCheck(this, p_269792_);
       }).orElse(false);
    }
 
    public void m_5796_() {
       this.m_21257_().filter(this.f_19853_::m_46805_).ifPresent((p_261435_) -> {
          BlockState blockstate = this.f_19853_.m_8055_(p_261435_);
-         if (blockstate.m_60734_() instanceof BedBlock) {
+         if (blockstate.isBed(f_19853_, p_261435_, this)) {
             Direction direction = blockstate.m_61143_(BedBlock.f_54117_);
-            this.f_19853_.m_7731_(p_261435_, blockstate.m_61124_(BedBlock.f_49441_, Boolean.valueOf(false)), 3);
+            blockstate.setBedOccupied(f_19853_, p_261435_, this, false);
             Vec3 vec31 = BedBlock.m_260958_(this.m_6095_(), this.f_19853_, p_261435_, direction, this.m_146908_()).orElseGet(() -> {
                BlockPos blockpos = p_261435_.m_7494_();
                return new Vec3((double)blockpos.m_123341_() + 0.5D, (double)blockpos.m_123342_() + 0.1D, (double)blockpos.m_123343_() + 0.5D);
@@ -3140,7 +_,9 @@
    @Nullable
    public Direction m_21259_() {
       BlockPos blockpos = this.m_21257_().orElse((BlockPos)null);
-      return blockpos != null ? BedBlock.m_49485_(this.f_19853_, blockpos) : null;
+      if (blockpos == null) return Direction.UP;
+      BlockState state = this.f_19853_.m_8055_(blockpos);
+      return !state.isBed(f_19853_, blockpos, this) ? Direction.UP : state.getBedDirection(f_19853_, blockpos);
    }
 
    public boolean m_5830_() {
@@ -3156,7 +_,7 @@
    }
 
    public ItemStack m_6298_(ItemStack p_21272_) {
-      return ItemStack.f_41583_;
+      return net.minecraftforge.common.ForgeHooks.getProjectile(this, p_21272_, ItemStack.f_41583_);
    }
 
    public ItemStack m_5584_(Level p_21067_, ItemStack p_21068_) {
@@ -3176,7 +_,7 @@
    private void m_21063_(ItemStack p_21064_, Level p_21065_, LivingEntity p_21066_) {
       Item item = p_21064_.m_41720_();
       if (item.m_41472_()) {
-         for(Pair<MobEffectInstance, Float> pair : item.m_41473_().m_38749_()) {
+         for(Pair<MobEffectInstance, Float> pair : p_21064_.getFoodProperties(this).m_38749_()) {
             if (!p_21065_.f_46443_ && pair.getFirst() != null && p_21065_.f_46441_.m_188501_() < pair.getSecond()) {
                p_21066_.m_7292_(new MobEffectInstance(pair.getFirst()));
             }
@@ -3212,6 +_,64 @@
       this.m_21166_(p_21191_ == InteractionHand.MAIN_HAND ? EquipmentSlot.MAINHAND : EquipmentSlot.OFFHAND);
    }
 
+   /* ==== FORGE START ==== */
+   /***
+    * Removes all potion effects that have curativeItem as a curative item for its effect
+    * @param curativeItem The itemstack we are using to cure potion effects
+    */
+   public boolean curePotionEffects(ItemStack curativeItem) {
+      if (this.f_19853_.f_46443_)
+         return false;
+      boolean ret = false;
+      Iterator<MobEffectInstance> itr = this.f_20945_.values().iterator();
+      while (itr.hasNext()) {
+         MobEffectInstance effect = itr.next();
+         if (effect.isCurativeItem(curativeItem) && !net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.MobEffectEvent.Remove(this, effect))) {
+            this.m_7285_(effect);
+            itr.remove();
+            ret = true;
+            this.f_20948_ = true;
+         }
+      }
+      return ret;
+   }
+
+   /**
+    * Returns true if the entity's rider (EntityPlayer) should face forward when mounted.
+    * currently only used in vanilla code by pigs.
+    *
+    * @param player The player who is riding the entity.
+    * @return If the player should orient the same direction as this entity.
+    */
+   public boolean shouldRiderFaceForward(Player player) {
+      return this instanceof net.minecraft.world.entity.animal.Pig;
+   }
+
+   private net.minecraftforge.common.util.LazyOptional<?>[] handlers = net.minecraftforge.items.wrapper.EntityEquipmentInvWrapper.create(this);
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable Direction facing) {
+      if (this.m_6084_() && capability == net.minecraftforge.common.capabilities.ForgeCapabilities.ITEM_HANDLER) {
+         if (facing == null) return handlers[2].cast();
+         else if (facing.m_122434_().m_122478_()) return handlers[0].cast();
+         else if (facing.m_122434_().m_122479_()) return handlers[1].cast();
+      }
+      return super.getCapability(capability, facing);
+   }
+
+   @Override
+   public void invalidateCaps() {
+      super.invalidateCaps();
+      for (int x = 0; x < handlers.length; x++)
+         handlers[x].invalidate();
+   }
+
+   @Override
+   public void reviveCaps() {
+      super.reviveCaps();
+      handlers = net.minecraftforge.items.wrapper.EntityEquipmentInvWrapper.create(this);
+   }
+
    public AABB m_6921_() {
       if (this.m_6844_(EquipmentSlot.HEAD).m_150930_(Items.f_42683_)) {
          float f = 0.5F;
@@ -3222,6 +_,8 @@
    }
 
    public static EquipmentSlot m_147233_(ItemStack p_147234_) {
+      final EquipmentSlot slot = p_147234_.getEquipmentSlot();
+      if (slot != null) return slot; // FORGE: Allow modders to set a non-default equipment slot for a stack; e.g. a non-armor chestplate-slot item
       Equipable equipable = Equipable.m_269088_(p_147234_);
       return equipable != null ? equipable.m_40402_() : EquipmentSlot.MAINHAND;
    }
@@ -3299,4 +_,22 @@
 
    public static record Fallsounds(SoundEvent f_196626_, SoundEvent f_196627_) {
    }
+
+
+   // CraftBukkit start
+   public void setItemSlot(EquipmentSlot enumitemslot, ItemStack itemstack, boolean silent) {
+      this.m_8061_(enumitemslot, itemstack);
+   }
+   // CraftBukkit end
+
+   // CraftBukkit start
+   public int getExpReward() {
+      if (this.f_19853_ instanceof ServerLevel && (this.m_6124_() || this.f_20889_ > 0 && this.m_6149_() && this.f_19853_.m_46469_().m_46207_(GameRules.f_46135_))) {
+         int i = this.m_213860_();
+         return i;
+      } else {
+         return 0;
+      }
+   }
+   // CraftBukkit end
 }

--- a/net/minecraft/world/entity/animal/allay/Allay.java
+++ b/net/minecraft/world/entity/animal/allay/Allay.java
@@ -34,11 +_,13 @@
 import net.minecraft.world.SimpleContainer;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.Entity;
+import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.EquipmentSlot;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MoverType;
 import net.minecraft.world.entity.PathfinderMob;
+import net.minecraft.world.entity.Pose;
 import net.minecraft.world.entity.ai.Brain;
 import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
@@ -116,6 +_,7 @@
     private float dancingAnimationTicks;
     private float spinningAnimationTicks;
     private float spinningAnimationTicks0;
+   public boolean forceDancing = false; // CraftBukkit
 
     public Allay(EntityType<? extends Allay> p_218310_, Level p_218311_) {
         super(p_218310_, p_218311_);
@@ -127,7 +_,13 @@
         this.dynamicJukeboxListener = new DynamicGameEventListener<>(new Allay.JukeboxListener(this.vibrationUser.getPositionSource(), GameEvent.JUKEBOX_PLAY.value().notificationRadius()));
     }
 
-    @Override
+   	// CraftBukkit start
+   	public void setCanDuplicate(boolean canDuplicate) {
+      	this.entityData.set(Allay.DATA_CAN_DUPLICATE, canDuplicate);
+   	}
+   	// CraftBukkit end
+    
+	@Override
     protected Brain.Provider<Allay> brainProvider() {
         return Brain.provider(MEMORY_TYPES, SENSOR_TYPES);
     }
@@ -243,7 +_,7 @@
     public void aiStep() {
         super.aiStep();
         if (!this.level().isClientSide && this.isAlive() && this.tickCount % 10 == 0) {
-            this.heal(1.0F);
+         this.heal(1.0F, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.REGEN); // CraftBukkit
         }
 
         if (this.isDancing() && this.shouldStopDancing() && this.tickCount % 20 == 0) {
@@ -311,7 +_,12 @@
         ItemStack itemstack = p_218361_.getItemInHand(p_218362_);
         ItemStack itemstack1 = this.getItemInHand(InteractionHand.MAIN_HAND);
         if (this.isDancing() && this.isDuplicationItem(itemstack) && this.canDuplicate()) {
-            this.duplicateAllay();
+         // CraftBukkit start - handle cancel duplication
+         Allay allay = this.duplicateAllay0();
+         if (allay == null) {
+            return InteractionResult.SUCCESS;
+         }
+         // CraftBukkit end
             this.level().broadcastEntityEvent(this, (byte)18);
             this.level().playSound(p_218361_, this, SoundEvents.AMETHYST_BLOCK_CHIME, SoundSource.NEUTRAL, 2.0F, 1.0F);
             this.removeInteractionItem(p_218361_, itemstack);
@@ -365,10 +_,7 @@
     @Override
     public boolean wantsToPickUp(ItemStack p_218387_) {
         ItemStack itemstack = this.getItemInHand(InteractionHand.MAIN_HAND);
-        return !itemstack.isEmpty()
-            && this.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)
-            && this.inventory.canAddItem(p_218387_)
-            && this.allayConsidersItemEqual(itemstack, p_218387_);
+        return !itemstack.isEmpty() && this.inventory.canAddItem(p_218387_) && this.allayConsidersItemEqual(itemstack, p_218387_) && net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.level(), this);
     }
 
     private boolean allayConsidersItemEqual(ItemStack p_252278_, ItemStack p_250405_) {
@@ -416,6 +_,7 @@
     }
 
     private boolean shouldStopDancing() {
+      if (this.forceDancing) {return false;} // CraftBukkit
         return this.jukeboxPos == null
             || !this.jukeboxPos.closerToCenterThan(this.position(), (double)GameEvent.JUKEBOX_PLAY.value().notificationRadius())
             || !this.level().getBlockState(this.jukeboxPos).is(Blocks.JUKEBOX);
@@ -503,25 +_,35 @@
         return DUPLICATION_ITEM.test(p_239736_);
     }
 
-    private void duplicateAllay() {
-        Allay allay = EntityType.ALLAY.create(this.level());
-        if (allay != null) {
-            allay.moveTo(this.position());
-            allay.setPersistenceRequired();
-            allay.resetDuplicationCooldown();
-            this.resetDuplicationCooldown();
-            this.level().addFreshEntity(allay);
-        }
-    }
-
-    private void resetDuplicationCooldown() {
-        this.duplicationCooldown = 6000L;
-        this.entityData.set(DATA_CAN_DUPLICATE, false);
-    }
-
-    private boolean canDuplicate() {
-        return this.entityData.get(DATA_CAN_DUPLICATE);
-    }
+   // Mohist start
+   public Allay allay0;
+   public void duplicateAllay() { // CraftBukkit - return allay and private -> public
+      Allay allay = EntityType.ALLAY.create(this.level);
+      if (allay != null) {
+         allay.moveTo(this.position());
+         allay.setPersistenceRequired();
+         allay.resetDuplicationCooldown();
+         this.resetDuplicationCooldown();
+         allay.spawnReason(org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DUPLICATION); // CraftBukkit - reason for duplicated allay
+         this.level.addFreshEntity(allay);
+      }
+      allay0 = allay;
+   }
+
+   public Allay duplicateAllay0() {
+      duplicateAllay();
+      return allay0;
+   }
+   // Mohist end
+
+   public void resetDuplicationCooldown() {
+      this.duplicationCooldown = 6000L;
+      this.entityData.set(DATA_CAN_DUPLICATE, false);
+   }
+
+   public boolean canDuplicate() {
+      return this.entityData.get(DATA_CAN_DUPLICATE);
+   }
 
     private void removeInteractionItem(Player p_239359_, ItemStack p_239360_) {
         p_239360_.consume(1, p_239359_);

--- a/net/minecraft/world/entity/animal/SnowGolem.java
+++ b/net/minecraft/world/entity/animal/SnowGolem.java
@@ -14,9 +_,11 @@
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
+import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
+import net.minecraft.world.entity.Pose;
 import net.minecraft.world.entity.Shearable;
 import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
@@ -38,7 +_,7 @@
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.Vec3;
 
-public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackMob {
+public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackMob, net.minecraftforge.common.IForgeShearable {
     private static final EntityDataAccessor<Byte> DATA_PUMPKIN_ID = SynchedEntityData.defineId(SnowGolem.class, EntityDataSerializers.BYTE);
     private static final byte PUMPKIN_FLAG = 16;
 
@@ -92,7 +_,7 @@
                 this.hurt(this.damageSources().onFire(), 1.0F);
             }
 
-            if (!this.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
+            if (!net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.level(), this)) {
                 return;
             }
 
@@ -103,8 +_,12 @@
                 int k = Mth.floor(this.getY());
                 int l = Mth.floor(this.getZ() + (double)((float)(i / 2 % 2 * 2 - 1) * 0.25F));
                 BlockPos blockpos = new BlockPos(j, k, l);
-                if (this.level().getBlockState(blockpos).isAir() && blockstate.canSurvive(this.level(), blockpos)) {
-                    this.level().setBlockAndUpdate(blockpos, blockstate);
+                if (this.level().isEmptyBlock(blockpos) && blockstate.canSurvive(this.level(), blockpos)) {
+               // CraftBukkit start
+               if (!org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockFormEvent(this.level(), blockpos, blockstate, this)) {
+                  continue;
+               }
+               // CraftBukkit end
                     this.level().gameEvent(GameEvent.BLOCK_PLACE, blockpos, GameEvent.Context.of(this, blockstate));
                 }
             }
@@ -127,7 +_,7 @@
     @Override
     protected InteractionResult mobInteract(Player p_29920_, InteractionHand p_29921_) {
         ItemStack itemstack = p_29920_.getItemInHand(p_29921_);
-        if (itemstack.is(Items.SHEARS) && this.readyForShearing()) {
+        if (false && itemstack.is(Items.SHEARS) && this.readyForShearing()) { //Forge: Moved to onSheared
             this.shear(SoundSource.PLAYERS);
             this.gameEvent(GameEvent.SHEAR, p_29920_);
             if (!this.level().isClientSide) {
@@ -145,9 +_,12 @@
         this.level().playSound(null, this, SoundEvents.SNOW_GOLEM_SHEAR, p_29907_, 1.0F, 1.0F);
         if (!this.level().isClientSide()) {
             this.setPumpkin(false);
-            this.spawnAtLocation(new ItemStack(Items.CARVED_PUMPKIN), this.getEyeHeight());
-        }
-    }
+         this.forceDrops = true; // CraftBukkit
+         this.spawnAtLocation(new ItemStack(Items.CARVED_PUMPKIN), 1.7F);
+         this.forceDrops = false; // CraftBukkit
+      }
+
+   }
 
     @Override
     public boolean readyForShearing() {
@@ -189,4 +_,21 @@
     public Vec3 getLeashOffset() {
         return new Vec3(0.0, (double)(0.75F * this.getEyeHeight()), (double)(this.getBbWidth() * 0.4F));
     }
+
+    @Override
+    public boolean isShearable(@org.jetbrains.annotations.NotNull ItemStack item, Level world, BlockPos pos) {
+         return readyForShearing();
+    }
+
+    @org.jetbrains.annotations.NotNull
+    @Override
+    public java.util.List<ItemStack> onSheared(@Nullable Player player, @org.jetbrains.annotations.NotNull ItemStack item, Level world, BlockPos pos, int fortune) {
+        world.playSound(null, this, SoundEvents.SNOW_GOLEM_SHEAR, player == null ? SoundSource.BLOCKS : SoundSource.PLAYERS, 1.0F, 1.0F);
+        this.gameEvent(GameEvent.SHEAR, player);
+        if (!world.isClientSide()) {
+            setPumpkin(false);
+            return java.util.Collections.singletonList(new ItemStack(Items.CARVED_PUMPKIN));
+        }
+        return java.util.Collections.emptyList();
+     }
 }

--- a/net/minecraft/world/entity/animal/Bee.java
+++ b/net/minecraft/world/entity/animal/Bee.java
@@ -37,11 +_,14 @@
 import net.minecraft.world.effect.MobEffects;
 import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
+import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
+import net.minecraft.world.entity.MobType;
 import net.minecraft.world.entity.NeutralMob;
 import net.minecraft.world.entity.PathfinderMob;
+import net.minecraft.world.entity.Pose;
 import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.control.FlyingMoveControl;
@@ -65,6 +_,7 @@
 import net.minecraft.world.entity.ai.village.poi.PoiRecord;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.item.crafting.Ingredient;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.block.Block;
@@ -118,7 +_,7 @@
     private float rollAmountO;
     private int timeSinceSting;
     int ticksWithoutNectarSinceExitingHive;
-    public int stayOutOfHiveCountdown;
+   	public int stayOutOfHiveCountdown;
     private int numCropsGrownSincePollination;
     private static final int COOLDOWN_BEFORE_LOCATING_NEW_HIVE = 200;
     int remainingCooldownBeforeLocatingNewHive;
@@ -127,7 +_,8 @@
     @Nullable
     BlockPos savedFlowerPos;
     @Nullable
-    public BlockPos hivePos;
+   	public
+    BlockPos hivePos;
     Bee.BeePollinateGoal beePollinateGoal;
     Bee.BeeGoToHiveGoal goToHiveGoal;
     private Bee.BeeGoToKnownFlowerGoal goToKnownFlowerGoal;
@@ -152,9 +_,9 @@
     }
 
     @Override
-    public float getWalkTargetValue(BlockPos p_27788_, LevelReader p_27789_) {
-        return p_27789_.getBlockState(p_27788_).isAir() ? 10.0F : 0.0F;
-    }
+   public float getWalkTargetValue(BlockPos p_27788_, LevelReader p_27789_) {
+      return p_27789_.getBlockState(p_27788_).isAir() ? 10.0F : 0.0F;
+   }
 
     @Override
     protected void registerGoals() {
@@ -178,16 +_,22 @@
         this.targetSelector.addGoal(3, new ResetUniversalAngerTargetGoal<>(this, true));
     }
 
-    @Override
-    public void addAdditionalSaveData(CompoundTag p_27823_) {
-        super.addAdditionalSaveData(p_27823_);
-        if (this.hasHive()) {
-            p_27823_.put("hive_pos", NbtUtils.writeBlockPos(this.getHivePos()));
-        }
-
-        if (this.hasSavedFlowerPos()) {
-            p_27823_.put("flower_pos", NbtUtils.writeBlockPos(this.getSavedFlowerPos()));
-        }
+   	public void addAdditionalSaveData(CompoundTag p_27823_) {
+      	// CraftBukkit start - selectively save data
+      	addAdditionalSaveData(p_27823_, true);
+   	}
+
+   	@Override
+   	public void addAdditionalSaveData(CompoundTag p_27823_, boolean includeAll) {
+      // CraftBukkit end
+      super.addAdditionalSaveData(p_27823_);
+      if (includeAll && this.hasHive()) { // CraftBukkit - selectively save hive
+         p_27823_.put("hive_pos", NbtUtils.writeBlockPos(this.getHivePos()));
+      }
+
+      if (includeAll && this.hasSavedFlowerPos()) { // CraftBukkit - selectively save flower
+         p_27823_.put("flower_pos", NbtUtils.writeBlockPos(this.getSavedFlowerPos()));
+      }
 
         p_27823_.putBoolean("HasNectar", this.hasNectar());
         p_27823_.putBoolean("HasStung", this.hasStung());
@@ -486,7 +_,7 @@
             return false;
         } else {
             BlockEntity blockentity = this.level().getBlockEntity(this.hivePos);
-            return blockentity != null && blockentity.getType() == BlockEntityType.BEEHIVE;
+            return blockentity instanceof BeehiveBlockEntity;
         }
     }
 
@@ -494,7 +_,7 @@
         return this.getFlag(8);
     }
 
-    void setHasNectar(boolean p_27920_) {
+   	public void setHasNectar(boolean p_27920_) {
         if (p_27920_) {
             this.resetTicksWithoutNectarSinceExitingHive();
         }
@@ -506,7 +_,7 @@
         return this.getFlag(4);
     }
 
-    private void setHasStung(boolean p_27926_) {
+   	public void setHasStung(boolean p_27926_) {
         this.setFlag(4, p_27926_);
     }
 
@@ -626,24 +_,36 @@
         if (this.isInvulnerableTo(p_27762_)) {
             return false;
         } else {
-            if (!this.level().isClientSide) {
-                this.beePollinateGoal.stopPollinating();
-            }
-
-            return super.hurt(p_27762_, p_27763_);
-        }
-    }
-
-    @Override
-    protected void jumpInLiquid(TagKey<Fluid> p_204061_) {
-        this.setDeltaMovement(this.getDeltaMovement().add(0.0, 0.01, 0.0));
-    }
+         // CraftBukkit start - Only stop pollinating if entity was damaged
+         boolean result = super.hurt(p_27762_, p_27763_);
+         if (result && !this.level().isClientSide) {
+            // CraftBukkit end
+            this.beePollinateGoal.stopPollinating();
+         }
+
+         return result; // CraftBukkit
+      }
+   }
 
     @Override
     public Vec3 getLeashOffset() {
         return new Vec3(0.0, (double)(0.5F * this.getEyeHeight()), (double)(this.getBbWidth() * 0.2F));
     }
 
+    @Deprecated // FORGE: use jumpInFluid instead
+    protected void jumpInLiquid(TagKey<Fluid> p_204061_) {
+        this.jumpInLiquidInternal();
+    }
+
+    private void jumpInLiquidInternal() {
+        this.setDeltaMovement(this.getDeltaMovement().add(0.0D, 0.01D, 0.0D));
+    }
+
+    @Override
+    public void jumpInFluid(net.minecraftforge.fluids.FluidType type) {
+        this.jumpInLiquidInternal();
+    }
+
     boolean closerThan(BlockPos p_27817_, int p_27818_) {
         return p_27817_.closerThan(this.blockPosition(), (double)p_27818_);
     }
@@ -962,7 +_,7 @@
                             ((BonemealableBlock)blockstate.getBlock()).performBonemeal((ServerLevel)Bee.this.level(), Bee.this.random, blockpos, blockstate);
                         }
 
-                        if (blockstate1 != null) {
+                  		if (blockstate1 != null && org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(Bee.this, blockpos, blockstate1)) { // CraftBukkit
                             Bee.this.level().levelEvent(2011, blockpos, 15);
                             Bee.this.level().setBlockAndUpdate(blockpos, blockstate1);
                             Bee.this.incrementNumCropsGrownSincePollination();
@@ -986,7 +_,7 @@
         @Override
         protected void alertOther(Mob p_28035_, LivingEntity p_28036_) {
             if (p_28035_ instanceof Bee && this.mob.hasLineOfSight(p_28036_)) {
-                p_28035_.setTarget(p_28036_);
+            p_28035_.setTarget(p_28036_, org.bukkit.event.entity.EntityTargetEvent.TargetReason.TARGET_ATTACKED_ENTITY, true); // CraftBukkit - reason
             }
         }
     }

--- a/net/minecraft/world/entity/animal/Sheep.java
+++ b/net/minecraft/world/entity/animal/Sheep.java
@@ -27,9 +_,12 @@
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.AgeableMob;
+import net.minecraft.world.entity.Entity;
+import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
+import net.minecraft.world.entity.Pose;
 import net.minecraft.world.entity.Shearable;
 import net.minecraft.world.entity.SpawnGroupData;
 import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
@@ -45,6 +_,11 @@
 import net.minecraft.world.entity.ai.goal.WaterAvoidingRandomStrollGoal;
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.inventory.AbstractContainerMenu;
+import net.minecraft.world.inventory.CraftingContainer;
+import net.minecraft.world.inventory.MenuType;
+import net.minecraft.world.inventory.ResultContainer;
+import net.minecraft.world.inventory.TransientCraftingContainer;
 import net.minecraft.world.item.DyeColor;
 import net.minecraft.world.item.DyeItem;
 import net.minecraft.world.item.ItemStack;
@@ -60,6 +_,9 @@
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.storage.loot.BuiltInLootTables;
 import net.minecraft.world.level.storage.loot.LootTable;
+import org.joml.Vector3f;
+import org.bukkit.event.entity.SheepRegrowWoolEvent;
+import org.bukkit.inventory.InventoryView;
 
 public class Sheep extends Animal implements Shearable {
     private static final int EAT_ANIMATION_TICKS = 40;
@@ -212,7 +_,7 @@
     @Override
     public InteractionResult mobInteract(Player p_29853_, InteractionHand p_29854_) {
         ItemStack itemstack = p_29853_.getItemInHand(p_29854_);
-        if (itemstack.is(Items.SHEARS)) {
+        if (false && itemstack.is(Items.SHEARS)) { // Forge: Moved to onSheared
             if (!this.level().isClientSide && this.readyForShearing()) {
                 this.shear(SoundSource.PLAYERS);
                 this.gameEvent(GameEvent.SHEAR, p_29853_);
@@ -228,12 +_,24 @@
 
     @Override
     public void shear(SoundSource p_29819_) {
+        dropShearedItems(shearInternal(p_29819_));
+    }
+
+    private java.util.List<ItemStack> shearInternal(SoundSource p_29819_) {
         this.level().playSound(null, this, SoundEvents.SHEEP_SHEAR, p_29819_, 1.0F, 1.0F);
         this.setSheared(true);
         int i = 1 + this.random.nextInt(3);
 
+        var ret = new java.util.ArrayList<ItemStack>();
         for (int j = 0; j < i; j++) {
-            ItemEntity itementity = this.spawnAtLocation(ITEM_BY_DYE.get(this.getColor()), 1);
+            ret.add(new ItemStack(ITEM_BY_DYE.get(this.getColor())));
+        }
+        return ret;
+    }
+
+    private void dropShearedItems(java.util.List<ItemStack> items) {
+        for (var stack : items) {
+            ItemEntity itementity = this.spawnAtLocation(stack, 1);
             if (itementity != null) {
                 itementity.setDeltaMovement(
                     itementity.getDeltaMovement()
@@ -335,6 +_,12 @@
 
     @Override
     public void ate() {
+        // CraftBukkit start
+        SheepRegrowWoolEvent event = new SheepRegrowWoolEvent((org.bukkit.entity.Sheep) this.getBukkitEntity());
+        this.level.getCraftServer().getPluginManager().callEvent(event);
+
+        if (event.isCancelled()) return;
+        // CraftBukkit end
         super.ate();
         this.setSheared(false);
         if (this.isBaby()) {
@@ -366,5 +_,10 @@
 
     private static CraftingInput makeCraftInput(DyeColor p_344668_, DyeColor p_344678_) {
         return CraftingInput.of(2, 1, List.of(new ItemStack(DyeItem.byColor(p_344668_)), new ItemStack(DyeItem.byColor(p_344678_))));
+    }
+
+    @Override
+    public java.util.List<ItemStack> onSheared(@Nullable Player player, ItemStack item, Level world, BlockPos pos, int fortune) {
+       return shearInternal(player == null ? SoundSource.BLOCKS : SoundSource.PLAYERS);
     }
 }

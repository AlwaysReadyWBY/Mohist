--- a/net/minecraft/world/entity/animal/Sheep.java
+++ b/net/minecraft/world/entity/animal/Sheep.java
@@ -25,9 +_,12 @@
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.AgeableMob;
+import net.minecraft.world.entity.Entity;
+import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
+import net.minecraft.world.entity.Pose;
 import net.minecraft.world.entity.Shearable;
 import net.minecraft.world.entity.SpawnGroupData;
 import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
@@ -46,6 +_,7 @@
 import net.minecraft.world.inventory.AbstractContainerMenu;
 import net.minecraft.world.inventory.CraftingContainer;
 import net.minecraft.world.inventory.MenuType;
+import net.minecraft.world.inventory.ResultContainer;
 import net.minecraft.world.inventory.TransientCraftingContainer;
 import net.minecraft.world.item.DyeColor;
 import net.minecraft.world.item.DyeItem;
@@ -60,10 +_,12 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.storage.loot.BuiltInLootTables;
-import net.minecraft.world.level.storage.loot.LootTable;
+import org.joml.Vector3f;
+import org.bukkit.event.entity.SheepRegrowWoolEvent;
+import org.bukkit.inventory.InventoryView;
 
-public class Sheep extends Animal implements Shearable {
-    private static final int EAT_ANIMATION_TICKS = 40;
+public class Sheep extends Animal implements Shearable, net.minecraftforge.common.IForgeShearable {
+   private static final int EAT_ANIMATION_TICKS = 40;
     private static final EntityDataAccessor<Byte> DATA_WOOL_ID = SynchedEntityData.defineId(Sheep.class, EntityDataSerializers.BYTE);
     private static final Map<DyeColor, ItemLike> ITEM_BY_DYE = Util.make(Maps.newEnumMap(DyeColor.class), p_29841_ -> {
         p_29841_.put(DyeColor.WHITE, Blocks.WHITE_WOOL);
@@ -208,7 +_,7 @@
     @Override
     public InteractionResult mobInteract(Player p_29853_, InteractionHand p_29854_) {
         ItemStack itemstack = p_29853_.getItemInHand(p_29854_);
-        if (itemstack.is(Items.SHEARS)) {
+        if (false && itemstack.is(Items.SHEARS)) { // Forge: Moved to onSheared
             if (!this.level().isClientSide && this.readyForShearing()) {
                 this.shear(SoundSource.PLAYERS);
                 this.gameEvent(GameEvent.SHEAR, p_29853_);
@@ -224,12 +_,24 @@
 
     @Override
     public void shear(SoundSource p_29819_) {
+        dropShearedItems(shearInternal(p_29819_));
+    }
+
+    private java.util.List<ItemStack> shearInternal(SoundSource p_29819_) {
         this.level().playSound(null, this, SoundEvents.SHEEP_SHEAR, p_29819_, 1.0F, 1.0F);
         this.setSheared(true);
         int i = 1 + this.random.nextInt(3);
 
+        var ret = new java.util.ArrayList<ItemStack>();
         for (int j = 0; j < i; j++) {
-            ItemEntity itementity = this.spawnAtLocation(ITEM_BY_DYE.get(this.getColor()), 1);
+            ret.add(new ItemStack(ITEM_BY_DYE.get(this.getColor())));
+        }
+        return ret;
+    }
+
+    private void dropShearedItems(java.util.List<ItemStack> items) {
+        for (var stack : items) {
+            ItemEntity itementity = this.spawnAtLocation(stack, 1);
             if (itementity != null) {
                 itementity.setDeltaMovement(
                     itementity.getDeltaMovement()
@@ -329,8 +_,13 @@
         return sheep;
     }
 
-    @Override
-    public void ate() {
+   public void ate() {
+      // CraftBukkit start
+      SheepRegrowWoolEvent event = new SheepRegrowWoolEvent((org.bukkit.entity.Sheep) this.getBukkitEntity());
+      this.level.getCraftServer().getPluginManager().callEvent(event);
+
+      if (event.isCancelled()) return;
+      // CraftBukkit end
         super.ate();
         this.setSheared(false);
         if (this.isBaby()) {
@@ -371,9 +_,27 @@
             public boolean stillValid(Player p_29888_) {
                 return false;
             }
-        }, 2, 1);
-        craftingcontainer.setItem(0, new ItemStack(DyeItem.byColor(p_29832_)));
-        craftingcontainer.setItem(1, new ItemStack(DyeItem.byColor(p_29833_)));
-        return craftingcontainer;
+
+         // CraftBukkit start
+         @Override
+         public InventoryView getBukkitView() {
+            return null; // TODO: O.O
+         }
+          // CraftBukkit end
+      }, 2, 1);
+      craftingcontainer.setItem(0, new ItemStack(DyeItem.byColor(p_29832_)));
+      craftingcontainer.setItem(1, new ItemStack(DyeItem.byColor(p_29833_)));
+      ((TransientCraftingContainer) craftingcontainer).resultInventory = new ResultContainer(); // CraftBukkit - add result slot for event
+      return craftingcontainer;
+   }
+
+    @Override
+    public boolean isShearable(@org.jetbrains.annotations.NotNull ItemStack item, Level world, BlockPos pos) {
+       return readyForShearing();
+    }
+
+    @Override
+    public java.util.List<ItemStack> onSheared(@Nullable Player player, ItemStack item, Level world, BlockPos pos, int fortune) {
+       return shearInternal(player == null ? SoundSource.BLOCKS : SoundSource.PLAYERS);
     }
 }

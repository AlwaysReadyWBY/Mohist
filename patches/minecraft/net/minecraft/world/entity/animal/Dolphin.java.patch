--- a/net/minecraft/world/entity/animal/Dolphin.java
+++ b/net/minecraft/world/entity/animal/Dolphin.java
@@ -25,11 +_,13 @@
 import net.minecraft.world.effect.MobEffectInstance;
 import net.minecraft.world.effect.MobEffects;
 import net.minecraft.world.entity.Entity;
+import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.EquipmentSlot;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.MoverType;
+import net.minecraft.world.entity.Pose;
 import net.minecraft.world.entity.SpawnGroupData;
 import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
@@ -66,7 +_,15 @@
     static final TargetingConditions SWIM_WITH_PLAYER_TARGETING = TargetingConditions.forNonCombat().range(10.0).ignoreLineOfSight();
     public static final int TOTAL_AIR_SUPPLY = 4800;
     private static final int TOTAL_MOISTNESS_LEVEL = 2400;
-    public static final Predicate<ItemEntity> ALLOWED_ITEMS = p_326971_ -> !p_326971_.hasPickUpDelay() && p_326971_.isAlive() && p_326971_.isInWater();
+	public static final Predicate<ItemEntity> ALLOWED_ITEMS = p_326971_ -> !p_326971_.hasPickUpDelay() && p_326971_.isAlive() && p_326971_.isInWater();
+
+
+   // CraftBukkit start - SPIGOT-6907: re-implement LivingEntity#setMaximumAir()
+   @Override
+   public int getDefaultMaxAirSupply() {
+      return TOTAL_AIR_SUPPLY;
+   }
+   // CraftBukkit end
 
     public Dolphin(EntityType<? extends Dolphin> p_28316_, Level p_28317_) {
         super(p_28316_, p_28317_);
@@ -179,7 +_,7 @@
 
     @Override
     public int getMaxAirSupply() {
-        return 4800;
+      return maxAirTicks; // CraftBukkit - SPIGOT-6907: re-implement LivingEntity#setMaximumAir()
     }
 
     @Override
@@ -213,6 +_,12 @@
         if (this.getItemBySlot(EquipmentSlot.MAINHAND).isEmpty()) {
             ItemStack itemstack = p_28357_.getItem();
             if (this.canHoldItem(itemstack)) {
+            // CraftBukkit start - call EntityPickupItemEvent
+            if (org.bukkit.craftbukkit.event.CraftEventFactory.callEntityPickupItemEvent(this, p_28357_, 0, false).isCancelled()) {
+               return;
+            }
+            itemstack = p_28357_.getItem(); // update ItemStack from event
+            // CraftBukkit end
                 this.onItemPickup(p_28357_);
                 this.setItemSlot(EquipmentSlot.MAINHAND, itemstack);
                 this.setGuaranteedDrop(EquipmentSlot.MAINHAND);

--- a/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
+++ b/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
@@ -27,15 +_,17 @@
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRemoveEvent;
 
 public class FireworkRocketEntity extends Projectile implements ItemSupplier {
-    public static final EntityDataAccessor<ItemStack> DATA_ID_FIREWORKS_ITEM = SynchedEntityData.defineId(FireworkRocketEntity.class, EntityDataSerializers.ITEM_STACK);
-    private static final EntityDataAccessor<OptionalInt> DATA_ATTACHED_TO_TARGET = SynchedEntityData.defineId(FireworkRocketEntity.class, EntityDataSerializers.OPTIONAL_UNSIGNED_INT);
-    public static final EntityDataAccessor<Boolean> DATA_SHOT_AT_ANGLE = SynchedEntityData.defineId(FireworkRocketEntity.class, EntityDataSerializers.BOOLEAN);
-    public int life;
-    public int lifetime;
-    @Nullable
-    public LivingEntity attachedToEntity;
+   public static final EntityDataAccessor<ItemStack> DATA_ID_FIREWORKS_ITEM = SynchedEntityData.defineId(FireworkRocketEntity.class, EntityDataSerializers.ITEM_STACK);
+   private static final EntityDataAccessor<OptionalInt> DATA_ATTACHED_TO_TARGET = SynchedEntityData.defineId(FireworkRocketEntity.class, EntityDataSerializers.OPTIONAL_UNSIGNED_INT);
+   public static final EntityDataAccessor<Boolean> DATA_SHOT_AT_ANGLE = SynchedEntityData.defineId(FireworkRocketEntity.class, EntityDataSerializers.BOOLEAN);
+   public int life;
+   public int lifetime;
+   @Nullable
+   public LivingEntity attachedToEntity;
 
     public FireworkRocketEntity(EntityType<? extends FireworkRocketEntity> p_37027_, Level p_37028_) {
         super(p_37027_, p_37028_);
@@ -77,7 +_,6 @@
         this.setOwner(p_37052_);
     }
 
-    @Override
     protected void defineSynchedData(SynchedEntityData.Builder p_332895_) {
         p_332895_.define(DATA_ID_FIREWORKS_ITEM, getDefaultItem());
         p_332895_.define(DATA_ATTACHED_TO_TARGET, OptionalInt.empty());
@@ -143,7 +_,7 @@
 
         HitResult hitresult = ProjectileUtil.getHitResultOnMoveVector(this, this::canHitEntity);
         if (!this.noPhysics) {
-            this.hitTargetOrDeflectSelf(hitresult);
+            this.preHitTargetOrDeflectSelf(hitresult); // CraftBukkit - projectile hit event
             this.hasImpulse = true;
         }
 
@@ -167,35 +_,47 @@
         }
 
         if (!this.level().isClientSide && this.life > this.lifetime) {
+         // CraftBukkit start
+         if (!CraftEventFactory.callFireworkExplodeEvent(this).isCancelled()) {
             this.explode();
-        }
-    }
+         }
+         // CraftBukkit end
+      }
+
+   }
 
     private void explode() {
         this.level().broadcastEntityEvent(this, (byte)17);
         this.gameEvent(GameEvent.EXPLODE, this.getOwner());
         this.dealExplosionDamage();
+        this.putRemoveCause(EntityRemoveEvent.Cause.EXPLODE);
         this.discard();
     }
 
-    @Override
-    protected void onHitEntity(EntityHitResult p_37071_) {
-        super.onHitEntity(p_37071_);
-        if (!this.level().isClientSide) {
-            this.explode();
-        }
-    }
-
-    @Override
-    protected void onHitBlock(BlockHitResult p_37069_) {
-        BlockPos blockpos = new BlockPos(p_37069_.getBlockPos());
-        this.level().getBlockState(blockpos).entityInside(this.level(), blockpos, this);
-        if (!this.level().isClientSide() && this.hasExplosion()) {
-            this.explode();
-        }
-
-        super.onHitBlock(p_37069_);
-    }
+   protected void onHitEntity(EntityHitResult p_37071_) {
+      super.onHitEntity(p_37071_);
+      if (!this.level().isClientSide) {
+         // CraftBukkit start
+         if (!CraftEventFactory.callFireworkExplodeEvent(this).isCancelled()) {
+            this.explode();
+         }
+         // CraftBukkit end
+      }
+   }
+
+   protected void onHitBlock(BlockHitResult p_37069_) {
+      BlockPos blockpos = new BlockPos(p_37069_.getBlockPos());
+      this.level().getBlockState(blockpos).entityInside(this.level(), blockpos, this);
+      if (!this.level().isClientSide() && this.hasExplosion()) {
+         // CraftBukkit start
+         if (!CraftEventFactory.callFireworkExplodeEvent(this).isCancelled()) {
+            this.explode();
+         }
+         // CraftBukkit end
+      }
+
+      super.onHitBlock(p_37069_);
+   }
 
     private boolean hasExplosion() {
         return !this.getExplosions().isEmpty();
@@ -300,5 +_,12 @@
 
     private static ItemStack getDefaultItem() {
         return new ItemStack(Items.FIREWORK_ROCKET);
+    }
+
+    @Override
+    protected void onHit(HitResult result) {
+        if (result.getType() == HitResult.Type.MISS || !net.minecraftforge.event.ForgeEventFactory.onProjectileImpact(this, result)) {
+            super.onHit(result);
+        }
     }
 }

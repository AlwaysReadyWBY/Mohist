--- a/net/minecraft/world/entity/projectile/windcharge/AbstractWindCharge.java
+++ b/net/minecraft/world/entity/projectile/windcharge/AbstractWindCharge.java
@@ -23,7 +_,7 @@
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
-import net.minecraft.world.phys.Vec3;
+import org.bukkit.event.entity.EntityRemoveEvent;
 
 public abstract class AbstractWindCharge extends AbstractHurtingProjectile implements ItemSupplier {
     public static final ExplosionDamageCalculator EXPLOSION_DAMAGE_CALCULATOR = new SimpleExplosionDamageCalculator(
@@ -113,6 +_,8 @@
             Vec3 vec3 = Vec3.atLowerCornerOf(vec3i).multiply(0.25, 0.25, 0.25);
             Vec3 vec31 = p_330277_.getLocation().add(vec3);
             this.explode(vec31);
+
+            this.putRemoveCause(EntityRemoveEvent.Cause.HIT); // CraftBukkit - add Bukkit remove cause
             this.discard();
         }
     }
@@ -121,6 +_,7 @@
     protected void onHit(HitResult p_328815_) {
         super.onHit(p_328815_);
         if (!this.level().isClientSide) {
+            this.putRemoveCause(EntityRemoveEvent.Cause.HIT); // CraftBukkit - add Bukkit remove cause
             this.discard();
         }
     }
@@ -154,7 +_,8 @@
     @Override
     public void tick() {
         if (!this.level().isClientSide && this.getBlockY() > this.level().getMaxBuildHeight() + 30) {
-            this.explode(this.position());
+            this.explode();
+            this.putRemoveCause(EntityRemoveEvent.Cause.OUT_OF_WORLD); // CraftBukkit - add Bukkit remove cause
             this.discard();
         } else {
             super.tick();

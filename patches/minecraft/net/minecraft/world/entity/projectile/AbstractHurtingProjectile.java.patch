--- a/net/minecraft/world/entity/projectile/AbstractHurtingProjectile.java
+++ b/net/minecraft/world/entity/projectile/AbstractHurtingProjectile.java
@@ -4,6 +_,7 @@
 import net.minecraft.core.particles.ParticleOptions;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
+import net.minecraft.nbt.ListTag;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ClientGamePacketListener;
 import net.minecraft.network.protocol.game.ClientboundAddEntityPacket;
@@ -17,12 +_,17 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRemoveEvent;
 
 public abstract class AbstractHurtingProjectile extends Projectile {
     public static final double INITAL_ACCELERATION_POWER = 0.1;
     public static final double DEFLECTION_SCALE = 0.5;
     public double accelerationPower = 0.1;
 
+    public float bukkitYield = 1; // CraftBukkit
+    public boolean isIncendiary = true; // CraftBukkit
+
     protected AbstractHurtingProjectile(EntityType<? extends AbstractHurtingProjectile> p_36833_, Level p_36834_) {
         super(p_36833_, p_36834_);
     }
@@ -78,7 +_,7 @@
             }
 
             HitResult hitresult = ProjectileUtil.getHitResultOnMoveVector(this, this::canHitEntity, this.getClipType());
-            if (hitresult.getType() != HitResult.Type.MISS) {
+            if (hitresult.getType() != HitResult.Type.MISS && !net.minecraftforge.event.ForgeEventFactory.onProjectileImpact(this, hitresult)) {
                 this.hitTargetOrDeflectSelf(hitresult);
             }
 
@@ -117,6 +_,7 @@
 
             this.setPos(d0, d1, d2);
         } else {
+            this.putRemoveCause(EntityRemoveEvent.Cause.DESPAWN);
             this.discard();
         }
     }
@@ -194,7 +_,7 @@
         this.setDeltaMovement(vec3);
     }
 
-    private void assignDirectionalMovement(Vec3 p_342200_, double p_343156_) {
+    public void assignDirectionalMovement(Vec3 p_342200_, double p_343156_) {
         this.setDeltaMovement(p_342200_.normalize().scale(p_343156_));
         this.hasImpulse = true;
     }

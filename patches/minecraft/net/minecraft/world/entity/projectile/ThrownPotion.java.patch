--- a/net/minecraft/world/entity/projectile/ThrownPotion.java
+++ b/net/minecraft/world/entity/projectile/ThrownPotion.java
@@ -1,14 +_,18 @@
 package net.minecraft.world.entity.projectile;
 
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.nbt.CompoundTag;
+import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.tags.BlockTags;
 import net.minecraft.world.effect.MobEffect;
 import net.minecraft.world.effect.MobEffectInstance;
+import net.minecraft.world.effect.MobEffects;
 import net.minecraft.world.entity.AreaEffectCloud;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
@@ -23,12 +_,15 @@
 import net.minecraft.world.item.alchemy.Potions;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.AbstractCandleBlock;
+import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.CampfireBlock;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
+import org.bukkit.craftbukkit.v1_20_R2.entity.CraftLivingEntity;
+import org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory;
 
 public class ThrownPotion extends ThrowableItemProjectile implements ItemSupplier {
    public static final double SPLASH_RANGE = 4.0D;
@@ -88,7 +_,7 @@
          boolean flag = potion == Potions.WATER && list.isEmpty();
          if (flag) {
             this.applyWater();
-         } else if (!list.isEmpty()) {
+         } else if (true || !list.isEmpty()) { // CraftBukkit - Call event even if no effects to apply
             if (this.isLingering()) {
                this.makeAreaOfEffectCloud(itemstack, potion);
             } else {
@@ -127,10 +_,11 @@
    private void applySplash(List<MobEffectInstance> p_37548_, @Nullable Entity p_37549_) {
       AABB aabb = this.getBoundingBox().inflate(4.0D, 2.0D, 4.0D);
       List<LivingEntity> list = this.level().getEntitiesOfClass(LivingEntity.class, aabb);
+      Map<org.bukkit.entity.LivingEntity, Double> affected = new HashMap<>(); // CraftBukkit
       if (!list.isEmpty()) {
          Entity entity = this.getEffectSource();
 
-         for(LivingEntity livingentity : list) {
+         for (LivingEntity livingentity : list) {
             if (livingentity.isAffectedByPotions()) {
                double d0 = this.distanceToSqr(livingentity);
                if (d0 < 16.0D) {
@@ -140,20 +_,42 @@
                   } else {
                      d1 = 1.0D - Math.sqrt(d0) / 4.0D;
                   }
-
-                  for(MobEffectInstance mobeffectinstance : p_37548_) {
-                     MobEffect mobeffect = mobeffectinstance.getEffect();
-                     if (mobeffect.isInstantenous()) {
-                        mobeffect.applyInstantenousEffect(this, this.getOwner(), livingentity, mobeffectinstance.getAmplifier(), d1);
-                     } else {
-                        int i = mobeffectinstance.mapDuration((p_267930_) -> {
-                           return (int)(d1 * (double)p_267930_ + 0.5D);
-                        });
-                        MobEffectInstance mobeffectinstance1 = new MobEffectInstance(mobeffect, i, mobeffectinstance.getAmplifier(), mobeffectinstance.isAmbient(), mobeffectinstance.isVisible());
-                        if (!mobeffectinstance1.endsWithin(20)) {
-                           livingentity.addEffect(mobeffectinstance1, entity);
-                        }
-                     }
+                  affected.put((org.bukkit.entity.LivingEntity) livingentity.getBukkitEntity(), d1);
+               }
+            }
+         }
+      }
+      org.bukkit.event.entity.PotionSplashEvent event = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callPotionSplashEvent(this, affected);
+      if (!event.isCancelled() && list != null && !list.isEmpty()) { // do not process effects if there are no effects to process
+         Entity entity = this.getEffectSource();
+         for (org.bukkit.entity.LivingEntity victim : event.getAffectedEntities()) {
+            if (!(victim instanceof CraftLivingEntity)) {
+               continue;
+            }
+            LivingEntity livingentity = ((CraftLivingEntity) victim).getHandle();
+            double d1 = event.getIntensity(victim);
+            // CraftBukkit end
+
+            for (MobEffectInstance mobeffectinstance : p_37548_) {
+               MobEffect mobeffect = mobeffectinstance.getEffect();
+
+               // CraftBukkit start - Abide by PVP settings - for players only!
+               if (!this.level.pvpMode && this.getOwner() instanceof ServerPlayer && livingentity instanceof ServerPlayer && livingentity != this.getOwner()) {
+                  if (mobeffect == MobEffects.MOVEMENT_SLOWDOWN || mobeffect == MobEffects.DIG_SLOWDOWN || mobeffect == MobEffects.HARM || mobeffect == MobEffects.BLINDNESS
+                          || mobeffect == MobEffects.HUNGER || mobeffect == MobEffects.WEAKNESS || mobeffect == MobEffects.POISON) {
+                     continue;
+                  }
+               }
+               // CraftBukkit end
+               if (mobeffect.isInstantenous()) {
+                  mobeffect.applyInstantenousEffect(this, this.getOwner(), livingentity, mobeffectinstance.getAmplifier(), d1);
+               } else {
+                  int i = mobeffectinstance.mapDuration((p_267930_) -> {
+                     return (int) (d1 * (double) p_267930_ + 0.5D);
+                  });
+                  MobEffectInstance mobeffectinstance1 = new MobEffectInstance(mobeffect, i, mobeffectinstance.getAmplifier(), mobeffectinstance.isAmbient(), mobeffectinstance.isVisible());
+                  if (!mobeffectinstance1.endsWithin(20)) {
+                     livingentity.addEffect(mobeffectinstance1, entity, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.POTION_SPLASH); // CraftBukkit
                   }
                }
             }
@@ -184,23 +_,42 @@
          areaeffectcloud.setFixedColor(compoundtag.getInt("CustomPotionColor"));
       }
 
-      this.level().addFreshEntity(areaeffectcloud);
+      // CraftBukkit start
+      org.bukkit.event.entity.LingeringPotionSplashEvent event = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callLingeringPotionSplashEvent(this, areaeffectcloud);
+      if (!(event.isCancelled() || areaeffectcloud.isRemoved())) {
+         this.level.addFreshEntity(areaeffectcloud);
+      } else {
+         areaeffectcloud.discard();
+      }
+      // CraftBukkit end
    }
 
-   private boolean isLingering() {
+   public boolean isLingering() {
       return this.getItem().is(Items.LINGERING_POTION);
    }
 
    private void dowseFire(BlockPos p_150193_) {
       BlockState blockstate = this.level().getBlockState(p_150193_);
       if (blockstate.is(BlockTags.FIRE)) {
-         this.level().destroyBlock(p_150193_, false, this);
+         // CraftBukkit start
+         if (CraftEventFactory.callEntityChangeBlockEvent(this, p_150193_, Blocks.AIR.defaultBlockState())) {
+            this.level().destroyBlock(p_150193_, false, this);
+         }
+         // CraftBukkit end
       } else if (AbstractCandleBlock.isLit(blockstate)) {
-         AbstractCandleBlock.extinguish((Player)null, blockstate, this.level(), p_150193_);
+         // CraftBukkit start
+         if (CraftEventFactory.callEntityChangeBlockEvent(this, p_150193_, blockstate.setValue(AbstractCandleBlock.LIT, false))) {
+            AbstractCandleBlock.extinguish((Player) null, blockstate, this.level(), p_150193_);
+         }
+         // CraftBukkit end
       } else if (CampfireBlock.isLitCampfire(blockstate)) {
-         this.level().levelEvent((Player)null, 1009, p_150193_, 0);
-         CampfireBlock.dowse(this.getOwner(), this.level(), p_150193_, blockstate);
-         this.level().setBlockAndUpdate(p_150193_, blockstate.setValue(CampfireBlock.LIT, Boolean.valueOf(false)));
+         // CraftBukkit start
+         if (CraftEventFactory.callEntityChangeBlockEvent(this, p_150193_, blockstate.setValue(CampfireBlock.LIT, false))) {
+            this.level().levelEvent((Player) null, 1009, p_150193_, 0);
+            CampfireBlock.dowse(this.getOwner(), this.level(), p_150193_, blockstate);
+            this.level().setBlockAndUpdate(p_150193_, blockstate.setValue(CampfireBlock.LIT, false));
+         }
+         // CraftBukkit end
       }
 
    }

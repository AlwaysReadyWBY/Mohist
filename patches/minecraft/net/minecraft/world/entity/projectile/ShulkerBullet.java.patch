--- a/net/minecraft/world/entity/projectile/ShulkerBullet.java
+++ b/net/minecraft/world/entity/projectile/ShulkerBullet.java
@@ -29,6 +_,8 @@
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.event.entity.EntityPotionEffectEvent;
+import org.bukkit.event.entity.EntityRemoveEvent;
 
 public class ShulkerBullet extends Projectile {
     private static final double SPEED = 0.15;
@@ -58,10 +_,21 @@
         this.selectNextMoveDirection(p_37333_);
     }
 
-    @Override
-    public SoundSource getSoundSource() {
-        return SoundSource.HOSTILE;
+    // CraftBukkit start
+    public Entity getTarget() {
+      return this.finalTarget;
+   }
+
+    public void setTarget(Entity e) {
+        this.finalTarget = e;
+        this.currentMoveDirection = Direction.UP;
+        this.selectNextMoveDirection(Direction.Axis.X);
     }
+    // CraftBukkit end
+
+   public SoundSource getSoundSource() {
+      return SoundSource.HOSTILE;
+   }
 
     @Override
     protected void addAdditionalSaveData(CompoundTag p_37357_) {
@@ -186,6 +_,7 @@
     @Override
     public void checkDespawn() {
         if (this.level().getDifficulty() == Difficulty.PEACEFUL) {
+            this.putRemoveCause(EntityRemoveEvent.Cause.DESPAWN); // CraftBukkit - add Bukkit remove cause);
             this.discard();
         }
     }
@@ -219,8 +_,8 @@
             }
 
             HitResult hitresult = ProjectileUtil.getHitResultOnMoveVector(this, this::canHitEntity);
-            if (hitresult.getType() != HitResult.Type.MISS) {
-                this.hitTargetOrDeflectSelf(hitresult);
+            if (hitresult.getType() != HitResult.Type.MISS && !net.minecraftforge.event.ForgeEventFactory.onProjectileImpact(this, hitresult)) {
+                this.preHitTargetOrDeflectSelf(hitresult); // CraftBukkit - projectile hit event
             }
         }
 
@@ -294,6 +_,7 @@
         if (flag) {
             this.doEnchantDamageEffects(livingentity, entity);
             if (entity instanceof LivingEntity livingentity1) {
+                livingentity1.addEffectCause(EntityPotionEffectEvent.Cause.ATTACK);
                 livingentity1.addEffect(new MobEffectInstance(MobEffects.LEVITATION, 200), MoreObjects.firstNonNull(entity1, this));
             }
         }
@@ -311,9 +_,17 @@
         this.level().gameEvent(GameEvent.ENTITY_DAMAGE, this.position(), GameEvent.Context.of(this));
     }
 
+    // Mohist start - CraftBukkit
+    private void destroy(EntityRemoveEvent.Cause cause) {
+        this.putRemoveCause(cause);
+        this.destroy();
+    }
+    // Mohist end
+
     @Override
     protected void onHit(HitResult p_37347_) {
         super.onHit(p_37347_);
+        this.putRemoveCause(EntityRemoveEvent.Cause.HIT); // CraftBukkit - add Bukkit remove cause
         this.destroy();
     }
 
@@ -324,9 +_,15 @@
 
     @Override
     public boolean hurt(DamageSource p_37338_, float p_37339_) {
+        // CraftBukkit start
+        if (org.bukkit.craftbukkit.event.CraftEventFactory.handleNonLivingEntityDamageEvent(this, p_37338_, p_37339_, false)) {
+            return false;
+        }
+        // CraftBukkit end
         if (!this.level().isClientSide) {
             this.playSound(SoundEvents.SHULKER_BULLET_HURT, 1.0F, 1.0F);
-            ((ServerLevel)this.level()).sendParticles(ParticleTypes.CRIT, this.getX(), this.getY(), this.getZ(), 15, 0.2, 0.2, 0.2, 0.0);
+            ((ServerLevel) this.level()).sendParticles(ParticleTypes.CRIT, this.getX(), this.getY(), this.getZ(), 15, 0.2, 0.2, 0.2, 0.0);
+            this.putRemoveCause(EntityRemoveEvent.Cause.HIT); // CraftBukkit - add Bukkit remove cause
             this.destroy();
         }
 

--- a/net/minecraft/world/entity/projectile/AbstractArrow.java
+++ b/net/minecraft/world/entity/projectile/AbstractArrow.java
@@ -20,7 +_,6 @@
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
-import net.minecraft.tags.EntityTypeTags;
 import net.minecraft.util.Mth;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.Entity;
@@ -30,6 +_,7 @@
 import net.minecraft.world.entity.MoverType;
 import net.minecraft.world.entity.Pose;
 import net.minecraft.world.entity.ai.attributes.Attributes;
+import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.enchantment.EnchantmentHelper;
@@ -44,6 +_,9 @@
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.craftbukkit.v1_20_R3.entity.CraftItem;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.player.PlayerPickupArrowEvent;
 
 public abstract class AbstractArrow extends Projectile {
    private static final double ARROW_BASE_DAMAGE = 2.0D;
@@ -66,26 +_,34 @@
    private IntOpenHashSet piercingIgnoreEntityIds;
    @Nullable
    private List<Entity> piercedAndKilledEntities;
-   private ItemStack pickupItemStack;
-
-   protected AbstractArrow(EntityType<? extends AbstractArrow> p_36717_, Level p_36719_, ItemStack p_312639_) {
-      super(p_36717_, p_36719_);
-      this.pickupItemStack = p_312639_.copy();
-      if (p_312639_.hasCustomHoverName()) {
-         this.setCustomName(p_312639_.getHoverName());
+
+   private final IntOpenHashSet ignoredEntities = new IntOpenHashSet();
+
+   // Spigot Start
+   @Override
+   public void inactiveTick()
+   {
+      if ( this.inGround )
+      {
+         this.life += 1;
       }
-
-   }
-
-   protected AbstractArrow(EntityType<? extends AbstractArrow> p_36711_, double p_36712_, double p_36713_, double p_36714_, Level p_36715_, ItemStack p_310436_) {
-      this(p_36711_, p_36715_, p_310436_);
+      super.inactiveTick();
+   }
+   // Spigot End
+
+   protected AbstractArrow(EntityType<? extends AbstractArrow> p_36721_, Level p_36722_) {
+      super(p_36721_, p_36722_);
+   }
+
+   protected AbstractArrow(EntityType<? extends AbstractArrow> p_36711_, double p_36712_, double p_36713_, double p_36714_, Level p_36715_) {
+      this(p_36711_, p_36715_);
       this.setPos(p_36712_, p_36713_, p_36714_);
    }
 
-   protected AbstractArrow(EntityType<? extends AbstractArrow> p_36721_, LivingEntity p_312718_, Level p_36722_, ItemStack p_309639_) {
-      this(p_36721_, p_312718_.getX(), p_312718_.getEyeY() - (double)0.1F, p_312718_.getZ(), p_36722_, p_309639_);
-      this.setOwner(p_312718_);
-      if (p_312718_ instanceof Player) {
+   protected AbstractArrow(EntityType<? extends AbstractArrow> p_36717_, LivingEntity p_36718_, Level p_36719_) {
+      this(p_36717_, p_36718_.getX(), p_36718_.getEyeY() - (double)0.1F, p_36718_.getZ(), p_36719_);
+      this.setOwner(p_36718_);
+      if (p_36718_ instanceof Player) {
          this.pickup = AbstractArrow.Pickup.ALLOWED;
       }
 
@@ -157,7 +_,7 @@
          --this.shakeTime;
       }
 
-      if (this.isInWaterOrRain() || blockstate.is(Blocks.POWDER_SNOW)) {
+      if (this.isInWaterOrRain() || blockstate.is(Blocks.POWDER_SNOW) || this.isInFluidType((fluidType, height) -> this.canFluidExtinguish(fluidType))) {
          this.clearFire();
       }
 
@@ -193,9 +_,28 @@
                }
             }
 
-            if (hitresult != null && !flag) {
-               this.onHit(hitresult);
-               this.hasImpulse = true;
+            if (hitresult != null && hitresult.getType() != HitResult.Type.MISS && !flag) {
+               switch (net.minecraftforge.event.ForgeEventFactory.onProjectileImpactResult(this, hitresult)) {
+                  case SKIP_ENTITY:
+                     if (hitresult.getType() != HitResult.Type.ENTITY) { // If there is no entity, we just return default behaviour
+                        this.onHit(hitresult);
+                        this.hasImpulse = true;
+                        break;
+                     }
+                     ignoredEntities.add(entityhitresult.getEntity().getId());
+                     entityhitresult = null; // Don't process any further
+                     break;
+                  case STOP_AT_CURRENT_NO_DAMAGE:
+                     this.discard();
+                     entityhitresult = null; // Don't process any further
+                     break;
+                  case STOP_AT_CURRENT:
+                     this.setPierceLevel((byte) 0);
+                  case DEFAULT:
+                     this.onHit(hitresult);
+                     this.hasImpulse = true;
+                     break;
+               }
             }
 
             if (entityhitresult == null || this.getPierceLevel() <= 0) {
@@ -205,6 +_,9 @@
             hitresult = null;
          }
 
+         if (this.isRemoved())
+            return;
+
          vec3 = this.getDeltaMovement();
          double d5 = vec3.x;
          double d6 = vec3.y;
@@ -271,7 +_,7 @@
 
    protected void tickDespawn() {
       ++this.life;
-      if (this.life >= 1200) {
+      if (this.life >= ((this instanceof ThrownTrident) ? level.spigotConfig.tridentDespawnRate : level.spigotConfig.arrowDespawnRate)) { // Spigot
          this.discard();
       }
 
@@ -328,9 +_,14 @@
 
       boolean flag = entity.getType() == EntityType.ENDERMAN;
       int k = entity.getRemainingFireTicks();
-      boolean flag1 = entity.getType().is(EntityTypeTags.DEFLECTS_ARROWS);
-      if (this.isOnFire() && !flag && !flag1) {
-         entity.setSecondsOnFire(5);
+      if (this.isOnFire() && !flag) {
+         // CraftBukkit start
+         EntityCombustByEntityEvent combustEvent = new EntityCombustByEntityEvent(this.getBukkitEntity(), entity.getBukkitEntity(), 5);
+         org.bukkit.Bukkit.getPluginManager().callEvent(combustEvent);
+         if (!combustEvent.isCancelled()) {
+            entity.setSecondsOnFire(combustEvent.getDuration(), false);
+         }
+         // CraftBukkit end
       }
 
       if (entity.hurt(damagesource, (float)i)) {
@@ -380,8 +_,6 @@
          if (this.getPierceLevel() <= 0) {
             this.discard();
          }
-      } else if (flag1) {
-         this.deflect();
       } else {
          entity.setRemainingFireTicks(k);
          this.setDeltaMovement(this.getDeltaMovement().scale(-0.1D));
@@ -398,13 +_,6 @@
 
    }
 
-   public void deflect() {
-      float f = this.random.nextFloat() * 360.0F;
-      this.setDeltaMovement(this.getDeltaMovement().yRot(f * ((float)Math.PI / 180F)).scale(0.5D));
-      this.setYRot(this.getYRot() + f);
-      this.yRotO += f;
-   }
-
    protected void onHitBlock(BlockHitResult p_36755_) {
       this.lastState = this.level().getBlockState(p_36755_.getBlockPos());
       super.onHitBlock(p_36755_);
@@ -439,7 +_,7 @@
    }
 
    protected boolean canHitEntity(Entity p_36743_) {
-      return super.canHitEntity(p_36743_) && (this.piercingIgnoreEntityIds == null || !this.piercingIgnoreEntityIds.contains(p_36743_.getId()));
+      return super.canHitEntity(p_36743_) && (this.piercingIgnoreEntityIds == null || !this.piercingIgnoreEntityIds.contains(p_36743_.getId())) && !this.ignoredEntities.contains(p_36743_.getId());
    }
 
    public void addAdditionalSaveData(CompoundTag p_36772_) {
@@ -457,7 +_,6 @@
       p_36772_.putByte("PierceLevel", this.getPierceLevel());
       p_36772_.putString("SoundEvent", BuiltInRegistries.SOUND_EVENT.getKey(this.soundEvent).toString());
       p_36772_.putBoolean("ShotFromCrossbow", this.shotFromCrossbow());
-      p_36772_.put("item", this.pickupItemStack.save(new CompoundTag()));
    }
 
    public void readAdditionalSaveData(CompoundTag p_36761_) {
@@ -481,10 +_,6 @@
       }
 
       this.setShotFromCrossbow(p_36761_.getBoolean("ShotFromCrossbow"));
-      if (p_36761_.contains("item", 10)) {
-         this.pickupItemStack = ItemStack.of(p_36761_.getCompound("item"));
-      }
-
    }
 
    public void setOwner(@Nullable Entity p_36770_) {
@@ -496,8 +_,23 @@
    }
 
    public void playerTouch(Player p_36766_) {
-      if (!this.level().isClientSide && (this.inGround || this.isNoPhysics()) && this.shakeTime <= 0) {
-         if (this.tryPickup(p_36766_)) {
+      if (!this.level.isClientSide && (this.inGround || this.isNoPhysics()) && this.shakeTime <= 0) {
+         // CraftBukkit start
+         ItemStack itemstack = this.getPickupItem();
+         if (this.pickup == Pickup.ALLOWED && !itemstack.isEmpty() && p_36766_.getInventory().canHold(itemstack) > 0) {
+            ItemEntity item = new ItemEntity(this.level, this.getX(), this.getY(), this.getZ(), itemstack);
+            PlayerPickupArrowEvent event = new PlayerPickupArrowEvent((org.bukkit.entity.Player) p_36766_.getBukkitEntity(), new CraftItem(this.level.getCraftServer(), item), (org.bukkit.entity.AbstractArrow) this.getBukkitEntity());
+            // event.setCancelled(!entityhuman.canPickUpLoot); TODO
+            this.level.getCraftServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+               return;
+            }
+            itemstack = item.getItem();
+         }
+
+         if ((this.pickup == AbstractArrow.Pickup.ALLOWED && p_36766_.getInventory().add(itemstack)) || (this.pickup == AbstractArrow.Pickup.CREATIVE_ONLY && p_36766_.getAbilities().instabuild)) {
+            // CraftBukkit end
             p_36766_.take(this, 1);
             this.discard();
          }
@@ -516,16 +_,10 @@
       }
    }
 
-   protected ItemStack getPickupItem() {
-      return this.pickupItemStack.copy();
-   }
+   protected abstract ItemStack getPickupItem();
 
    protected Entity.MovementEmission getMovementEmission() {
       return Entity.MovementEmission.NONE;
-   }
-
-   public ItemStack getPickupItemStackOrigin() {
-      return this.pickupItemStack;
    }
 
    public void setBaseDamage(double p_36782_) {

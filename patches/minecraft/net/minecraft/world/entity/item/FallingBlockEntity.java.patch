--- a/net/minecraft/world/entity/item/FallingBlockEntity.java
+++ b/net/minecraft/world/entity/item/FallingBlockEntity.java
@@ -1,6 +_,7 @@
 package net.minecraft.world.entity.item;
 
 import com.mojang.logging.LogUtils;
+import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.CrashReportCategory;
@@ -17,11 +_,8 @@
 import net.minecraft.network.syncher.EntityDataAccessor;
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
-import net.minecraft.resources.ResourceKey;
-import net.minecraft.server.level.ServerEntity;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.tags.BlockTags;
-import net.minecraft.tags.FluidTags;
 import net.minecraft.util.Mth;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.Entity;
@@ -43,10 +_,11 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.material.Fluids;
-import net.minecraft.world.level.portal.DimensionTransition;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.CreatureSpawnEvent;
 import org.slf4j.Logger;
 
 public class FallingBlockEntity extends Entity {
@@ -54,10 +_,10 @@
     private BlockState blockState = Blocks.SAND.defaultBlockState();
     public int time;
     public boolean dropItem = true;
-    private boolean cancelDrop;
-    public boolean hurtEntities;
-    private int fallDamageMax = 40;
-    private float fallDamagePerDistance;
+   	public boolean cancelDrop;
+   	public boolean hurtEntities;
+   	public int fallDamageMax = 40;
+   	public float fallDamagePerDistance;
     @Nullable
     public CompoundTag blockData;
     public boolean forceTickAfterTeleportToDuplicate;
@@ -79,19 +_,24 @@
         this.setStartPos(this.blockPosition());
     }
 
-    public static FallingBlockEntity fall(Level p_201972_, BlockPos p_201973_, BlockState p_201974_) {
-        FallingBlockEntity fallingblockentity = new FallingBlockEntity(
-            p_201972_,
-            (double)p_201973_.getX() + 0.5,
-            (double)p_201973_.getY(),
-            (double)p_201973_.getZ() + 0.5,
-            p_201974_.hasProperty(BlockStateProperties.WATERLOGGED) ? p_201974_.setValue(BlockStateProperties.WATERLOGGED, Boolean.valueOf(false)) : p_201974_
-        );
-        p_201972_.setBlock(p_201973_, p_201974_.getFluidState().createLegacyBlock(), 3);
-        p_201972_.addFreshEntity(fallingblockentity);
-        return fallingblockentity;
-    }
-
+   // Mohist start - fix mixin form blueprint
+   public static AtomicReference<CreatureSpawnEvent.SpawnReason> fallspawnReason = new AtomicReference<>(CreatureSpawnEvent.SpawnReason.DEFAULT);
+
+   public static FallingBlockEntity fall(Level p_201972_, BlockPos p_201973_, BlockState p_201974_) {
+      // CraftBukkit start
+      FallingBlockEntity fallingblockentity = new FallingBlockEntity(p_201972_, (double)p_201973_.getX() + 0.5D, (double)p_201973_.getY(), (double)p_201973_.getZ() + 0.5D, p_201974_.hasProperty(BlockStateProperties.WATERLOGGED) ? p_201974_.setValue(BlockStateProperties.WATERLOGGED, Boolean.valueOf(false)) : p_201974_);
+      if (!CraftEventFactory.callEntityChangeBlockEvent(fallingblockentity, p_201973_, p_201974_.getFluidState().createLegacyBlock())) return fallingblockentity; // CraftBukkit
+      p_201972_.setBlock(p_201973_, p_201974_.getFluidState().createLegacyBlock(), 3);
+      p_201972_.addFreshEntity(fallingblockentity, fallspawnReason.getAndSet(CreatureSpawnEvent.SpawnReason.DEFAULT)); // CraftBukkit
+      return fallingblockentity;
+   }
+
+   public static FallingBlockEntity fall(Level p_201972_, BlockPos p_201973_, BlockState p_201974_, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason spawnReason) {
+      fallspawnReason.set(spawnReason);
+      return fall(p_201972_, p_201973_, p_201974_);
+   }
+   // CraftBukkit end
+   // Mohist end
     @Override
     public boolean isAttackable() {
         return false;
@@ -138,7 +_,7 @@
             if (!this.level().isClientSide && (this.isAlive() || this.forceTickAfterTeleportToDuplicate)) {
                 BlockPos blockpos = this.blockPosition();
                 boolean flag = this.blockState.getBlock() instanceof ConcretePowderBlock;
-                boolean flag1 = flag && this.level().getFluidState(blockpos).is(FluidTags.WATER);
+                boolean flag1 = flag && this.blockState.canBeHydrated(this.level(), blockpos, this.level().getFluidState(blockpos), blockpos);
                 double d0 = this.getDeltaMovement().lengthSqr();
                 if (flag && d0 > 1.0) {
                     BlockHitResult blockhitresult = this.level()
@@ -151,7 +_,7 @@
                                 this
                             )
                         );
-                    if (blockhitresult.getType() != HitResult.Type.MISS && this.level().getFluidState(blockhitresult.getBlockPos()).is(FluidTags.WATER)) {
+                    if (blockhitresult.getType() != HitResult.Type.MISS && this.blockState.canBeHydrated(this.level(), blockpos, this.level().getFluidState(blockhitresult.getBlockPos()), blockhitresult.getBlockPos())) {
                         blockpos = blockhitresult.getBlockPos();
                         flag1 = true;
                     }
@@ -171,6 +_,13 @@
                                 if (this.blockState.hasProperty(BlockStateProperties.WATERLOGGED) && this.level().getFluidState(blockpos).getType() == Fluids.WATER) {
                                     this.blockState = this.blockState.setValue(BlockStateProperties.WATERLOGGED, Boolean.valueOf(true));
                                 }
+
+                        		// CraftBukkit start
+                        		if (!CraftEventFactory.callEntityChangeBlockEvent(this, blockpos, this.blockState)) {
+                           		this.discard(); // SPIGOT-6586 called before the event in previous versions
+                           			return;
+                        		}
+                        		// CraftBukkit end
 
                                 if (this.level().setBlock(blockpos, this.blockState, 3)) {
                                     ((ServerLevel)this.level())

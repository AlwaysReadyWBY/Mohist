--- a/net/minecraft/world/entity/vehicle/ChestBoat.java
+++ b/net/minecraft/world/entity/vehicle/ChestBoat.java
@@ -1,9 +_,11 @@
 package net.minecraft.world.entity.vehicle;
 
+import java.util.List;
 import javax.annotation.Nullable;
 import net.minecraft.core.NonNullList;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.resources.ResourceKey;
+import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.Containers;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
@@ -23,6 +_,10 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.storage.loot.LootTable;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.inventory.InventoryHolder;
 
 public class ChestBoat extends Boat implements HasCustomInventoryScreen, ContainerEntity {
     private static final int CONTAINER_SIZE = 27;
@@ -170,8 +_,54 @@
         return this.isChestVehicleStillValid(p_219896_);
     }
 
-    @Nullable
-    @Override
+   // CraftBukkit start
+   public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+   private int maxStack = MAX_STACK;
+
+   @Override
+   public List<ItemStack> getContents() {
+      return this.itemStacks;
+   }
+
+   @Override
+   public void onOpen(CraftHumanEntity who) {
+      transaction.add(who);
+   }
+
+   @Override
+   public void onClose(CraftHumanEntity who) {
+      transaction.remove(who);
+   }
+
+   @Override
+   public List<HumanEntity> getViewers() {
+      return transaction;
+   }
+
+   @Override
+   public InventoryHolder getOwner() {
+      org.bukkit.entity.Entity entity = getBukkitEntity();
+      if (entity instanceof InventoryHolder) return (InventoryHolder) entity;
+      return null;
+   }
+
+   @Override
+   public int getMaxStackSize() {
+      return maxStack;
+   }
+
+   @Override
+   public void setMaxStackSize(int size) {
+      maxStack = size;
+   }
+
+   @Override
+   public Location getLocation() {
+      return getBukkitEntity().getLocation();
+   }
+   // CraftBukkit end
+
+   @Nullable
     public AbstractContainerMenu createMenu(int p_219910_, Inventory p_219911_, Player p_219912_) {
         if (this.lootTable != null && p_219912_.isSpectator()) {
             return null;
@@ -219,5 +_,27 @@
     @Override
     public void stopOpen(Player p_270286_) {
         this.level().gameEvent(GameEvent.CONTAINER_CLOSE, this.position(), GameEvent.Context.of(p_270286_));
+    }
+
+    private net.minecraftforge.common.util.LazyOptional<?> itemHandler = net.minecraftforge.common.util.LazyOptional.of(() -> new net.minecraftforge.items.wrapper.InvWrapper(this));
+
+    @Override
+    public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.core.Direction facing) {
+        if (capability == net.minecraftforge.common.capabilities.ForgeCapabilities.ITEM_HANDLER && this.isAlive()) {
+             return itemHandler.cast();
+        }
+        return super.getCapability(capability, facing);
+    }
+
+    @Override
+    public void invalidateCaps() {
+        super.invalidateCaps();
+        itemHandler.invalidate();
+    }
+
+    @Override
+    public void reviveCaps() {
+        super.reviveCaps();
+        itemHandler = net.minecraftforge.common.util.LazyOptional.of(() -> new net.minecraftforge.items.wrapper.InvWrapper(this));
     }
 }

--- a/net/minecraft/world/entity/vehicle/AbstractMinecartContainer.java
+++ b/net/minecraft/world/entity/vehicle/AbstractMinecartContainer.java
@@ -1,5 +_,6 @@
 package net.minecraft.world.entity.vehicle;
 
+import java.util.List;
 import javax.annotation.Nullable;
 import net.minecraft.core.NonNullList;
 import net.minecraft.nbt.CompoundTag;
@@ -18,11 +_,56 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.storage.loot.LootTable;
 
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.inventory.InventoryHolder;
+
 public abstract class AbstractMinecartContainer extends AbstractMinecart implements ContainerEntity {
+   // CraftBukkit start
+   public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+   private int maxStack = MAX_STACK;
+
+   public List<ItemStack> getContents() {
+      return this.itemStacks;
+   }
+
+   public void onOpen(CraftHumanEntity who) {
+      transaction.add(who);
+   }
+
+   public void onClose(CraftHumanEntity who) {
+      transaction.remove(who);
+   }
+
+   public List<HumanEntity> getViewers() {
+      return transaction;
+   }
+
+   public InventoryHolder getOwner() {
+      org.bukkit.entity.Entity cart = getBukkitEntity();
+      if(cart instanceof InventoryHolder) return (InventoryHolder) cart;
+      return null;
+   }
+
+   @Override
+   public int getMaxStackSize() {
+      return maxStack;
+   }
+
+   public void setMaxStackSize(int size) {
+      maxStack = size;
+   }
+
+   @Override
+   public Location getLocation() {
+      return getBukkitEntity().getLocation();
+   }
+   // CraftBukkit end
     private NonNullList<ItemStack> itemStacks = NonNullList.withSize(36, ItemStack.EMPTY);
     @Nullable
-    public ResourceKey<LootTable> lootTable;
-    public long lootTableSeed;
+    private ResourceKey<LootTable> lootTable;
+    private long lootTableSeed;
 
     protected AbstractMinecartContainer(EntityType<?> p_38213_, Level p_38214_) {
         super(p_38213_, p_38214_);
@@ -95,6 +_,8 @@
 
     @Override
     public InteractionResult interact(Player p_38232_, InteractionHand p_38233_) {
+        var ret = super.interact(p_38232_, p_38233_);
+        if (ret.consumesAction()) return ret;
         return this.interactWithContainerVehicle(p_38232_);
     }
 
@@ -165,5 +_,27 @@
     @Override
     public void clearItemStacks() {
         this.itemStacks = NonNullList.withSize(this.getContainerSize(), ItemStack.EMPTY);
+    }
+
+    private net.minecraftforge.common.util.LazyOptional<?> itemHandler = net.minecraftforge.common.util.LazyOptional.of(() -> new net.minecraftforge.items.wrapper.InvWrapper(this));
+
+    @Override
+    public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.core.Direction facing) {
+        if (capability == net.minecraftforge.common.capabilities.ForgeCapabilities.ITEM_HANDLER && this.isAlive()) {
+            return itemHandler.cast();
+        }
+        return super.getCapability(capability, facing);
+    }
+
+    @Override
+    public void invalidateCaps() {
+        super.invalidateCaps();
+        itemHandler.invalidate();
+    }
+
+    @Override
+    public void reviveCaps() {
+        super.reviveCaps();
+        itemHandler = net.minecraftforge.common.util.LazyOptional.of(() -> new net.minecraftforge.items.wrapper.InvWrapper(this));
     }
 }

--- a/net/minecraft/world/entity/raid/Raid.java
+++ b/net/minecraft/world/entity/raid/Raid.java
@@ -58,6 +_,7 @@
 import net.minecraft.world.level.block.entity.BannerPatterns;
 import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.event.entity.CreatureSpawnEvent;
 
 public class Raid {
     private static final int SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER = 2;
@@ -92,8 +_,8 @@
     private final ServerLevel level;
     private boolean started;
     private final int id;
-    public float totalHealth;
-    private int raidOmenLevel;
+    private float totalHealth;
+    public int raidOmenLevel;
     private boolean active;
     private int groupsSpawned;
     private final ServerBossEvent raidEvent = new ServerBossEvent(RAID_NAME_COMPONENT, BossEvent.BossBarColor.RED, BossEvent.BossBarOverlay.NOTCHED_10);
@@ -162,6 +_,12 @@
         return this.status == Raid.RaidStatus.LOSS;
     }
 
+    // CraftBukkit start
+    public boolean isInProgress() {
+        return this.status == Raid.RaidStatus.ONGOING;
+    }
+    // CraftBukkit end
+
     public float getTotalHealth() {
         return this.totalHealth;
     }
@@ -252,6 +_,7 @@
                 boolean flag = this.active;
                 this.active = this.level.hasChunkAt(this.center);
                 if (this.level.getDifficulty() == Difficulty.PEACEFUL) {
+                    org.bukkit.craftbukkit.event.CraftEventFactory.callRaidStopEvent(this, org.bukkit.event.raid.RaidStopEvent.Reason.PEACE); // CraftBukkit
                     this.stop();
                     return;
                 }
@@ -271,13 +_,16 @@
                 if (!this.level.isVillage(this.center)) {
                     if (this.groupsSpawned > 0) {
                         this.status = Raid.RaidStatus.LOSS;
+                        org.bukkit.craftbukkit.event.CraftEventFactory.callRaidFinishEvent(this, new java.util.ArrayList<>()); // CraftBukkit
                     } else {
+                        org.bukkit.craftbukkit.event.CraftEventFactory.callRaidStopEvent(this, org.bukkit.event.raid.RaidStopEvent.Reason.NOT_IN_VILLAGE); // CraftBukkit
                         this.stop();
                     }
                 }
 
                 this.ticksActive++;
                 if (this.ticksActive >= 48000L) {
+                    org.bukkit.craftbukkit.event.CraftEventFactory.callRaidStopEvent(this, org.bukkit.event.raid.RaidStopEvent.Reason.TIMEOUT); // CraftBukkit
                     this.stop();
                     return;
                 }
@@ -349,6 +_,7 @@
                     }
 
                     if (k > 3) {
+                        org.bukkit.craftbukkit.event.CraftEventFactory.callRaidStopEvent(this, org.bukkit.event.raid.RaidStopEvent.Reason.UNSPAWNABLE);  // CraftBukkit
                         this.stop();
                         break;
                     }
@@ -359,7 +_,7 @@
                         this.postRaidTicks++;
                     } else {
                         this.status = Raid.RaidStatus.VICTORY;
-
+                        List<org.bukkit.entity.Player> winners = new java.util.ArrayList<>(); // CraftBukkit
                         for (UUID uuid : this.heroesOfTheVillage) {
                             Entity entity = this.level.getEntity(uuid);
                             if (entity instanceof LivingEntity) {
@@ -369,10 +_,12 @@
                                     if (livingentity instanceof ServerPlayer serverplayer) {
                                         serverplayer.awardStat(Stats.RAID_WIN);
                                         CriteriaTriggers.RAID_WIN.trigger(serverplayer);
+                                        winners.add(serverplayer.getBukkitEntity()); // CraftBukkit
                                     }
                                 }
                             }
                         }
+                        org.bukkit.craftbukkit.event.CraftEventFactory.callRaidFinishEvent(this, winners); // CraftBukkit
                     }
                 }
 
@@ -380,6 +_,7 @@
             } else if (this.isOver()) {
                 this.celebrationTicks++;
                 if (this.celebrationTicks >= 600) {
+                    org.bukkit.craftbukkit.event.CraftEventFactory.callRaidStopEvent(this, org.bukkit.event.raid.RaidStopEvent.Reason.FINISHED); // CraftBukkit
                     this.stop();
                     return;
                 }
@@ -497,6 +_,11 @@
         DifficultyInstance difficultyinstance = this.level.getCurrentDifficultyAt(p_37756_);
         boolean flag1 = this.shouldSpawnBonusGroup();
 
+        // CraftBukkit start
+        Raider leader = null;
+        List<Raider> raiders = new java.util.ArrayList<>();
+        // CraftBukkit end
+
         for (Raid.RaiderType raid$raidertype : Raid.RaiderType.VALUES) {
             int j = this.getDefaultNumSpawns(raid$raidertype, i, flag1) + this.getPotentialBonusSpawns(raid$raidertype, this.random, i, difficultyinstance, flag1);
             int k = 0;
@@ -511,9 +_,11 @@
                     raider.setPatrolLeader(true);
                     this.setLeader(i, raider);
                     flag = true;
+                    leader = raider; // CraftBukkit
                 }
 
                 this.joinRaid(i, raider, p_37756_, false);
+                raiders.add(raider); // CraftBukkit
                 if (raid$raidertype.entityType == EntityType.RAVAGER) {
                     Raider raider1 = null;
                     if (i == this.getNumGroups(Difficulty.NORMAL)) {
@@ -531,6 +_,7 @@
                         this.joinRaid(i, raider1, p_37756_, false);
                         raider1.moveTo(p_37756_, 0.0F, 0.0F);
                         raider1.startRiding(raider);
+                        raiders.add(raider); // CraftBukkit
                     }
                 }
             }
@@ -540,6 +_,7 @@
         this.groupsSpawned++;
         this.updateBossbar();
         this.setDirty();
+        org.bukkit.craftbukkit.event.CraftEventFactory.callRaidSpawnWaveEvent(this, leader, raiders); // CraftBukkit
     }
 
     public void joinRaid(int p_37714_, Raider p_37715_, @Nullable BlockPos p_37716_, boolean p_37717_) {
@@ -554,6 +_,7 @@
                 p_37715_.finalizeSpawn(this.level, this.level.getCurrentDifficultyAt(p_37716_), MobSpawnType.EVENT, null);
                 p_37715_.applyRaidBuffs(this.level, p_37714_, false);
                 p_37715_.setOnGround(true);
+                p_37715_.spawnReason(CreatureSpawnEvent.SpawnReason.RAID);
                 this.level.addFreshEntityWithPassengers(p_37715_);
             }
         }
@@ -833,7 +_,7 @@
         }
     }
 
-    static enum RaiderType {
+    static enum RaiderType implements net.minecraftforge.common.IExtensibleEnum {
         VINDICATOR(EntityType.VINDICATOR, new int[]{0, 0, 2, 0, 1, 4, 2, 5}),
         EVOKER(EntityType.EVOKER, new int[]{0, 0, 0, 0, 0, 1, 1, 2}),
         PILLAGER(EntityType.PILLAGER, new int[]{0, 4, 3, 3, 4, 4, 4, 2}),
@@ -848,5 +_,25 @@
             this.entityType = p_37821_;
             this.spawnsPerWaveBeforeBonus = p_37822_;
         }
-    }
+
+        /**
+         * The waveCountsIn integer decides how many entities of the EntityType defined in typeIn will spawn in each wave.
+         * For example, one ravager will always spawn in wave 3.
+         */
+        public static RaiderType create(String name, EntityType<? extends Raider> typeIn, int[] waveCountsIn) {
+            throw new IllegalStateException("Enum not extended");
+        }
+
+        @Override
+        @Deprecated
+        public void init() {
+            VALUES = values();
+        }
+    }
+
+    // CraftBukkit start - a method to get all raiders
+    public java.util.Collection<Raider> getRaiders() {
+        return this.groupRaiderMap.values().stream().flatMap(Set::stream).collect(java.util.stream.Collectors.toSet());
+    }
+    // CraftBukkit end
 }

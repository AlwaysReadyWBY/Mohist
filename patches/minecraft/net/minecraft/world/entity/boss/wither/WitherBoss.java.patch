--- a/net/minecraft/world/entity/boss/wither/WitherBoss.java
+++ b/net/minecraft/world/entity/boss/wither/WitherBoss.java
@@ -10,9 +_,11 @@
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.chat.Component;
+import net.minecraft.network.protocol.game.ClientboundLevelEventPacket;
 import net.minecraft.network.syncher.EntityDataAccessor;
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.level.ServerBossEvent;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.ServerPlayer;
@@ -54,8 +_,13 @@
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.Level;
+import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRegainHealthEvent;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
 
 public class WitherBoss extends Monster implements PowerableMob, RangedAttackMob {
     private static final EntityDataAccessor<Integer> DATA_TARGET_A = SynchedEntityData.defineId(WitherBoss.class, EntityDataSerializers.INT);
@@ -256,22 +_,45 @@
         }
     }
 
-    @Override
-    protected void customServerAiStep() {
-        if (this.getInvulnerableTicks() > 0) {
-            int j = this.getInvulnerableTicks() - 1;
-            this.bossEvent.setProgress(1.0F - (float)j / 220.0F);
-            if (j <= 0) {
-                this.level().explode(this, this.getX(), this.getEyeY(), this.getZ(), 7.0F, false, Level.ExplosionInteraction.MOB);
-                if (!this.isSilent()) {
-                    this.level().globalLevelEvent(1023, this.blockPosition(), 0);
-                }
-            }
-
-            this.setInvulnerableTicks(j);
-            if (this.tickCount % 10 == 0) {
-                this.heal(10.0F);
-            }
+   protected void customServerAiStep() {
+      if (this.getInvulnerableTicks() > 0) {
+         int k1 = this.getInvulnerableTicks() - 1;
+         this.bossEvent.setProgress(1.0F - (float)k1 / 220.0F);
+         if (k1 <= 0) {
+            // CraftBukkit start
+            ExplosionPrimeEvent event = new ExplosionPrimeEvent(this.getBukkitEntity(), 7.0F, false);
+            this.level.getCraftServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled()) {
+               this.level().explode(this, this.getX(), this.getEyeY(), this.getZ(), event.getRadius(), event.getFire(), Level.ExplosionInteraction.MOB);
+            }
+            // CraftBukkit end
+            if (!this.isSilent()) {
+               // CraftBukkit start - Use relative location for far away sounds
+               int viewDistance = ((ServerLevel) this.level).getCraftServer().getViewDistance() * 16;
+               for (ServerPlayer player : (List<ServerPlayer>) MinecraftServer.getServer().getPlayerList().players) {
+                  double deltaX = this.getX() - player.getX();
+                  double deltaZ = this.getZ() - player.getZ();
+                  double distanceSquared = deltaX * deltaX + deltaZ * deltaZ;
+                  if (distanceSquared > viewDistance * viewDistance) {
+                     double deltaLength = Math.sqrt(distanceSquared);
+                     double relativeX = player.getX() + (deltaX / deltaLength) * viewDistance;
+                     double relativeZ = player.getZ() + (deltaZ / deltaLength) * viewDistance;
+                     player.connection.send(new ClientboundLevelEventPacket(1023, new BlockPos((int) relativeX, (int) this.getY(), (int) relativeZ), 0, true));
+                  } else {
+                     player.connection.send(new ClientboundLevelEventPacket(1023, this.blockPosition(), 0, true));
+                  }
+               }
+               // CraftBukkit end
+            }
+         }
+
+         this.setInvulnerableTicks(k1);
+         if (this.tickCount % 10 == 0) {
+            this.heal$regainReason(EntityRegainHealthEvent.RegainReason.WITHER_SPAWN);
+            this.heal(10.0F);
+         }
+
         } else {
             super.customServerAiStep();
 
@@ -302,6 +_,7 @@
                         List<LivingEntity> list = this.level().getNearbyEntities(LivingEntity.class, TARGETING_CONDITIONS, this, this.getBoundingBox().inflate(20.0, 8.0, 20.0));
                         if (!list.isEmpty()) {
                             LivingEntity livingentity1 = list.get(this.random.nextInt(list.size()));
+                     		if (CraftEventFactory.callEntityTargetLivingEvent(this, livingentity1, EntityTargetEvent.TargetReason.CLOSEST_ENTITY).isCancelled()) continue; // CraftBukkit
                             this.setAlternativeTarget(i, livingentity1.getId());
                         }
                     }
@@ -316,7 +_,7 @@
 
             if (this.destroyBlocksTick > 0) {
                 this.destroyBlocksTick--;
-                if (this.destroyBlocksTick == 0 && this.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
+                if (this.destroyBlocksTick == 0 && net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.level(), this)) {
                     boolean flag = false;
                     int l = Mth.floor(this.getBbWidth() / 2.0F + 1.0F);
                     int i1 = Mth.floor(this.getBbHeight());
@@ -325,7 +_,12 @@
                         this.getBlockX() - l, this.getBlockY(), this.getBlockZ() - l, this.getBlockX() + l, this.getBlockY() + i1, this.getBlockZ() + l
                     )) {
                         BlockState blockstate = this.level().getBlockState(blockpos);
-                        if (canDestroy(blockstate)) {
+                        if (blockstate.canEntityDestroy(this.level(), blockpos, this) && net.minecraftforge.event.ForgeEventFactory.onEntityDestroyBlock(this, blockpos, blockstate)) {
+                           // CraftBukkit start
+                           if (!CraftEventFactory.callEntityChangeBlockEvent(this, blockpos, Blocks.AIR.defaultBlockState())) {
+                              continue;
+                           }
+                           // CraftBukkit end
                             flag = this.level().destroyBlock(blockpos, true, this) || flag;
                         }
                     }
@@ -337,6 +_,7 @@
             }
 
             if (this.tickCount % 20 == 0) {
+                this.heal$regainReason(EntityRegainHealthEvent.RegainReason.REGEN); // CraftBukkit
                 this.heal(1.0F);
             }
 
@@ -344,6 +_,10 @@
         }
     }
 
+    /**
+     * @deprecated Forge: Use {@link BlockState#canEntityDestroy(net.minecraft.world.level.BlockGetter, BlockPos, Entity)} instead.
+     */
+    @Deprecated
     public static boolean canDestroy(BlockState p_31492_) {
         return !p_31492_.isAir() && !p_31492_.is(BlockTags.WITHER_IMMUNE);
     }

--- a/net/minecraft/world/entity/monster/ZombieVillager.java
+++ b/net/minecraft/world/entity/monster/ZombieVillager.java
@@ -16,6 +_,7 @@
 import net.minecraft.network.syncher.EntityDataAccessor;
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.sounds.SoundEvent;
@@ -26,6 +_,8 @@
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.effect.MobEffectInstance;
 import net.minecraft.world.effect.MobEffects;
+import net.minecraft.world.entity.Entity;
+import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.EquipmentSlot;
 import net.minecraft.world.entity.MobSpawnType;
@@ -48,6 +_,9 @@
 import net.minecraft.world.level.block.BedBlock;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
+import org.bukkit.event.entity.CreatureSpawnEvent;
+import org.bukkit.event.entity.EntityTransformEvent;
+import org.joml.Vector3f;
 import org.slf4j.Logger;
 
 public class ZombieVillager extends Zombie implements VillagerDataHolder {
@@ -66,6 +_,7 @@
     @Nullable
     private MerchantOffers tradeOffers;
     private int villagerXp;
+    private int lastTick = MinecraftServer.currentTick; // CraftBukkit - add field
 
     public ZombieVillager(EntityType<? extends ZombieVillager> p_34368_, Level p_34369_) {
         super(p_34368_, p_34369_);
@@ -83,9 +_,9 @@
     public void addAdditionalSaveData(CompoundTag p_34397_) {
         super.addAdditionalSaveData(p_34397_);
         VillagerData.CODEC
-            .encodeStart(NbtOps.INSTANCE, this.getVillagerData())
-            .resultOrPartial(LOGGER::error)
-            .ifPresent(p_204072_ -> p_34397_.put("VillagerData", p_204072_));
+                .encodeStart(NbtOps.INSTANCE, this.getVillagerData())
+                .resultOrPartial(LOGGER::error)
+                .ifPresent(p_204072_ -> p_34397_.put("VillagerData", p_204072_));
         if (this.tradeOffers != null) {
             p_34397_.put("Offers", MerchantOffers.CODEC.encodeStart(this.registryAccess().createSerializationContext(NbtOps.INSTANCE), this.tradeOffers).getOrThrow());
         }
@@ -112,9 +_,9 @@
 
         if (p_34387_.contains("Offers")) {
             MerchantOffers.CODEC
-                .parse(this.registryAccess().createSerializationContext(NbtOps.INSTANCE), p_34387_.get("Offers"))
-                .resultOrPartial(Util.prefix("Failed to load offers: ", LOGGER::warn))
-                .ifPresent(p_327013_ -> this.tradeOffers = p_327013_);
+                    .parse(this.registryAccess().createSerializationContext(NbtOps.INSTANCE), p_34387_.get("Offers"))
+                    .resultOrPartial(Util.prefix("Failed to load offers: ", LOGGER::warn))
+                    .ifPresent(p_327013_ -> this.tradeOffers = p_327013_);
         }
 
         if (p_34387_.contains("Gossips", 9)) {
@@ -134,13 +_,18 @@
     public void tick() {
         if (!this.level().isClientSide && this.isAlive() && this.isConverting()) {
             int i = this.getConversionProgress();
+            // CraftBukkit start - Use wall time instead of ticks for villager conversion
+            int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
+            i *= elapsedTicks;
+            // CraftBukkit end
             this.villagerConversionTime -= i;
-            if (this.villagerConversionTime <= 0) {
-                this.finishConversion((ServerLevel)this.level());
+            if (this.villagerConversionTime <= 0 && net.minecraftforge.event.ForgeEventFactory.canLivingConvert(this, EntityType.VILLAGER, (timer) -> this.villagerConversionTime = timer)) {
+                this.finishConversion((ServerLevel) this.level());
             }
         }
 
         super.tick();
+        this.lastTick = MinecraftServer.currentTick; // CraftBukkit
     }
 
     @Override
@@ -176,13 +_,15 @@
         return this.getEntityData().get(DATA_CONVERTING_ID);
     }
 
-    private void startConverting(@Nullable UUID p_34384_, int p_34385_) {
+    public void startConverting(@Nullable UUID p_34384_, int p_34385_) {
         this.conversionStarter = p_34384_;
         this.villagerConversionTime = p_34385_;
         this.getEntityData().set(DATA_CONVERTING_ID, true);
-        this.removeEffect(MobEffects.WEAKNESS);
-        this.addEffect(new MobEffectInstance(MobEffects.DAMAGE_BOOST, p_34385_, Math.min(this.level().getDifficulty().getId() - 1, 0)));
-        this.level().broadcastEntityEvent(this, (byte)16);
+        // CraftBukkit start
+        this.removeEffect(MobEffects.WEAKNESS, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION);
+        this.addEffect(new MobEffectInstance(MobEffects.DAMAGE_BOOST, p_34385_, Math.min(this.level.getDifficulty().getId() - 1, 0)), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION);
+        // CraftBukkit end
+        this.level().broadcastEntityEvent(this, (byte) 16);
     }
 
     @Override
@@ -190,16 +_,16 @@
         if (p_34372_ == 16) {
             if (!this.isSilent()) {
                 this.level()
-                    .playLocalSound(
-                        this.getX(),
-                        this.getEyeY(),
-                        this.getZ(),
-                        SoundEvents.ZOMBIE_VILLAGER_CURE,
-                        this.getSoundSource(),
-                        1.0F + this.random.nextFloat(),
-                        this.random.nextFloat() * 0.7F + 0.3F,
-                        false
-                    );
+                        .playLocalSound(
+                                this.getX(),
+                                this.getEyeY(),
+                                this.getZ(),
+                                SoundEvents.ZOMBIE_VILLAGER_CURE,
+                                this.getSoundSource(),
+                                1.0F + this.random.nextFloat(),
+                                this.random.nextFloat() * 0.7F + 0.3F,
+                                false
+                        );
             }
         } else {
             super.handleEntityEvent(p_34372_);
@@ -207,38 +_,45 @@
     }
 
     private void finishConversion(ServerLevel p_34399_) {
+        // CraftBukkit start
+        this.transformReasonAndspawnReason(EntityTransformEvent.TransformReason.CURED, CreatureSpawnEvent.SpawnReason.CURED); // Mohist
         Villager villager = this.convertTo(EntityType.VILLAGER, false);
-        if (villager != null) {
-            for (EquipmentSlot equipmentslot : this.dropPreservedEquipment(p_341444_ -> !EnchantmentHelper.has(p_341444_, EnchantmentEffectComponents.PREVENT_ARMOR_CHANGE))) {
-                SlotAccess slotaccess = villager.getSlot(equipmentslot.getIndex() + 300);
-                slotaccess.set(this.getItemBySlot(equipmentslot));
-            }
-
-            villager.setVillagerData(this.getVillagerData());
-            if (this.gossips != null) {
-                villager.setGossips(this.gossips);
-            }
-
-            if (this.tradeOffers != null) {
-                villager.setOffers(this.tradeOffers.copy());
-            }
-
-            villager.setVillagerXp(this.villagerXp);
-            villager.finalizeSpawn(p_34399_, p_34399_.getCurrentDifficultyAt(villager.blockPosition()), MobSpawnType.CONVERSION, null);
-            villager.refreshBrain(p_34399_);
-            if (this.conversionStarter != null) {
-                Player player = p_34399_.getPlayerByUUID(this.conversionStarter);
-                if (player instanceof ServerPlayer) {
-                    CriteriaTriggers.CURED_ZOMBIE_VILLAGER.trigger((ServerPlayer)player, this, villager);
-                    p_34399_.onReputationEvent(ReputationEventType.ZOMBIE_VILLAGER_CURED, player, villager);
-                }
-            }
-
-            villager.addEffect(new MobEffectInstance(MobEffects.CONFUSION, 200, 0));
-            if (!this.isSilent()) {
-                p_34399_.levelEvent(null, 1027, this.blockPosition(), 0);
-            }
-        }
+        if (villager == null) {
+            ((org.bukkit.entity.ZombieVillager) getBukkitEntity()).setConversionTime(-1); // SPIGOT-5208: End conversion to stop event spam
+            return;
+        }
+        // CraftBukkit end
+
+        for (EquipmentSlot equipmentslot : this.dropPreservedEquipment(p_341444_ -> !EnchantmentHelper.has(p_341444_, EnchantmentEffectComponents.PREVENT_ARMOR_CHANGE))) {
+            SlotAccess slotaccess = villager.getSlot(equipmentslot.getIndex() + 300);
+            slotaccess.set(this.getItemBySlot(equipmentslot));
+        }
+
+        villager.setVillagerData(this.getVillagerData());
+        if (this.gossips != null) {
+            villager.setGossips(this.gossips);
+        }
+
+        if (this.tradeOffers != null) {
+            villager.setOffers(this.tradeOffers.copy());
+        }
+
+        villager.setVillagerXp(this.villagerXp);
+        villager.finalizeSpawn(p_34399_, p_34399_.getCurrentDifficultyAt(villager.blockPosition()), MobSpawnType.CONVERSION, null);
+        villager.refreshBrain(p_34399_);
+        if (this.conversionStarter != null) {
+            Player player = p_34399_.getPlayerByUUID(this.conversionStarter);
+            if (player instanceof ServerPlayer) {
+                CriteriaTriggers.CURED_ZOMBIE_VILLAGER.trigger((ServerPlayer) player, this, villager);
+                p_34399_.onReputationEvent(ReputationEventType.ZOMBIE_VILLAGER_CURED, player, villager);
+            }
+        }
+
+        villager.addEffect(new MobEffectInstance(MobEffects.CONFUSION, 200, 0));
+        if (!this.isSilent()) {
+            p_34399_.levelEvent(null, 1027, this.blockPosition(), 0);
+        }
+        net.minecraftforge.event.ForgeEventFactory.onLivingConvert(this, villager);
     }
 
     private int getConversionProgress() {
@@ -247,9 +_,9 @@
             int j = 0;
             BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-            for (int k = (int)this.getX() - 4; k < (int)this.getX() + 4 && j < 14; k++) {
-                for (int l = (int)this.getY() - 4; l < (int)this.getY() + 4 && j < 14; l++) {
-                    for (int i1 = (int)this.getZ() - 4; i1 < (int)this.getZ() + 4 && j < 14; i1++) {
+            for (int k = (int) this.getX() - 4; k < (int) this.getX() + 4 && j < 14; k++) {
+                for (int l = (int) this.getY() - 4; l < (int) this.getY() + 4 && j < 14; l++) {
+                    for (int i1 = (int) this.getZ() - 4; i1 < (int) this.getZ() + 4 && j < 14; i1++) {
                         BlockState blockstate = this.level().getBlockState(blockpos$mutableblockpos.set(k, l, i1));
                         if (blockstate.is(Blocks.IRON_BARS) || blockstate.getBlock() instanceof BedBlock) {
                             if (this.random.nextFloat() < 0.3F) {
@@ -269,8 +_,8 @@
     @Override
     public float getVoicePitch() {
         return this.isBaby()
-            ? (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 2.0F
-            : (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F;
+                ? (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 2.0F
+                : (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F;
     }
 
     @Override

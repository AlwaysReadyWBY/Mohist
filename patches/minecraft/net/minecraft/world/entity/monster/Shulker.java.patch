--- a/net/minecraft/world/entity/monster/Shulker.java
+++ b/net/minecraft/world/entity/monster/Shulker.java
@@ -2,6 +_,7 @@
 
 import java.util.EnumSet;
 import java.util.Optional;
+import java.util.UUID;
 import javax.annotation.Nullable;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
@@ -22,12 +_,14 @@
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.Entity;
+import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntitySelector;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.MoverType;
+import net.minecraft.world.entity.Pose;
 import net.minecraft.world.entity.SpawnGroupData;
 import net.minecraft.world.entity.VariantHolder;
 import net.minecraft.world.entity.ai.attributes.AttributeModifier;
@@ -52,7 +_,11 @@
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.util.CraftLocation;
+import org.bukkit.event.entity.EntityTeleportEvent;
 import org.joml.Vector3f;
+import org.joml.Vector3fc;
 
 public class Shulker extends AbstractGolem implements VariantHolder<Optional<DyeColor>>, Enemy {
     private static final ResourceLocation COVERED_ARMOR_MODIFIER_ID = ResourceLocation.withDefaultNamespace("covered");
@@ -390,6 +_,12 @@
                     && this.level().noCollision(this, new AABB(blockpos1).deflate(1.0E-6))) {
                     Direction direction = this.findAttachableSurface(blockpos1);
                     if (direction != null) {
+                        net.minecraftforge.event.entity.EntityTeleportEvent.EnderEntity event = net.minecraftforge.event.ForgeEventFactory.onEnderTeleport(this, blockpos1.getX(), blockpos1.getY(), blockpos1.getZ());
+                        if (event.isCanceled()) direction = null;
+                        blockpos1 = BlockPos.containing(event.getTargetX(), event.getTargetY(), event.getTargetZ());
+                    }
+
+                    if (direction != null) {
                         this.unRide();
                         this.setAttachFace(direction);
                         this.playSound(SoundEvents.SHULKER_TELEPORT, 1.0F, 1.0F);
@@ -455,6 +_,7 @@
                 if (shulker != null) {
                     shulker.setVariant(this.getVariant());
                     shulker.moveTo(vec3);
+               		shulker.spawnReason(org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.BREEDING);  // CraftBukkit - the mysteries of life
                     this.level().addFreshEntity(shulker);
                 }
             }
@@ -470,7 +_,7 @@
         return this.entityData.get(DATA_ATTACH_FACE_ID);
     }
 
-    private void setAttachFace(Direction p_149789_) {
+    public void setAttachFace(Direction p_149789_) {
         this.entityData.set(DATA_ATTACH_FACE_ID, p_149789_);
     }
 
@@ -483,11 +_,11 @@
         super.onSyncedDataUpdated(p_33434_);
     }
 
-    private int getRawPeekAmount() {
+    public int getRawPeekAmount() {
         return this.entityData.get(DATA_PEEK_ID);
     }
 
-    void setRawPeekAmount(int p_33419_) {
+    public void setRawPeekAmount(int p_33419_) {
         if (!this.level().isClientSide) {
             this.getAttribute(Attributes.ARMOR).removeModifier(COVERED_ARMOR_MODIFIER_ID);
             if (p_33419_ == 0) {

--- a/net/minecraft/world/entity/monster/Slime.java
+++ b/net/minecraft/world/entity/monster/Slime.java
@@ -1,6 +_,7 @@
 package net.minecraft.world.entity.monster;
 
 import com.google.common.annotations.VisibleForTesting;
+
 import java.util.EnumSet;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
@@ -43,6 +_,9 @@
 import net.minecraft.world.level.levelgen.WorldgenRandom;
 import net.minecraft.world.phys.Vec3;
 import org.joml.Vector3f;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTransformEvent;
+import org.bukkit.event.entity.SlimeSplitEvent;
 
 public class Slime extends Mob implements Enemy {
    private static final EntityDataAccessor<Integer> ID_SIZE = SynchedEntityData.defineId(Slime.class, EntityDataSerializers.INT);
@@ -130,6 +_,8 @@
       if (this.onGround() && !this.wasOnGround) {
          int i = this.getSize();
 
+         // Forge: Don't spawn particles if it's handled by the implementation itself
+         if (!spawnCustomParticles())
          for(int j = 0; j < i * 8; ++j) {
             float f = this.random.nextFloat() * ((float)Math.PI * 2F);
             float f1 = this.random.nextFloat() * 0.5F + 0.5F;
@@ -181,6 +_,9 @@
       return (EntityType<? extends Slime>)super.getType();
    }
 
+   // Mohist start - fix mixin(locals = LocalCapture.CAPTURE_FAILHARD)
+   public SlimeSplitEvent event;
+
    public void remove(Entity.RemovalReason p_149847_) {
       int i = this.getSize();
       if (!this.level().isClientSide && i > 1 && this.isDeadOrDying()) {
@@ -190,6 +_,18 @@
          int j = i / 2;
          int k = 2 + this.random.nextInt(3);
 
+         // CraftBukkit start
+         event = new SlimeSplitEvent((org.bukkit.entity.Slime) this.getBukkitEntity(), k);
+         this.level.getCraftServer().getPluginManager().callEvent(event);
+
+         if (!event.isCancelled() && event.getCount() > 0) {
+            k = event.getCount();
+         } else {
+            super.remove(p_149847_);
+            return;
+         }
+         // CraftBukkit end
+
          for(int l = 0; l < k; ++l) {
             float f1 = ((float)(l % 2) - 0.5F) * f;
             float f2 = ((float)(l / 2) - 0.5F) * f;
@@ -204,6 +_,13 @@
                slime.setInvulnerable(this.isInvulnerable());
                slime.setSize(j, true);
                slime.moveTo(this.getX() + (double)f1, this.getY() + 0.5D, this.getZ() + (double)f2, this.random.nextFloat() * 360.0F, 0.0F);
+               // CraftBukkit start
+               if (CraftEventFactory.callEntityTransformEvent(this, slime, EntityTransformEvent.TransformReason.SPLIT).isCancelled()) {
+                  super.remove(p_149847_);
+                  return;
+               }
+               // CraftBukkit end
+               slime.spawnReason(org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SLIME_SPLIT);
                this.level().addFreshEntity(slime);
             }
          }
@@ -337,6 +_,12 @@
    public EntityDimensions getDimensions(Pose p_33597_) {
       return super.getDimensions(p_33597_).scale(0.255F * (float)this.getSize());
    }
+
+   /**
+    * Called when the slime spawns particles on landing, see onUpdate.
+    * Return true to prevent the spawning of the default particles.
+    */
+   protected boolean spawnCustomParticles() { return false; }
 
    static class SlimeAttackGoal extends Goal {
       private final Slime slime;

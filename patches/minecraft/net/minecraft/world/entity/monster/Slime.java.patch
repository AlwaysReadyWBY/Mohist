--- a/net/minecraft/world/entity/monster/Slime.java
+++ b/net/minecraft/world/entity/monster/Slime.java
@@ -1,6 +_,7 @@
 package net.minecraft.world.entity.monster;
 
 import com.google.common.annotations.VisibleForTesting;
+
 import java.util.EnumSet;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
@@ -44,6 +_,10 @@
 import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.levelgen.WorldgenRandom;
 import net.minecraft.world.phys.Vec3;
+import org.joml.Vector3f;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTransformEvent;
+import org.bukkit.event.entity.SlimeSplitEvent;
 
 public class Slime extends Mob implements Enemy {
     private static final EntityDataAccessor<Integer> ID_SIZE = SynchedEntityData.defineId(Slime.class, EntityDataSerializers.INT);
@@ -141,13 +_,15 @@
             float f = this.getDimensions(this.getPose()).width() * 2.0F;
             float f1 = f / 2.0F;
 
-            for (int i = 0; (float)i < f * 16.0F; i++) {
-                float f2 = this.random.nextFloat() * (float) (Math.PI * 2);
-                float f3 = this.random.nextFloat() * 0.5F + 0.5F;
-                float f4 = Mth.sin(f2) * f1 * f3;
-                float f5 = Mth.cos(f2) * f1 * f3;
-                this.level().addParticle(this.getParticleType(), this.getX() + (double)f4, this.getY(), this.getZ() + (double)f5, 0.0, 0.0, 0.0);
-            }
+            // Forge: Don't spawn particles if it's handled by the implementation itself
+            if (!spawnCustomParticles())
+                for (int i = 0; (float)i < f * 16.0F; i++) {
+                    float f2 = this.random.nextFloat() * (float) (Math.PI * 2);
+                    float f3 = this.random.nextFloat() * 0.5F + 0.5F;
+                    float f4 = Mth.sin(f2) * f1 * f3;
+                    float f5 = Mth.cos(f2) * f1 * f3;
+                    this.level().addParticle(this.getParticleType(), this.getX() + (double)f4, this.getY(), this.getZ() + (double)f5, 0.0, 0.0, 0.0);
+                }
 
             this.playSound(this.getSquishSound(), this.getSoundVolume(), ((this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F) / 0.8F);
             this.targetSquish = -0.5F;
@@ -159,6 +_,12 @@
         this.decreaseSquish();
     }
 
+    /**
+     * Called when the slime spawns particles on landing, see onUpdate.
+     * Return true to prevent the spawning of the default particles.
+     */
+    protected boolean spawnCustomParticles() { return false; }
+
     protected void decreaseSquish() {
         this.targetSquish *= 0.6F;
     }
@@ -195,38 +_,58 @@
         return (EntityType<? extends Slime>)super.getType();
     }
 
-    @Override
-    public void remove(Entity.RemovalReason p_149847_) {
-        int i = this.getSize();
-        if (!this.level().isClientSide && i > 1 && this.isDeadOrDying()) {
-            Component component = this.getCustomName();
-            boolean flag = this.isNoAi();
-            float f = this.getDimensions(this.getPose()).width();
-            float f1 = f / 2.0F;
-            int j = i / 2;
-            int k = 2 + this.random.nextInt(3);
-
-            for (int l = 0; l < k; l++) {
-                float f2 = ((float)(l % 2) - 0.5F) * f1;
-                float f3 = ((float)(l / 2) - 0.5F) * f1;
-                Slime slime = this.getType().create(this.level());
-                if (slime != null) {
-                    if (this.isPersistenceRequired()) {
-                        slime.setPersistenceRequired();
-                    }
-
-                    slime.setCustomName(component);
-                    slime.setNoAi(flag);
-                    slime.setInvulnerable(this.isInvulnerable());
-                    slime.setSize(j, true);
-                    slime.moveTo(this.getX() + (double)f2, this.getY() + 0.5, this.getZ() + (double)f3, this.random.nextFloat() * 360.0F, 0.0F);
-                    this.level().addFreshEntity(slime);
-                }
+   // Mohist start - fix mixin(locals = LocalCapture.CAPTURE_FAILHARD)
+   public SlimeSplitEvent event;
+
+   public void remove(Entity.RemovalReason p_149847_) {
+      int i = this.getSize();
+      if (!this.level().isClientSide && i > 1 && this.isDeadOrDying()) {
+         Component component = this.getCustomName();
+         boolean flag = this.isNoAi();
+         float f = (float)i / 4.0F;
+         int j = i / 2;
+         int k = 2 + this.random.nextInt(3);
+
+         // CraftBukkit start
+         event = new SlimeSplitEvent((org.bukkit.entity.Slime) this.getBukkitEntity(), k);
+         this.level.getCraftServer().getPluginManager().callEvent(event);
+
+         if (!event.isCancelled() && event.getCount() > 0) {
+            k = event.getCount();
+         } else {
+            super.remove(p_149847_);
+            return;
+         }
+         // CraftBukkit end
+
+         for(int l = 0; l < k; ++l) {
+            float f1 = ((float)(l % 2) - 0.5F) * f;
+            float f2 = ((float)(l / 2) - 0.5F) * f;
+            Slime slime = this.getType().create(this.level());
+            if (slime != null) {
+               if (this.isPersistenceRequired()) {
+                  slime.setPersistenceRequired();
+               }
+
+               slime.setCustomName(component);
+               slime.setNoAi(flag);
+               slime.setInvulnerable(this.isInvulnerable());
+               slime.setSize(j, true);
+               slime.moveTo(this.getX() + (double)f1, this.getY() + 0.5D, this.getZ() + (double)f2, this.random.nextFloat() * 360.0F, 0.0F);
+               // CraftBukkit start
+               if (CraftEventFactory.callEntityTransformEvent(this, slime, EntityTransformEvent.TransformReason.SPLIT).isCancelled()) {
+                  super.remove(p_149847_);
+                  return;
+               }
+               // CraftBukkit end
+               slime.spawnReason(org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SLIME_SPLIT);
+               this.level().addFreshEntity(slime);
             }
-        }
+         }
+      }
 
-        super.remove(p_149847_);
-    }
+      super.remove(p_149847_);
+   }
 
     @Override
     public void push(Entity p_33636_) {

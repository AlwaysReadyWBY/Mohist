--- a/net/minecraft/world/entity/monster/piglin/PiglinAi.java
+++ b/net/minecraft/world/entity/monster/piglin/PiglinAi.java
@@ -6,6 +_,8 @@
 import java.util.Collections;
 import java.util.List;
 import java.util.Optional;
+import java.util.stream.Collectors;
+
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
@@ -72,6 +_,9 @@
 import net.minecraft.world.level.storage.loot.parameters.LootContextParamSets;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParams;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.entity.PiglinBarterEvent;
 
 public class PiglinAi {
     public static final int REPELLENT_DETECTION_RANGE_HORIZONTAL = 8;
@@ -323,31 +_,33 @@
         }
     }
 
-    protected static void pickUpItem(Piglin p_34844_, ItemEntity p_34845_) {
-        stopWalking(p_34844_);
-        ItemStack itemstack;
-        if (p_34845_.getItem().is(Items.GOLD_NUGGET)) {
-            p_34844_.take(p_34845_, p_34845_.getItem().getCount());
-            itemstack = p_34845_.getItem();
-            p_34845_.discard();
-        } else {
-            p_34844_.take(p_34845_, 1);
-            itemstack = removeOneItemFromItemEntity(p_34845_);
-        }
+   protected static void pickUpItem(Piglin p_34844_, ItemEntity p_34845_) {
+      stopWalking(p_34844_);
+      ItemStack itemstack;
+      if (p_34845_.getItem().is(Items.GOLD_NUGGET) && !org.bukkit.craftbukkit.event.CraftEventFactory.callEntityPickupItemEvent(p_34844_, p_34845_, 0, false).isCancelled()) {
+         p_34844_.take(p_34845_, p_34845_.getItem().getCount());
+         itemstack = p_34845_.getItem();
+         p_34845_.discard();
+      } else if (!org.bukkit.craftbukkit.event.CraftEventFactory.callEntityPickupItemEvent(p_34844_, p_34845_, p_34845_.getItem().getCount() - 1, false).isCancelled()) {
+         p_34844_.take(p_34845_, 1);
+         itemstack = removeOneItemFromItemEntity(p_34845_);
+      } else {
+         return;
+      }
 
-        if (isLovedItem(itemstack)) {
-            p_34844_.getBrain().eraseMemory(MemoryModuleType.TIME_TRYING_TO_REACH_ADMIRE_ITEM);
-            holdInOffhand(p_34844_, itemstack);
-            admireGoldItem(p_34844_);
-        } else if (isFood(itemstack) && !hasEatenRecently(p_34844_)) {
-            eat(p_34844_);
-        } else {
-            boolean flag = !p_34844_.equipItemIfPossible(itemstack).equals(ItemStack.EMPTY);
-            if (!flag) {
-                putInInventory(p_34844_, itemstack);
-            }
-        }
-    }
+      if (isLovedItem(itemstack, p_34844_)) { // CraftBukkit - Changes to allow for custom payment in bartering
+         p_34844_.getBrain().eraseMemory(MemoryModuleType.TIME_TRYING_TO_REACH_ADMIRE_ITEM);
+         holdInOffhand(p_34844_, itemstack);
+         admireGoldItem(p_34844_);
+      } else if (isFood(itemstack) && !hasEatenRecently(p_34844_)) {
+         eat(p_34844_);
+      } else {
+         boolean flag = !p_34844_.equipItemIfPossible(itemstack, p_34845_).equals(ItemStack.EMPTY);
+         if (!flag) {
+            putInInventory(p_34844_, itemstack);
+         }
+      }
+   }
 
     private static void holdInOffhand(Piglin p_34933_, ItemStack p_34934_) {
         if (isHoldingItemInOffHand(p_34933_)) {
@@ -369,33 +_,39 @@
         return itemstack1;
     }
 
-    protected static void stopHoldingOffHandItem(Piglin p_34868_, boolean p_34869_) {
-        ItemStack itemstack = p_34868_.getItemInHand(InteractionHand.OFF_HAND);
-        p_34868_.setItemInHand(InteractionHand.OFF_HAND, ItemStack.EMPTY);
-        if (p_34868_.isAdult()) {
-            boolean flag = isBarterCurrency(itemstack);
-            if (p_34869_ && flag) {
-                throwItems(p_34868_, getBarterResponseItems(p_34868_));
-            } else if (!flag) {
-                boolean flag1 = !p_34868_.equipItemIfPossible(itemstack).isEmpty();
-                if (!flag1) {
-                    putInInventory(p_34868_, itemstack);
-                }
-            }
-        } else {
-            boolean flag2 = !p_34868_.equipItemIfPossible(itemstack).isEmpty();
-            if (!flag2) {
-                ItemStack itemstack1 = p_34868_.getMainHandItem();
-                if (isLovedItem(itemstack1)) {
-                    putInInventory(p_34868_, itemstack1);
-                } else {
-                    throwItems(p_34868_, Collections.singletonList(itemstack1));
-                }
-
-                p_34868_.holdInMainHand(itemstack);
-            }
-        }
-    }
+   protected static void stopHoldingOffHandItem(Piglin p_34868_, boolean p_34869_) {
+      ItemStack itemstack = p_34868_.getItemInHand(InteractionHand.OFF_HAND);
+      p_34868_.setItemInHand(InteractionHand.OFF_HAND, ItemStack.EMPTY);
+      if (p_34868_.isAdult()) {
+         boolean flag = itemstack.isPiglinCurrency();
+         if (p_34869_ && flag) {
+            // CraftBukkit start
+            PiglinBarterEvent event = CraftEventFactory.callPiglinBarterEvent(p_34868_, getBarterResponseItems(p_34868_), itemstack);
+            if (!event.isCancelled()) {
+               throwItems(p_34868_, event.getOutcome().stream().map(CraftItemStack::asNMSCopy).collect(Collectors.toList()));
+            }
+            // CraftBukkit end
+         } else if (!flag) {
+            boolean flag1 = !p_34868_.equipItemIfPossible(itemstack).isEmpty();
+            if (!flag1) {
+               putInInventory(p_34868_, itemstack);
+            }
+         }
+      } else {
+         boolean flag2 = !p_34868_.equipItemIfPossible(itemstack).isEmpty();
+         if (!flag2) {
+            ItemStack itemstack1 = p_34868_.getMainHandItem();
+            if (isLovedItem(itemstack1, p_34868_)) { // CraftBukkit - Changes to allow for custom payment in bartering
+               putInInventory(p_34868_, itemstack1);
+            } else {
+               throwItems(p_34868_, Collections.singletonList(itemstack1));
+            }
+
+            p_34868_.holdInMainHand(itemstack);
+         }
+      }
+
+   }
 
     protected static void cancelAdmiring(Piglin p_34928_) {
         if (isAdmiringItem(p_34928_) && !p_34928_.getOffhandItem().isEmpty()) {
@@ -469,6 +_,12 @@
         }
     }
 
+   // CraftBukkit start - Added method to allow checking for custom payment items
+   protected static boolean isLovedItem(ItemStack itemstack, Piglin piglin) {
+      return isLovedItem(itemstack) || (piglin.interestItems.contains(itemstack.getItem()) || piglin.allowedBarterItems.contains(itemstack.getItem()));
+   }
+   // CraftBukkit end
+
     protected static boolean isLovedItem(ItemStack p_149966_) {
         return p_149966_.is(ItemTags.PIGLIN_LOVED);
     }
@@ -635,7 +_,7 @@
     public static boolean isWearingGold(LivingEntity p_34809_) {
         for (ItemStack itemstack : p_34809_.getArmorAndBodyArmorSlots()) {
             Item item = itemstack.getItem();
-            if (item instanceof ArmorItem && ((ArmorItem)item).getMaterial().is(ArmorMaterials.GOLD)) {
+            if (itemstack.makesPiglinsNeutral(p_34809_)) {
                 return true;
             }
         }
@@ -779,7 +_,7 @@
     }
 
     private static boolean hasCrossbow(LivingEntity p_34919_) {
-        return p_34919_.isHolding(Items.CROSSBOW);
+        return p_34919_.isHolding(is -> is.getItem() instanceof net.minecraft.world.item.CrossbowItem);
     }
 
     private static void admireGoldItem(LivingEntity p_34939_) {
@@ -790,8 +_,14 @@
         return p_35021_.getBrain().hasMemoryValue(MemoryModuleType.ADMIRING_ITEM);
     }
 
+   // CraftBukkit start - Changes to allow custom payment for bartering
+   private static boolean isBarterCurrency(ItemStack itemstack, Piglin piglin) {
+      return isBarterCurrency(itemstack) || piglin.allowedBarterItems.contains(itemstack.getItem());
+   }
+   // CraftBukkit end
+
     private static boolean isBarterCurrency(ItemStack p_149968_) {
-        return p_149968_.is(BARTERING_ITEM);
+        return p_149968_.is(BARTERING_ITEM) || p_149968_.isPiglinCurrency();
     }
 
     private static boolean isFood(ItemStack p_149970_) {
@@ -826,9 +_,9 @@
         return !p_35027_.getOffhandItem().isEmpty();
     }
 
-    private static boolean isNotHoldingLovedItemInOffHand(Piglin p_35029_) {
-        return p_35029_.getOffhandItem().isEmpty() || !isLovedItem(p_35029_.getOffhandItem());
-    }
+   private static boolean isNotHoldingLovedItemInOffHand(Piglin p_35029_) {
+      return p_35029_.getOffhandItem().isEmpty() || !isLovedItem(p_35029_.getOffhandItem(), p_35029_); // CraftBukkit - Changes to allow custom payment for bartering
+   }
 
     public static boolean isZombified(EntityType<?> p_34807_) {
         return p_34807_ == EntityType.ZOMBIFIED_PIGLIN || p_34807_ == EntityType.ZOGLIN;

--- a/net/minecraft/world/entity/decoration/ItemFrame.java
+++ b/net/minecraft/world/entity/decoration/ItemFrame.java
@@ -1,6 +_,7 @@
 package net.minecraft.world.entity.decoration;
 
 import com.mojang.logging.LogUtils;
+import java.util.OptionalInt;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
@@ -20,8 +_,10 @@
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.Entity;
+import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.MoverType;
+import net.minecraft.world.entity.Pose;
 import net.minecraft.world.entity.SlotAccess;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
@@ -38,23 +_,24 @@
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
 import org.apache.commons.lang3.Validate;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.slf4j.Logger;
 
 public class ItemFrame extends HangingEntity {
-    private static final Logger LOGGER = LogUtils.getLogger();
-    private static final EntityDataAccessor<ItemStack> DATA_ITEM = SynchedEntityData.defineId(ItemFrame.class, EntityDataSerializers.ITEM_STACK);
-    private static final EntityDataAccessor<Integer> DATA_ROTATION = SynchedEntityData.defineId(ItemFrame.class, EntityDataSerializers.INT);
-    public static final int NUM_ROTATIONS = 8;
-    public float dropChance = 1.0F;
-    public boolean fixed;
-
-    public ItemFrame(EntityType<? extends ItemFrame> p_31761_, Level p_31762_) {
-        super(p_31761_, p_31762_);
-    }
-
-    public ItemFrame(Level p_31764_, BlockPos p_31765_, Direction p_31766_) {
-        this(EntityType.ITEM_FRAME, p_31764_, p_31765_, p_31766_);
-    }
+   private static final Logger LOGGER = LogUtils.getLogger();
+   public static final EntityDataAccessor<ItemStack> DATA_ITEM = SynchedEntityData.defineId(ItemFrame.class, EntityDataSerializers.ITEM_STACK);
+   public static final EntityDataAccessor<Integer> DATA_ROTATION = SynchedEntityData.defineId(ItemFrame.class, EntityDataSerializers.INT);
+   public static final int NUM_ROTATIONS = 8;
+   public float dropChance = 1.0F;
+   public boolean fixed;
+
+   public ItemFrame(EntityType<? extends ItemFrame> p_31761_, Level p_31762_) {
+      super(p_31761_, p_31762_);
+   }
+
+   public ItemFrame(Level p_31764_, BlockPos p_31765_, Direction p_31766_) {
+      this(EntityType.ITEM_FRAME, p_31764_, p_31765_, p_31766_);
+   }
 
     public ItemFrame(EntityType<? extends ItemFrame> p_149621_, Level p_149622_, BlockPos p_149623_, Direction p_149624_) {
         super(p_149621_, p_149622_, p_149623_);
@@ -68,7 +_,7 @@
     }
 
     @Override
-    protected void setDirection(Direction p_31793_) {
+    public void setDirection(Direction p_31793_) {
         Validate.notNull(p_31793_);
         this.direction = p_31793_;
         if (p_31793_.getAxis().isHorizontal()) {
@@ -114,6 +_,37 @@
         }
     }
 
+   // CraftBukkit start - break out BB calc into own method
+   public static AABB calculateBoundingBox(@Nullable Entity entity, BlockPos blockPosition, Direction direction, int width, int height) {
+      double d0 = 0.46875D;
+      double d1 = (double) blockPosition.getX() + 0.5D - (double) direction.getStepX() * 0.46875D;
+      double d2 = (double) blockPosition.getY() + 0.5D - (double) direction.getStepY() * 0.46875D;
+      double d3 = (double) blockPosition.getZ() + 0.5D - (double) direction.getStepZ() * 0.46875D;
+      if (entity != null) {
+         entity.setPosRaw(d1, d2, d3);
+      }
+      double d4 = (double) width;
+      double d5 = (double) height;
+      double d6 = (double) width;
+      Direction.Axis direction$axis = direction.getAxis();
+      switch (direction$axis) {
+         case X:
+            d4 = 1.0D;
+            break;
+         case Y:
+            d5 = 1.0D;
+            break;
+         case Z:
+            d6 = 1.0D;
+      }
+
+      d4 /= 32.0D;
+      d5 /= 32.0D;
+      d6 /= 32.0D;
+      return new AABB(d1 - d4, d2 - d5, d3 - d6, d1 + d4, d2 + d5, d3 + d6);
+   }
+   // CraftBukkit end
+
     @Override
     public boolean survives() {
         if (this.fixed) {
@@ -156,6 +_,11 @@
             return false;
         } else if (!p_31776_.is(DamageTypeTags.IS_EXPLOSION) && !this.getItem().isEmpty()) {
             if (!this.level().isClientSide) {
+            // CraftBukkit start - fire EntityDamageEvent
+            if (CraftEventFactory.handleNonLivingEntityDamageEvent(this, p_31776_, p_31777_, false) || this.isRemoved()) {
+               return true;
+            }
+            // CraftBukkit end
                 this.dropItem(p_31776_.getEntity(), false);
                 this.gameEvent(GameEvent.BLOCK_CHANGE, p_31776_.getEntity());
                 this.playSound(this.getRemoveItemSound(), 1.0F, 1.0F);
@@ -282,6 +_,24 @@
             this.level().updateNeighbourForOutputSignal(this.pos, Blocks.AIR);
         }
     }
+
+   public void setItem(ItemStack pStack, boolean pUpdateNeighbours, boolean playSound) {
+      if (!pStack.isEmpty()) {
+         pStack = pStack.copy();
+         pStack.setCount(1);
+         pStack.setEntityRepresentation(this);
+      }
+
+      this.getEntityData().set(DATA_ITEM, pStack);
+      if (!pStack.isEmpty() && playSound) { // CraftBukkit
+         this.playSound(this.getAddItemSound(), 1.0F, 1.0F);
+      }
+
+      if (pUpdateNeighbours && this.pos != null) {
+         this.level.updateNeighbourForOutputSignal(this.pos, Blocks.AIR);
+      }
+
+   }
 
     public SoundEvent getAddItemSound() {
         return SoundEvents.ITEM_FRAME_ADD_ITEM;

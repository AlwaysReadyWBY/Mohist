--- a/net/minecraft/world/entity/decoration/ArmorStand.java
+++ b/net/minecraft/world/entity/decoration/ArmorStand.java
@@ -1,11 +_,16 @@
 package net.minecraft.world.entity.decoration;
 
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.List;
 import java.util.function.Predicate;
+import java.util.stream.Collectors;
 import javax.annotation.Nullable;
+
+import com.google.common.collect.Lists;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.NonNullList;
 import net.minecraft.core.Rotations;
-import net.minecraft.core.component.DataComponents;
 import net.minecraft.core.particles.BlockParticleOption;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
@@ -29,8 +_,7 @@
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.Pose;
-import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
-import net.minecraft.world.entity.ai.attributes.Attributes;
+import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.vehicle.AbstractMinecart;
 import net.minecraft.world.item.ItemStack;
@@ -44,6 +_,10 @@
 import net.minecraft.world.level.material.PushReaction;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.CraftEquipmentSlot;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.player.PlayerArmorStandManipulateEvent;
 
 public class ArmorStand extends LivingEntity {
     public static final int WOBBLE_TIME = 5;
@@ -73,19 +_,18 @@
     public static final EntityDataAccessor<Rotations> DATA_RIGHT_ARM_POSE = SynchedEntityData.defineId(ArmorStand.class, EntityDataSerializers.ROTATIONS);
     public static final EntityDataAccessor<Rotations> DATA_LEFT_LEG_POSE = SynchedEntityData.defineId(ArmorStand.class, EntityDataSerializers.ROTATIONS);
     public static final EntityDataAccessor<Rotations> DATA_RIGHT_LEG_POSE = SynchedEntityData.defineId(ArmorStand.class, EntityDataSerializers.ROTATIONS);
-    private static final Predicate<Entity> RIDABLE_MINECARTS = p_31582_ -> p_31582_ instanceof AbstractMinecart
-            && ((AbstractMinecart)p_31582_).getMinecartType() == AbstractMinecart.Type.RIDEABLE;
+    private static final Predicate<Entity> RIDABLE_MINECARTS = p_31582_ -> p_31582_ instanceof AbstractMinecart abstractMinecart && abstractMinecart.canBeRidden();
     private final NonNullList<ItemStack> handItems = NonNullList.withSize(2, ItemStack.EMPTY);
     private final NonNullList<ItemStack> armorItems = NonNullList.withSize(4, ItemStack.EMPTY);
     private boolean invisible;
     public long lastHit;
-    public int disabledSlots;
-    public Rotations headPose = DEFAULT_HEAD_POSE;
-    public Rotations bodyPose = DEFAULT_BODY_POSE;
-    public Rotations leftArmPose = DEFAULT_LEFT_ARM_POSE;
-    public Rotations rightArmPose = DEFAULT_RIGHT_ARM_POSE;
-    public Rotations leftLegPose = DEFAULT_LEFT_LEG_POSE;
-    public Rotations rightLegPose = DEFAULT_RIGHT_LEG_POSE;
+   	public int disabledSlots;
+   	public Rotations headPose = DEFAULT_HEAD_POSE;
+   	public Rotations bodyPose = DEFAULT_BODY_POSE;
+   	public Rotations leftArmPose = DEFAULT_LEFT_ARM_POSE;
+   	public Rotations rightArmPose = DEFAULT_RIGHT_ARM_POSE;
+   	public Rotations leftLegPose = DEFAULT_LEFT_LEG_POSE;
+   	public Rotations rightLegPose = DEFAULT_RIGHT_LEG_POSE;
 
     public ArmorStand(EntityType<? extends ArmorStand> p_31553_, Level p_31554_) {
         super(p_31553_, p_31554_);
@@ -96,6 +_,13 @@
         this.setPos(p_31557_, p_31558_, p_31559_);
     }
 
+   // CraftBukkit start - SPIGOT-3607, SPIGOT-3637
+   @Override
+   public float getBukkitYaw() {
+      return this.getYRot();
+   }
+   // CraftBukkit end
+   
     public static AttributeSupplier.Builder createAttributes() {
         return createLivingAttributes().add(Attributes.STEP_HEIGHT, 0.0);
     }
@@ -169,6 +_,19 @@
         }
     }
 
+   public void setItemSlot(EquipmentSlot pSlot, ItemStack pStack, boolean silent) {
+      // CraftBukkit end
+      this.verifyEquippedItem(pStack);
+      switch(pSlot.getType()) {
+         case HAND:
+            this.handItems.set(pSlot.getIndex(), pStack);
+            break;
+         case ARMOR:
+            this.armorItems.set(pSlot.getIndex(), pStack);
+      }
+
+   }
+
     @Override
     public boolean canTakeItem(ItemStack p_31638_) {
         EquipmentSlot equipmentslot = Mob.getEquipmentSlotForItem(p_31638_);
@@ -357,8 +_,24 @@
         return (this.disabledSlots & 1 << p_31627_.getFilterFlag()) != 0 || p_31627_.getType() == EquipmentSlot.Type.HAND && !this.isShowArms();
     }
 
-    private boolean swapItem(Player p_31589_, EquipmentSlot p_31590_, ItemStack p_31591_, InteractionHand p_31592_) {
-        ItemStack itemstack = this.getItemBySlot(p_31590_);
+   private boolean swapItem(Player p_31589_, EquipmentSlot p_31590_, ItemStack p_31591_, InteractionHand p_31592_) {
+      ItemStack itemstack = this.getItemBySlot(p_31590_);
+      // CraftBukkit start
+      org.bukkit.inventory.ItemStack armorStandItem = CraftItemStack.asCraftMirror(p_31591_);
+      org.bukkit.inventory.ItemStack playerHeldItem = CraftItemStack.asCraftMirror(itemstack);
+
+      org.bukkit.entity.Player player = (org.bukkit.entity.Player) p_31589_.getBukkitEntity();
+      org.bukkit.entity.ArmorStand self = (org.bukkit.entity.ArmorStand) this.getBukkitEntity();
+
+      org.bukkit.inventory.EquipmentSlot slot = CraftEquipmentSlot.getSlot(p_31590_);
+      org.bukkit.inventory.EquipmentSlot hand = CraftEquipmentSlot.getHand(p_31592_);
+      PlayerArmorStandManipulateEvent armorStandManipulateEvent = new PlayerArmorStandManipulateEvent(player,self,playerHeldItem,armorStandItem,slot,hand);
+      this.level.getCraftServer().getPluginManager().callEvent(armorStandManipulateEvent);
+
+      if (armorStandManipulateEvent.isCancelled()) {
+         return true;
+      }
+      // CraftBukkit end
         if (!itemstack.isEmpty() && (this.disabledSlots & 1 << p_31590_.getFilterFlag() + 8) != 0) {
             return false;
         } else if (itemstack.isEmpty() && (this.disabledSlots & 1 << p_31590_.getFilterFlag() + 16) != 0) {
@@ -595,11 +_,27 @@
         return this.isSmall();
     }
 
-    @Override
-    public void kill() {
-        this.remove(Entity.RemovalReason.KILLED);
-        this.gameEvent(GameEvent.ENTITY_DIE);
-    }
+   // CraftBukkit start
+   @Override
+   public boolean shouldDropExperience() {
+      return true; // MC-157395, SPIGOT-5193 even baby (small) armor stands should drop
+   }
+   // CraftBukkit end
+
+   public void kill() {
+      Collection<ItemEntity> captureDrops = this.captureDrops(null);
+      List<org.bukkit.inventory.ItemStack> drops;
+      if (captureDrops == null) {
+         drops = new ArrayList<>();
+      } else if (captureDrops instanceof List) {
+         drops = Lists.transform((List<ItemEntity>) captureDrops, e -> CraftItemStack.asCraftMirror(e.getItem()));
+      } else {
+         drops = captureDrops.stream().map(ItemEntity::getItem).map(CraftItemStack::asCraftMirror).collect(Collectors.toList());
+      }
+      CraftEventFactory.callEntityDeathEvent(this, drops); // CraftBukkit - call event
+      this.remove(Entity.RemovalReason.KILLED);
+      this.gameEvent(GameEvent.ENTITY_DIE);
+   }
 
     @Override
     public boolean ignoreExplosion(Explosion p_310221_) {

--- a/net/minecraft/world/server/ServerChunkProvider.java
+++ b/net/minecraft/world/server/ServerChunkProvider.java
@@ -1,9 +_,5 @@
 package net.minecraft.world.server;
 
-import com.google.common.annotations.VisibleForTesting;
-import com.google.common.collect.Lists;
-import com.mojang.datafixers.DataFixer;
-import com.mojang.datafixers.util.Either;
 import java.io.File;
 import java.io.IOException;
 import java.util.Arrays;
@@ -16,7 +_,14 @@
 import java.util.function.Consumer;
 import java.util.function.Function;
 import java.util.function.Supplier;
+
 import javax.annotation.Nullable;
+
+import com.google.common.annotations.VisibleForTesting;
+import com.google.common.collect.Lists;
+import com.mojang.datafixers.DataFixer;
+import com.mojang.datafixers.util.Either;
+
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.player.ServerPlayerEntity;
 import net.minecraft.network.IPacket;
@@ -49,7 +_,7 @@
 public class ServerChunkProvider extends AbstractChunkProvider {
    private static final List<ChunkStatus> field_217239_c = ChunkStatus.func_222582_a();
    private final TicketManager field_217240_d;
-   public final ChunkGenerator field_186029_c;
+   public ChunkGenerator field_186029_c;
    public final ServerWorld field_73251_h;
    private final Thread field_217241_g;
    private final ServerWorldLightManager field_217242_h;
@@ -80,6 +_,24 @@
       this.func_222869_l();
    }
 
+   // CraftBukkit start - properly implement isChunkLoaded
+   public boolean isChunkLoaded(int chunkX, int chunkZ) {
+      ChunkHolder chunk = this.field_217237_a.func_219220_a(ChunkPos.func_77272_a(chunkX, chunkZ));
+      if (chunk == null) {
+         return false;
+      }
+      return chunk.getFullChunk() != null;
+   }
+
+   public Chunk getChunkUnchecked(int chunkX, int chunkZ) {
+      ChunkHolder chunk = this.field_217237_a.func_219220_a(ChunkPos.func_77272_a(chunkX, chunkZ));
+      if (chunk == null) {
+         return null;
+      }
+      return chunk.getFullChunkUnchecked();
+   }
+   // CraftBukkit end
+
    public ServerWorldLightManager func_212863_j_() {
       return this.field_217242_h;
    }
@@ -125,6 +_,11 @@
             }
          }
 
+         ChunkHolder chunkholder = this.func_217213_a(i);
+         if (chunkholder != null && chunkholder.currentlyLoading != null) {
+             return chunkholder.currentlyLoading; //Forge - If the requested chunk is loading, bypass the future chain to prevent a deadlock.
+         }
+
          iprofiler.func_230035_c_("getChunkCacheMiss");
          CompletableFuture<Either<IChunk, ChunkHolder.IChunkLoadingError>> completablefuture = this.func_217233_c(p_212849_1_, p_212849_2_, p_212849_3_, p_212849_4_);
          this.field_217243_i.func_213161_c(completablefuture::isDone);
@@ -208,7 +_,15 @@
       long i = chunkpos.func_201841_a();
       int j = 33 + ChunkStatus.func_222599_a(p_217233_3_);
       ChunkHolder chunkholder = this.func_217213_a(i);
-      if (p_217233_4_) {
+      // CraftBukkit start - don't add new ticket for currently unloading chunk
+      boolean currentlyUnloading = false;
+      if (chunkholder != null) {
+         ChunkHolder.LocationType oldChunkState = ChunkHolder.func_219286_c(chunkholder.field_219316_k);
+         ChunkHolder.LocationType currentChunkState = ChunkHolder.func_219286_c(chunkholder.func_219299_i());
+         currentlyUnloading = (oldChunkState.func_219065_a(ChunkHolder.LocationType.BORDER) && !currentChunkState.func_219065_a(ChunkHolder.LocationType.BORDER));
+      }
+      if (p_217233_4_ && !currentlyUnloading) {
+         // CraftBukkit end
          this.field_217240_d.func_219356_a(TicketType.field_219494_g, chunkpos, j, chunkpos);
          if (this.func_217224_a(chunkholder, j)) {
             IProfiler iprofiler = this.field_73251_h.func_217381_Z();
@@ -226,7 +_,7 @@
    }
 
    private boolean func_217224_a(@Nullable ChunkHolder p_217224_1_, int p_217224_2_) {
-      return p_217224_1_ == null || p_217224_1_.func_219299_i() > p_217224_2_;
+      return p_217224_1_ == null || p_217224_1_.field_219316_k > p_217224_2_; // CraftBukkit using oldTicketLevel for isLoaded checks
    }
 
    public boolean func_73149_a(int p_73149_1_, int p_73149_2_) {
@@ -292,7 +_,7 @@
       return this.func_222872_a(i, ChunkHolder::func_219296_a);
    }
 
-   private boolean func_222872_a(long p_222872_1_, Function<ChunkHolder, CompletableFuture<Either<Chunk, ChunkHolder.IChunkLoadingError>>> p_222872_3_) {
+   public boolean func_222872_a(long p_222872_1_, Function<ChunkHolder, CompletableFuture<Either<Chunk, ChunkHolder.IChunkLoadingError>>> p_222872_3_) {
       ChunkHolder chunkholder = this.func_217213_a(p_222872_1_);
       if (chunkholder == null) {
          return false;
@@ -308,11 +_,31 @@
    }
 
    public void close() throws IOException {
+      // CraftBukkit start
       this.func_217210_a(true);
+   }
+
+   public void close(boolean save) throws IOException {
+      if (save) {
+         this.func_217210_a(true);
+      }
+      // CraftBukkit end
       this.field_217242_h.close();
       this.field_217237_a.close();
    }
 
+   // CraftBukkit start - modelled on below
+   public void purgeUnload() {
+      this.field_73251_h.func_217381_Z().func_76320_a("purge");
+      this.field_217240_d.func_219340_a();
+      this.func_217235_l();
+      this.field_73251_h.func_217381_Z().func_219895_b("unload");
+      this.field_217237_a.func_219204_a(() -> true);
+      this.field_73251_h.func_217381_Z().func_76319_b();
+      this.func_222869_l();
+   }
+   // CraftBukkit end
+
    public void func_217207_a(BooleanSupplier p_217207_1_) {
       this.field_73251_h.func_217381_Z().func_76320_a("purge");
       this.field_217240_d.func_219340_a();
@@ -331,11 +_,11 @@
       this.field_217245_k = i;
       IWorldInfo iworldinfo = this.field_73251_h.func_72912_H();
       boolean flag = this.field_73251_h.func_234925_Z_();
-      boolean flag1 = this.field_73251_h.func_82736_K().func_223586_b(GameRules.field_223601_d);
+      boolean flag1 = this.field_73251_h.func_82736_K().func_223586_b(GameRules.field_223601_d) && !field_73251_h.func_217369_A().isEmpty(); //CraftBukkit
       if (!flag) {
          this.field_73251_h.func_217381_Z().func_76320_a("pollingChunks");
          int k = this.field_73251_h.func_82736_K().func_223592_c(GameRules.field_223610_m);
-         boolean flag2 = iworldinfo.func_82573_f() % 400L == 0L;
+         boolean flag2 = iworldinfo.func_82573_f() % 400 == 0L; // TODO: Mohist - Refresh the velocity anomaly
          this.field_73251_h.func_217381_Z().func_76320_a("naturalSpawnCount");
          int l = this.field_217240_d.func_219358_b();
          WorldEntitySpawner.EntityDensityManager worldentityspawner$entitydensitymanager = WorldEntitySpawner.func_234964_a_(l, this.field_73251_h.func_241136_z_(), this::func_241098_a_);
@@ -353,9 +_,9 @@
                if (optional1.isPresent()) {
                   Chunk chunk = optional1.get();
                   ChunkPos chunkpos = p_241099_7_.func_219277_h();
-                  if (!this.field_217237_a.func_219243_d(chunkpos)) {
+                  if (!this.field_217237_a.func_219243_d(chunkpos) || field_217237_a.func_219246_e().shouldForceTicks(chunkpos.func_201841_a())) {
                      chunk.func_177415_c(chunk.func_177416_w() + j);
-                     if (flag1 && (this.field_217246_l || this.field_217247_m) && this.field_73251_h.func_175723_af().func_177730_a(chunk.func_76632_l())) {
+                     if (flag1 && (this.field_217246_l || this.field_217247_m) && this.field_73251_h.func_175723_af().func_177730_a(chunk.func_76632_l()) && !this.field_217237_a.isOutsideOfRange(chunkpos, true)) { // Spigot
                         WorldEntitySpawner.func_234979_a_(this.field_73251_h, chunk, worldentityspawner$entitydensitymanager, this.field_217247_m, this.field_217246_l, flag2);
                      }
 
@@ -397,6 +_,10 @@
       return this.field_186029_c;
    }
 
+   public ChunkGenerator setGenerator(ChunkGenerator generator) {
+      return this.field_186029_c = generator;
+   }
+
    public int func_73152_e() {
       return this.field_217237_a.func_219194_d();
    }
@@ -427,6 +_,14 @@
 
    public <T> void func_217222_b(TicketType<T> p_217222_1_, ChunkPos p_217222_2_, int p_217222_3_, T p_217222_4_) {
       this.field_217240_d.func_219362_d(p_217222_1_, p_217222_2_, p_217222_3_, p_217222_4_);
+   }
+
+   public <T> void registerTickingTicket(TicketType<T> type, ChunkPos pos, int distance, T value) {
+      this.field_217240_d.registerTicking(type, pos, distance, value);
+   }
+
+   public <T> void releaseTickingTicket(TicketType<T> type, ChunkPos pos, int distance, T value) {
+      this.field_217240_d.releaseTicking(type, pos, distance, value);
    }
 
    public void func_217206_a(ChunkPos p_217206_1_, boolean p_217206_2_) {

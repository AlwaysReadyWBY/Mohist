--- a/net/minecraft/commands/arguments/selector/EntitySelectorParser.java
+++ b/net/minecraft/commands/arguments/selector/EntitySelectorParser.java
@@ -11,6 +_,7 @@
 import java.util.List;
 import java.util.UUID;
 import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.function.BiConsumer;
 import java.util.function.BiFunction;
 import java.util.function.Consumer;
@@ -194,8 +_,12 @@
         };
     }
 
+    // Mohist start
+    protected AtomicBoolean overridePermissions = new AtomicBoolean(true);
+
     protected void parseSelector() throws CommandSyntaxException {
-        this.usesSelectors = true;
+        this.usesSelectors = !overridePermissions.getAndSet(true);
+        // Mohist end
         this.suggestions = this::suggestSelector;
         if (!this.reader.canRead()) {
             throw ERROR_MISSING_SELECTOR_TYPE.createWithContext(this.reader);
@@ -453,6 +_,11 @@
             }
 
             this.reader.skip();
+
+            var forgeSelector = net.minecraftforge.common.command.EntitySelectorManager.parseSelector(this);
+            if (forgeSelector != null) {
+                return forgeSelector;
+            }
             this.parseSelector();
         } else {
             this.parseNameOrUUID();
@@ -462,12 +_,20 @@
         return this.getSelector();
     }
 
+    // Mohist start
+    public EntitySelector parse(boolean overridePermissions) throws CommandSyntaxException {
+        this.overridePermissions.set(overridePermissions);
+        return parse();
+    }
+    // Mohist end
+
     private static void fillSelectorSuggestions(SuggestionsBuilder p_121248_) {
         p_121248_.suggest("@p", Component.translatable("argument.entity.selector.nearestPlayer"));
         p_121248_.suggest("@a", Component.translatable("argument.entity.selector.allPlayers"));
         p_121248_.suggest("@r", Component.translatable("argument.entity.selector.randomPlayer"));
         p_121248_.suggest("@s", Component.translatable("argument.entity.selector.self"));
         p_121248_.suggest("@e", Component.translatable("argument.entity.selector.allEntities"));
+        net.minecraftforge.common.command.EntitySelectorManager.fillSelectorSuggestions(p_121248_);
     }
 
     private CompletableFuture<Suggestions> suggestNameOrSelector(SuggestionsBuilder p_121287_, Consumer<SuggestionsBuilder> p_121288_) {

--- a/net/minecraft/core/dispenser/DefaultDispenseItemBehavior.java
+++ b/net/minecraft/core/dispenser/DefaultDispenseItemBehavior.java
@@ -6,9 +_,25 @@
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.DispenserBlock;
+import org.bukkit.craftbukkit.v1_20_R3.block.CraftBlock;
+import org.bukkit.craftbukkit.v1_20_R3.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.v1_20_R3.util.CraftVector;
+import org.bukkit.event.block.BlockDispenseEvent;
 
 public class DefaultDispenseItemBehavior implements DispenseItemBehavior {
-   public final ItemStack dispense(BlockSource p_123391_, ItemStack p_123392_) {
+
+   // CraftBukkit start // Mohist TODO super();
+   private boolean dropper = true;
+
+   public DefaultDispenseItemBehavior() {
+      this(true);
+   }
+
+   public DefaultDispenseItemBehavior(boolean dropper) {
+      this.dropper = dropper;
+   }
+
+  public final ItemStack dispense(BlockSource p_123391_, ItemStack p_123392_) {
       ItemStack itemstack = this.execute(p_123391_, p_123392_);
       this.playSound(p_123391_);
       this.playAnimation(p_123391_, p_123391_.state().getValue(DispenserBlock.FACING));
@@ -19,7 +_,11 @@
       Direction direction = p_301824_.state().getValue(DispenserBlock.FACING);
       Position position = DispenserBlock.getDispensePosition(p_301824_);
       ItemStack itemstack = p_123386_.split(1);
-      spawnItem(p_301824_.level(), itemstack, 6, direction, position);
+      // CraftBukkit start
+      if (!spawnItem(p_301824_.level(), itemstack, 6, direction, p_301824_, dropper)){
+         itemstack.grow(1);
+      }
+      // CraftBukkit end
       return p_123386_;
    }
 
@@ -38,6 +_,59 @@
       itementity.setDeltaMovement(p_123379_.random.triangle((double)p_123382_.getStepX() * d3, 0.0172275D * (double)p_123381_), p_123379_.random.triangle(0.2D, 0.0172275D * (double)p_123381_), p_123379_.random.triangle((double)p_123382_.getStepZ() * d3, 0.0172275D * (double)p_123381_));
       p_123379_.addFreshEntity(itementity);
    }
+
+   // Mohist start TODO
+   // CraftBukkit start
+   public static boolean spawnItem(Level pLevel, ItemStack pStack, int pSpeed, Direction pFacing, BlockSource isourceblock, boolean dropper) {
+      if (pStack.isEmpty()) return true;
+      Position iposition = DispenserBlock.getDispensePosition(isourceblock);
+      // CraftBukkit end
+      double d0 = iposition.x();
+      double d1 = iposition.y();
+      double d2 = iposition.z();
+      if (pFacing.getAxis() == Direction.Axis.Y) {
+         d1 -= 0.125D;
+      } else {
+         d1 -= 0.15625D;
+      }
+
+      ItemEntity itementity = new ItemEntity(pLevel, d0, d1, d2, pStack);
+      double d3 = pLevel.random.nextDouble() * 0.1D + 0.2D;
+      itementity.setDeltaMovement(pLevel.random.triangle((double)pFacing.getStepX() * d3, 0.0172275D * (double)pSpeed), pLevel.random.triangle(0.2D, 0.0172275D * (double)pSpeed), pLevel.random.triangle((double)pFacing.getStepZ() * d3, 0.0172275D * (double)pSpeed));
+
+      // CraftBukkit start
+      org.bukkit.block.Block block = CraftBlock.at(pLevel, isourceblock.pos());
+      CraftItemStack craftItem = CraftItemStack.asCraftMirror(pStack);
+
+      BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), CraftVector.toBukkit(itementity.getDeltaMovement()));
+      if (!DispenserBlock.eventFired) {
+         pLevel.getCraftServer().getPluginManager().callEvent(event);
+      }
+
+      if (event.isCancelled()) {
+         return false;
+      }
+
+      itementity.setItem(CraftItemStack.asNMSCopy(event.getItem()));
+      itementity.setDeltaMovement(CraftVector.toNMS(event.getVelocity()));
+
+      if (!dropper && !event.getItem().getType().equals(craftItem.getType())) {
+         // Chain to handler for new item
+         ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+         DispenseItemBehavior idispensebehavior = DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+         if (idispensebehavior != DispenseItemBehavior.NOOP && idispensebehavior.getClass() != DefaultDispenseItemBehavior.class) {
+            idispensebehavior.dispense(isourceblock, eventStack);
+         } else {
+            pLevel.addFreshEntity(itementity);
+         }
+         return false;
+      }
+
+      pLevel.addFreshEntity(itementity);
+      return true;
+   }
+   // CraftBukkit end
+   // Mohist end
 
    protected void playSound(BlockSource p_123384_) {
       p_123384_.level().levelEvent(1000, p_123384_.pos(), 0);

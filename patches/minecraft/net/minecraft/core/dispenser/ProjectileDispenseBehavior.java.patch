--- a/net/minecraft/core/dispenser/ProjectileDispenseBehavior.java
+++ b/net/minecraft/core/dispenser/ProjectileDispenseBehavior.java
@@ -8,6 +_,9 @@
 import net.minecraft.world.item.ProjectileItem;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.DispenserBlock;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
 
 public class ProjectileDispenseBehavior extends DefaultDispenseItemBehavior {
     private final ProjectileItem projectileItem;
@@ -28,17 +_,41 @@
         Direction direction = p_334330_.state().getValue(DispenserBlock.FACING);
         Position position = this.dispenseConfig.positionFunction().getDispensePosition(p_334330_, direction);
         Projectile projectile = this.projectileItem.asProjectile(level, position, p_328814_, direction);
+
+        ItemStack itemstack1 = p_328814_.split(1);
+        org.bukkit.block.Block block = CraftBlock.at(level, p_334330_.pos());
+        CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+
+        BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector((double) direction.getStepX(), (double) direction.getStepY(), (double) direction.getStepZ()));
+        if (!DispenserBlock.eventFired) {
+            level.getCraftServer().getPluginManager().callEvent(event);
+        }
+
+        if (event.isCancelled()) {
+            p_328814_.grow(1);
+            return p_328814_;
+        }
+
+        if (!event.getItem().equals(craftItem)) {
+            p_328814_.grow(1);
+            // Chain to handler for new item
+            ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+            DispenseItemBehavior idispensebehavior = (DispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+            if (idispensebehavior != DispenseItemBehavior.NOOP && idispensebehavior != this) {
+                idispensebehavior.dispense(p_334330_, eventStack);
+                return p_328814_;
+            }
+        }
         this.projectileItem
             .shoot(
                 projectile,
-                (double)direction.getStepX(),
-                (double)direction.getStepY(),
-                (double)direction.getStepZ(),
+                event.getVelocity().getX(),
+                event.getVelocity().getY(),
+                event.getVelocity().getZ(),
                 this.dispenseConfig.power(),
                 this.dispenseConfig.uncertainty()
             );
         level.addFreshEntity(projectile);
-        p_328814_.shrink(1);
         return p_328814_;
     }
 

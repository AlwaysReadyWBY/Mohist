--- a/net/minecraft/world/entity/player/EntityHuman.java
+++ b/net/minecraft/world/entity/player/EntityHuman.java
@@ -946,8 +1039,13 @@
         }
     }
 
+    // CraftBukkit start
     @Override
-    protected void actuallyHurt(DamageSource damagesource, float f) {
+    protected boolean actuallyHurt(DamageSource damagesource, float f) { // void -> boolean
+        if (true) {
+            return super.actuallyHurt(damagesource, f);
+        }
+        // CraftBukkit end
         if (!this.isInvulnerableTo(damagesource)) {
             f = this.getDamageAfterArmorAbsorb(damagesource, f);
             f = this.getDamageAfterMagicAbsorb(damagesource, f);
@@ -962,7 +1060,7 @@
             }
 
             if (f != 0.0F) {
-                this.causeFoodExhaustion(damagesource.getFoodExhaustion());
+                this.causeFoodExhaustion(damagesource.getFoodExhaustion(), EntityExhaustionEvent.ExhaustionReason.DAMAGED); // CraftBukkit - EntityExhaustionEvent
                 this.getCombatTracker().recordDamage(damagesource, f);
                 this.setHealth(this.getHealth() - f);
                 if (f < 3.4028235E37F) {
@@ -972,6 +1070,7 @@
                 this.gameEvent(GameEvent.ENTITY_DAMAGE);
             }
         }
+        return false; // CraftBukkit
     }
 
     @Override
@@ -1127,10 +1226,16 @@
 
                 f *= 0.2F + f2 * f2 * 0.8F;
                 f1 *= f2;
-                this.resetAttackStrengthTicker();
+                // this.resetAttackStrengthTicker(); // CraftBukkit - Moved to EntityLiving to reset the cooldown after the damage is dealt
                 if (entity.getType().is(TagsEntity.REDIRECTABLE_PROJECTILE) && entity instanceof IProjectile) {
                     IProjectile iprojectile = (IProjectile) entity;
 
+                    // CraftBukkit start
+                    DamageSource damagesource = this.damageSources().playerAttack(this);
+                    if (CraftEventFactory.handleNonLivingEntityDamageEvent(entity, damagesource, f1, false)) {
+                        return;
+                    }
+                    // CraftBukkit end
                     iprojectile.deflect(ProjectileDeflection.AIM_DEFLECT, this, this, true);
                 } else {
                     if (f > 0.0F || f1 > 0.0F) {
@@ -1171,8 +1276,15 @@
                         if (entity instanceof EntityLiving) {
                             f3 = ((EntityLiving) entity).getHealth();
                             if (j > 0 && !entity.isOnFire()) {
-                                flag4 = true;
-                                entity.igniteForSeconds(1);
+                                // CraftBukkit start - Call a combust event when somebody hits with a fire enchanted item
+                                EntityCombustByEntityEvent combustEvent = new EntityCombustByEntityEvent(this.getBukkitEntity(), entity.getBukkitEntity(), 1);
+                                org.bukkit.Bukkit.getPluginManager().callEvent(combustEvent);
+
+                                if (!combustEvent.isCancelled()) {
+                                    flag4 = true;
+                                    entity.igniteForSeconds(combustEvent.getDuration(), false);
+                                }
+                                // CraftBukkit end
                             }
                         }
 
@@ -1182,7 +1294,7 @@
                         if (flag5) {
                             if (i > 0) {
                                 if (entity instanceof EntityLiving) {
-                                    ((EntityLiving) entity).knockback((double) ((float) i * 0.5F), (double) MathHelper.sin(this.getYRot() * 0.017453292F), (double) (-MathHelper.cos(this.getYRot() * 0.017453292F)));
+                                    ((EntityLiving) entity).knockback((double) ((float) i * 0.5F), (double) MathHelper.sin(this.getYRot() * 0.017453292F), (double) (-MathHelper.cos(this.getYRot() * 0.017453292F)), this, EntityKnockbackEvent.KnockbackCause.ENTITY_ATTACK); // CraftBukkit
                                 } else {
                                     entity.push((double) (-MathHelper.sin(this.getYRot() * 0.017453292F) * (float) i * 0.5F), 0.1D, (double) (MathHelper.cos(this.getYRot() * 0.017453292F) * (float) i * 0.5F));
                                 }
@@ -1200,8 +1312,11 @@
                                     EntityLiving entityliving = (EntityLiving) iterator.next();
 
                                     if (entityliving != this && entityliving != entity && !this.isAlliedTo((Entity) entityliving) && (!(entityliving instanceof EntityArmorStand) || !((EntityArmorStand) entityliving).isMarker()) && this.distanceToSqr((Entity) entityliving) < 9.0D) {
-                                        entityliving.knockback(0.4000000059604645D, (double) MathHelper.sin(this.getYRot() * 0.017453292F), (double) (-MathHelper.cos(this.getYRot() * 0.017453292F)));
-                                        entityliving.hurt(this.damageSources().playerAttack(this), f4);
+                                        // CraftBukkit start - Only apply knockback if the damage hits
+                                        if (entityliving.hurt(this.damageSources().playerAttack(this).sweep(), f4)) {
+                                            entityliving.knockback(0.4000000059604645D, (double) MathHelper.sin(this.getYRot() * 0.017453292F), (double) (-MathHelper.cos(this.getYRot() * 0.017453292F)), this, EntityKnockbackEvent.KnockbackCause.SWEEP_ATTACK); // CraftBukkit
+                                        }
+                                        // CraftBukkit end
                                     }
                                 }
